<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>狮s on Continuous  Delivery</title>
    <link>http://blog.mingguilu.com/%E7%8B%AE/</link>
    <description>Recent content in 狮s on Continuous  Delivery</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Copyright (c) 2016 - 2021, MingguiLu; all rights reserved.</copyright>
    <lastBuildDate>Tue, 14 Feb 2017 11:57:04 +0800</lastBuildDate>
    <atom:link href="http://blog.mingguilu.com/%E7%8B%AE/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Hugo&#43;GithubPages&#43;Markdown的使用文档</title>
      <link>http://blog.mingguilu.com/%E7%8B%AE/jennych_github_io%E5%92%8Cjennych_blog_hugo%E4%BD%BF%E7%94%A8%E6%96%87%E6%A1%A3/</link>
      <pubDate>Tue, 14 Feb 2017 11:57:04 +0800</pubDate>
      
      <guid>http://blog.mingguilu.com/%E7%8B%AE/jennych_github_io%E5%92%8Cjennych_blog_hugo%E4%BD%BF%E7%94%A8%E6%96%87%E6%A1%A3/</guid>
      <description>

&lt;h3 id=&#34;一-准备:1e59df824acc334119f8c992e9445095&#34;&gt;一  准备&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.mingguilu.com/media/hugo_github_markdown.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h4 id=&#34;1-hugo:1e59df824acc334119f8c992e9445095&#34;&gt;1. Hugo&lt;/h4&gt;

&lt;h5 id=&#34;简述:1e59df824acc334119f8c992e9445095&#34;&gt;简述:&lt;/h5&gt;

&lt;p&gt;Hugo是由Go语言实现的静态网站生成器。其特点是：简单、易用、高效、易扩展、快速部署。　&lt;/p&gt;

&lt;p&gt;官方网站：&lt;a href=&#34;http://gohugo.io/&#34;&gt;http://gohugo.io/&lt;/a&gt;&lt;/p&gt;

&lt;h5 id=&#34;安装:1e59df824acc334119f8c992e9445095&#34;&gt;安装:&lt;/h5&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/spf13/hugo/releases&#34;&gt;下载适用的windows的hugo_x.xx.x_Windows-64bit.zip&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;解压后重命名为&lt;code&gt;hugo.exe&lt;/code&gt;并存放在c:\Program Files\hugo，并把路径添加到系统环境变量Path中，然后再cmd中输入&lt;code&gt;hugo version&lt;/code&gt;测试是否可用&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;gt;　hugo version
Hugo Static Site Generator v0.16 BuildDate: 2016-06-06T08:33:34+08:00
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;2-github-pages:1e59df824acc334119f8c992e9445095&#34;&gt;2.  Github pages　&lt;/h4&gt;

&lt;h5 id=&#34;简述-1:1e59df824acc334119f8c992e9445095&#34;&gt;简述：&lt;/h5&gt;

&lt;p&gt;&lt;a href=&#34;https://git-scm.com/&#34;&gt;Git&lt;/a&gt;是一款免费、开源的分布式版本控制系统，用于敏捷高效地处理任何或小或大的项目&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/&#34;&gt;GitHub&lt;/a&gt; 是一个面向开源及私有软件项目的托管平台，只支持 Git 作为唯一的版本库格式进行托管&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://pages.github.com/&#34;&gt;Github pages&lt;/a&gt;用于将托管在Github上的项目发布位个人主页网站或项目主页网站&lt;/p&gt;

&lt;h5 id=&#34;安装git:1e59df824acc334119f8c992e9445095&#34;&gt;安装Git&lt;/h5&gt;

&lt;p&gt;&lt;a href=&#34;https://git-scm.com/downloads&#34;&gt;下载Git for windows&lt;/a&gt;，以默认选项安装，在桌面双击运行&lt;code&gt;Git Bash&lt;/code&gt;&lt;/p&gt;

&lt;h5 id=&#34;创建github仓库:1e59df824acc334119f8c992e9445095&#34;&gt;创建Github仓库&lt;/h5&gt;

&lt;p&gt;在&lt;code&gt;Repositories&lt;/code&gt;页面点击&lt;code&gt;New&lt;/code&gt;创建新仓库&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;media/git_jenny_01.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;以下是&lt;code&gt;JennyCh&lt;/code&gt;托管在&lt;code&gt;Github&lt;/code&gt;个人主页和博客项目的仓库&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/jennych/blog&#34;&gt;blog&lt;/a&gt;     托管JennyCh Blog的静态博客网页的仓库&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/jennych/jennych_github_io&#34;&gt;jennych_github_io&lt;/a&gt;           托管JennyCh Blog的Hugo站点源代码的仓库&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/jennych/jennych.github.io&#34;&gt;jennych.github.io&lt;/a&gt;       托管JennyCh个人主页静态网页的仓库&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/jennych/jennych_blog_hugo&#34;&gt;jennych_blog_hugo&lt;/a&gt;       托管JennyCh个人主页的站点源代码的仓库&lt;/p&gt;

&lt;h5 id=&#34;启用ｇithub-pages:1e59df824acc334119f8c992e9445095&#34;&gt;启用Ｇithub Pages&lt;/h5&gt;

&lt;p&gt;个人主页：例如&lt;a href=&#34;https://jennych.github.io&#34;&gt;https://jennych.github.io&lt;/a&gt; ，创建&lt;code&gt;Ｇithub帐号.github.io&lt;/code&gt;的仓库，并上传个人主页静态页面项目即可&lt;/p&gt;

&lt;p&gt;项目主页：例如&lt;a href=&#34;https://jennych.github.io/blog/&#34;&gt;https://jennych.github.io/blog/&lt;/a&gt; ，创建随意名称的仓库，并上传项目的静态页面，并开启Ｇithub Pages，&lt;code&gt;settings&lt;/code&gt;－－&amp;gt;&lt;code&gt;Ｇithub Pages&lt;/code&gt;－－&amp;gt;&lt;code&gt;Source&lt;/code&gt;－－&amp;gt;&lt;code&gt;master branch&lt;/code&gt;－－&amp;gt; &lt;code&gt;Save&lt;/code&gt;，即可访问项目主页&lt;code&gt;https://Github帐号.github.io/项目仓库名/&lt;/code&gt;&lt;/p&gt;

&lt;h4 id=&#34;3-markdown:1e59df824acc334119f8c992e9445095&#34;&gt;3. Markdown&lt;/h4&gt;

&lt;p&gt;Markdown 是一种轻量级的「标记语言」，它拥有很多优点，语法简洁明了、学习容易，而且功能比纯文本更强，导出格式随心所欲，因此有很多人用它写博客&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://markdownpad.com/&#34;&gt;MarkdownPad&lt;/a&gt; 是Windows下的一个多功能Markdown编辑器&lt;/p&gt;

&lt;h3 id=&#34;二-使用hugo:1e59df824acc334119f8c992e9445095&#34;&gt;二　使用Hugo&lt;/h3&gt;

&lt;p&gt;创建Hugo静态站点&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;hugo new site 站点名称

$ hugo new site  my_website
Congratulations! Your new Hugo site is created in &amp;quot;D:\\Hellolworld\\my_website&amp;quot;.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;添加网站主题&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ cd my_website/themes/

$ git clone https://github.com/christianmendoza/hugo-smpl-theme
Cloning into &#39;hugo-smpl-theme&#39;...
remote: Counting objects: 78, done.
remote: Compressing objects: 100% (55/55), done.
remote: Total 78 (delta 17), reused 78 (delta 17), pack-reused 0
Unpacking objects: 100% (78/78), done.

$ cd ..
$ pwd
/d/Hellolworld/my_website

$ ls themes/hugo-smpl-theme/
archetypes/   images/   LICENSE    static/
exampleSite/  layouts/  README.md  theme.toml

$ cp themes/hugo-smpl-theme/exampleSite/config.toml  .
# config.toml 为站点的配置文件
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;新建文章&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;hugo new  路径/文章名称.md

$ hugo new post/技术文章/第一篇技术文章.md
D:\Hellolworld\my_website\content\post\技术文章\第一篇技术文章.md created
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;测试Hugo静态站点&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;hugo  server  -t=主题名称
# 如果已将theme文件覆盖到站点根目录，无需使用-t指定主题文件，hugo server即可

$ hugo  server  -t=hugo-smpl-theme   -w
Started building site
0 of 1 draft rendered
0 future content
0 pages created
0 non-page files copied
0 paginator pages created
0 tags created
0 categories created
in 7 ms
Watching for changes in D:\Hellolworld\my_website\{data,content,layouts,static,themes}
Serving pages from memory
Web Server is available at http://localhost:1313/ (bind address 127.0.0.1)
Press Ctrl+C to stop
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;生成静态页面&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# hugo命令用于将当前站点转换为静态页面，并自动保存在public目录下

$ hugo
Started building site
0 of 1 draft rendered
0 future content
1 pages created
0 non-page files copied
0 paginator pages created
0 tags created
0 categories created
in 46 ms

$ ls public/
404.html  assets/  index.html  index.xml  post/  sitemap.xml
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;三-使用git-克隆和提交代码:1e59df824acc334119f8c992e9445095&#34;&gt;三　使用Git 克隆和提交代码&lt;/h3&gt;

&lt;p&gt;以下内容以JennyCh Blog的站点为例&lt;/p&gt;

&lt;h4 id=&#34;1-从github远程仓库克隆jennych-blog的站点源代码:1e59df824acc334119f8c992e9445095&#34;&gt;1. 从Github远程仓库克隆JennyCh Blog的站点源代码&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;git clone Ｇithub远程仓库地址
#Github远程仓库地址分为两种：https和ssh ，可以在仓库主页中点开&amp;quot;Clone or Download&amp;quot;，点击`Use Https`或`Use SSH`可分别查看仓库地址
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.mingguilu.com/media/git_jenny_02.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ git clone git@github.com:jennych/jennych_blog_hugo.git
Cloning into &#39;jennych_blog_hugo&#39;...
remote: Counting objects: 151, done.
remote: Compressing objects: 100% (131/131), done.
remote: Total 151 (delta 10), reused 151 (delta 10), pack-reused 0
Receiving objects: 100% (151/151), 4.25 MiB | 124.00 KiB/s, done.
Resolving deltas: 100% (10/10), done.

$ cd jennych_blog_hugo/

$ ls
archetypes/  content/      images/   LICENSE.md  static/
config.toml  exampleSite/  layouts/  README.md   theme.toml
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;2-从github远程仓库克隆jennych-blog的静态网页:1e59df824acc334119f8c992e9445095&#34;&gt;2. 从Github远程仓库克隆JennyCh Blog的静态网页&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;git clone Ｇithub远程仓库地址 public
# 将JennyCh Blog的静态页面仓库克隆到本地，并重命名为public

$ git  clone  git@github.com:jennych/blog.git  public
Cloning into &#39;public&#39;...
remote: Counting objects: 169, done.
remote: Compressing objects: 100% (113/113), done.
remote: Total 169 (delta 41), reused 169 (delta 41), pack-reused 0
Receiving objects: 100% (169/169), 3.84 MiB | 124.00 KiB/s, done.
Resolving deltas: 100% (41/41), done.

$ ls public/
404.html  categories/  fancybox/  font/       img/        js/    sitemap.xml
about/    css/         feed.xml   highlight/  index.html  post/  tags/
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;3-推送本地git版本至github远程仓库:1e59df824acc334119f8c992e9445095&#34;&gt;3. 推送本地Git版本至Github远程仓库&lt;/h4&gt;

&lt;p&gt;当修改站点源代码或文章内容后，将修改内容提交为新版本，并上传到Github远程仓库&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ pwd
/d/Hellolworld/jennych_blog_hugo

$ git add -A
# 把修改内容提交到Git缓存区

$ git commit -m &amp;quot;xxxx&amp;quot;
# 把Git缓存区的内容提交为Git新版本，`-m &amp;quot;xxxx&amp;quot; `为本次提交的版本的简述，如果不加`-m`参数，会进入编辑描述信息的状态

$ git push origin master
# 将本地新版本推送到Github远程仓库

$ hugo
# 将修改后的代码和文章转换生成新的静态页面
Started building site
0 draft content
0 future content
6 pages created
0 non-page files copied
0 paginator pages created
3 tags created
2 categories created
in 668 ms

$ cd public/
# 进入public目录,public目录存放着转换生成后的静态页面

$ pwd
/d/Hellolworld/jennych_blog_hugo/public

$ git add -A
# 把新生成的内容提交到Git缓存区

$ git commit -m &amp;quot;xxxx&amp;quot;
# 把Git缓存区的内容提交为Git新版本，`-m &amp;quot;xxxx&amp;quot; `为本次提交的版本的简述，如果不加`-m`参数，会进入编辑描述信息的状态

$ git push origin master
# 将本地新版本推送到Github远程仓库
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;推送完成，访问&lt;a href=&#34;https://jennych.github.io/blog/&#34;&gt;https://jennych.github.io/blog/&lt;/a&gt;即可看到新内容&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Linux软件安装与维护</title>
      <link>http://blog.mingguilu.com/%E7%8B%AE/Linux%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85%E4%B8%8E%E7%BB%B4%E6%8A%A4/</link>
      <pubDate>Fri, 30 Dec 2016 09:09:19 +0800</pubDate>
      
      <guid>http://blog.mingguilu.com/%E7%8B%AE/Linux%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85%E4%B8%8E%E7%BB%B4%E6%8A%A4/</guid>
      <description>

&lt;h3 id=&#34;1-使用软件源码包:9667daa69c84529bfb2ccc8da43c9833&#34;&gt;1. 使用软件源码包&lt;/h3&gt;

&lt;h3 id=&#34;2-debian-ubuntu:9667daa69c84529bfb2ccc8da43c9833&#34;&gt;2. Debian/Ubuntu&lt;/h3&gt;

&lt;p&gt;Debian系Linux发行版的软件包格式为deb&lt;/p&gt;

&lt;h4 id=&#34;2-1-dpkg:9667daa69c84529bfb2ccc8da43c9833&#34;&gt;2.1 dpkg&lt;/h4&gt;

&lt;p&gt;dpkg的是基于Debian系统的一个低级包管理器。它可以安装，删除，提供有关资料，以及建立*.deb包，但它不能自动下载并安装它们相应的依赖包。&lt;/p&gt;

&lt;p&gt;查看帮助&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;dpkg --help
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;查看指定软件包的信息&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;dpkg -I 下载/Software/vivaldi-stable_1.6.689.46-1_amd64.deb 

#以Vivaldi浏览器deb安装包为例
##必须使用软件包的完整名称
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;列出指定软件包里的文件目录&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;dpkg -c 下载/Software/vivaldi-stable_1.6.689.46-1_amd64.deb

#必须使用软件包的完整名称
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;安装deb软件包&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;dpkg -i vivaldi-stable_1.6.689.46-1_amd64.deb
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;列出所有已安装的软件包&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;dpkg -l
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;查询是否已安装指定软件包&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;dpkg -l vivaldi-stable

#即可看到软件名称、版本、架构、描述信息
#注意软件名称必须正确，比如查询“vivaldi”就会提示“dpkg-query: 没有找到与 vivaldi 相匹配的软件包”
#当不能确认完整的软件包名称，可以再输入“vivaldi”后，按“Tab”键，会列出所有相关包名称
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;查看已安装的软件包的详细信息&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;dpkg -s vivaldi-stable

#同上，必须指定软件名称“vivaldi-stable”，而不能用原始的软件包名称“vivaldi-stable_1.6.689.46-1_amd64.deb”
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;列出指定软件包安装后的所有文件&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;dpkg -L vivaldi-stable 

#同上
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;卸载软件包（保留配置文件）&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;dpkg -r vivaldi-stable

#同上，必须指定软件名称“vivaldi-stable”，而不能用原始的软件包名称“vivaldi-stable_1.6.689.46-1_amd64.deb”
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;卸载软件包（删除配置文件）&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;dpkg -p vivaldi-stable

#有些软件包卸载后还会遗留一些配置文件，使用`-p`就像在windows上卸载软件时勾选上“同时清除用户配置文件”
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;安装指定目录及其子目录下所有的“.deb”包&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;dpkg -R --install debpackages/

# -R 参数表示递归，指定目录和子目录下所有的.deb包都将被安装
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;释放软件包，但不配置&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;dpkg --unpack vivaldi-stable_1.6.689.46-1_amd64.deb
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;重新配置软件包&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;dpkg --configure 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;替换软件包信息&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;dpkg --update-avail 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;清除包的当前可用信息&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;dpkg --clear-avail
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;丢弃所有不能安装和不可用软件包的信息&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;dpkg --forget-old-unavail
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;显示版本&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;dpkg --version
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;2-2-apt-cache-apt-get:9667daa69c84529bfb2ccc8da43c9833&#34;&gt;2.2 apt-cache、apt-get&lt;/h4&gt;

&lt;h5 id=&#34;2-2-1-apt-cache:9667daa69c84529bfb2ccc8da43c9833&#34;&gt;2.2.1 apt-cache&lt;/h5&gt;

&lt;p&gt;apt-cache是Linux下的apt软件包管理工具，使用它能查询到apt的二进制软件包缓存文件,结合一些参数使用能查寻到软件包信息和软件包依赖关系等&lt;/p&gt;

&lt;p&gt;列出所有软件包的名称&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;apt-cache pkgnames
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;列出所有以指定字符开头的软件包&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;apt-cache pkgnames apache2

#以“apache2”为例
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;列出包含指定关键字的软件包和简介&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;apt-cache search apache2
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;以便于阅读的格式介绍该软件包&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;apt-cache show apache2
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;查询软件包的依赖关系&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;apt-cache showpkg apache2
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;统计全部软件包的信息&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;apt-cache stats
&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;2-2-2-apt-get:9667daa69c84529bfb2ccc8da43c9833&#34;&gt;2.2.2 apt-get&lt;/h5&gt;

&lt;p&gt;apt-get是Debian及其衍生版的高级包管理器，并提供命令行方式来从多个来源检索和安装软件包，其中包括解决依赖性。和dpkg不同的是，apt-get不是直接基于.deb文件工作，而是基于软件包的正确名称。&lt;/p&gt;

&lt;p&gt;更新软件源（/etc/apt/source.list）&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get update
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;升级已安装的所有软件包（不管依赖性，不添加包，也不删除包）&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get upgrade
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;升级已安装的所有软件包（根据依赖关系的变化，添加包或删除包）&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get dist-upgrade 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;安装指定的软件包&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install apache2

#以“apache2”为例
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;安装多个软件包&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install apache2 mysql-server php5

#同时安装“apache2”、&amp;quot;mysql-server&amp;quot;、&amp;quot;php5&amp;quot;，并解决依赖性
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;安装包含指定字符串的软件包&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install &#39;*name*&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;安装软件包但不升级&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install packageName --no-upgrade
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;安装指定名称和版本的软件包&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install apache2=2.4.18-2ubuntu3.1
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;卸载软件包但不清除配置文件&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get remove apache2
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;卸载软件包同时清除配置文件&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get purge apaceh2
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;或者&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get remove --purge apache2
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;清理本地软件仓库&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get clean
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;仅下载指定软件源码包&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get --download-only source apache2
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;下载指定软件包并解包&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get source apache2
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;同时下载、解包并编译软件包&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get --compile source apache2
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;仅下载不安装软件包&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get download apache2
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;查看软件包版本变更日志&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get changelog apache2
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;检查是否有损坏的依赖关系&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get check
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;建立指定软件包的编译环境&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get build-dep apache2

#为手工编译软件apache2,提前把编译过程中需要用的软件包先安装配置好
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;将已经删除了的软件包的.deb安装文件从硬盘中删除掉&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get autoclean
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;将已经安装了的所有软件包的.deb包从硬盘中删除掉&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get clean
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;删除为了满足其他软件包的依赖而安装的，但现在不再需要的软件包&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get autoremove apache2
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>打造Ubuntu16.04桌面</title>
      <link>http://blog.mingguilu.com/%E7%8B%AE/%E6%89%93%E9%80%A0Ubuntu16.04%E6%A1%8C%E9%9D%A2/</link>
      <pubDate>Thu, 15 Dec 2016 13:53:45 +0800</pubDate>
      
      <guid>http://blog.mingguilu.com/%E7%8B%AE/%E6%89%93%E9%80%A0Ubuntu16.04%E6%A1%8C%E9%9D%A2/</guid>
      <description>

&lt;h3 id=&#34;1-初始配置:929879312f30c80e44a6461d4788ce26&#34;&gt;1. 初始配置&lt;/h3&gt;

&lt;h4 id=&#34;1-1-ubuntu-16-04新特性:929879312f30c80e44a6461d4788ce26&#34;&gt;1.1 Ubuntu 16.04新特性&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;默认禁用dash在线搜索&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;使用GNOME Software代替Ubuntu软件中心&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;自定义Unity所处位置&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;apt命令升级：apt可代替apt-get&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;支持ZFS文件系统&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;软件更新：Linux4.4 LTS、LibreOffice5.1、Python3.5、Docket1.10&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;1-2-设置root密码:929879312f30c80e44a6461d4788ce26&#34;&gt;1.2 设置root密码&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;sudo passwd root
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;1-3-切换到root用户:929879312f30c80e44a6461d4788ce26&#34;&gt;1.3 切换到root用户&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;su
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;或&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo -i
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;1-4-自定义unity所处位置:929879312f30c80e44a6461d4788ce26&#34;&gt;1.4 自定义Unity所处位置&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;gsettings set com.canonical.Unity.Launcher launcher-position Bottom|Left
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;1-5-查看ubuntu版本:929879312f30c80e44a6461d4788ce26&#34;&gt;1.5 查看Ubuntu版本&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;lsb_release -a
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;1-6-查看内核版本:929879312f30c80e44a6461d4788ce26&#34;&gt;1.6 查看内核版本&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;uname -a
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;1-7-查看硬件驱动:929879312f30c80e44a6461d4788ce26&#34;&gt;1.7 查看硬件驱动&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;lspci
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;1-8-打开终端快捷键:929879312f30c80e44a6461d4788ce26&#34;&gt;1.8 打开终端快捷键&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;Ctrl+Alt+T
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;1-9-切换控制台tty1-tt6:929879312f30c80e44a6461d4788ce26&#34;&gt;1.9 切换控制台tty1-tt6&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;Ctrl+Alt+F1~F6
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;回到桌面&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Ctrl+Alt+F7
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;1-10-网络配置:929879312f30c80e44a6461d4788ce26&#34;&gt;1.10 网络配置&lt;/h4&gt;

&lt;h5 id=&#34;1-10-1-图形化操作:929879312f30c80e44a6461d4788ce26&#34;&gt;1.10.1 图形化操作&lt;/h5&gt;

&lt;p&gt;系统设置——&amp;gt;网络——&amp;gt;有线/无线——&amp;gt;选项——&amp;gt;IPv4设置——&amp;gt;自动(DHCP)/手动&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.mingguilu.com/media/Ubuntu_1_10_1_01.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h5 id=&#34;1-10-2-终端操作:929879312f30c80e44a6461d4788ce26&#34;&gt;1.10.2 终端操作&lt;/h5&gt;

&lt;p&gt;查看网卡配置文件(/etc/network/interfaces)默认配置如下&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ cat /etc/network/interfaces
# interfaces(5) file used by ifup(8) and ifdown(8)
auto lo
iface lo inet loopback
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;配置DHCP自动获取，在配置文件末尾添加：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;auto ens33
iface ens33 inet dhcp
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;配置静态IP，在配置文件末尾添加：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;auto ens33
iface ens33 inet static
address 192.168.1.120
netmask 255.255.255.0
gateway 192.168.1.1
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;配置DNS地址，修改/etc/resolv.conf文件为：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# Dynamic resolv.conf(5) file for glibc resolver(3) generated by resolvconf(8)
#     DO NOT EDIT THIS FILE BY HAND -- YOUR CHANGES WILL BE OVERWRITTEN
# nameserver 127.0.1.1
nameserver 192.168.1.1
nameserver 202.103.24.68
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;但以上配置只是临时的，在重启系统或者重启网卡之后，就不生效了。要永久有效，需要在/etc/resolvconf/resolv.conf.d/base中添加DNS地址&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ cat /etc/resolvconf/resolv.conf.d/base
nameserver 192.168.1.1
nameserver 202.103.24.68
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;重启网络&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo service networking restart
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;或&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo /etc/init.d/networking restart
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;或&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo systemctl restart networking.service
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;但见证奇迹的时刻到了!&lt;/p&gt;

&lt;p&gt;ifconfig查看网卡信息，ip地址依然是DHCP自动获取的192.168.1.114;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ifconfig
ens33     Link encap:以太网  硬件地址 00:0c:29:71:70:f0  
          inet 地址:192.168.1.114  广播:192.168.1.255  掩码:255.255.255.0
          inet6 地址: fe80::b69c:e0ad:fc8c:5ec3/64 Scope:Link
          UP BROADCAST RUNNING MULTICAST  MTU:1500  跃点数:1
          接收数据包:98507 错误:0 丢弃:0 过载:0 帧数:0
          发送数据包:30429 错误:0 丢弃:0 过载:0 载波:0
          碰撞:0 发送队列长度:1000
          接收字节:99756941 (99.7 MB)  发送字节:3526694 (3.5 MB)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ip add查看网卡信息，ens33出现两个IP地址，192.168.1.114是之前DHCP获取的，192.168.1.120是配置的静态IP，而且网络访问正常&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ip add
2: ens33: &amp;lt;BROADCAST,MULTICAST,UP,LOWER_UP&amp;gt; mtu 1500 qdisc pfifo_fast state UP group default qlen 1000
    link/ether 00:0c:29:71:70:f0 brd ff:ff:ff:ff:ff:ff
    inet 192.168.1.114/24 brd 192.168.1.255 scope global dynamic ens33
       valid_lft 86379sec preferred_lft 86379sec
    inet 192.168.1.120/24 brd 192.168.1.255 scope global secondary ens33
       valid_lft forever preferred_lft forever
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;经过各种尝试，找到解决方法：先停止网络服务，在启用网络服务，虽然与重启网络服务原理一样，不过效果却不一样&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo service networking stop
sudo service networking start
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这个方法同样适用于修改静态ip后，重启网络服务新的IP地址不生效的问题&lt;/p&gt;

&lt;h3 id=&#34;2-常用桌面软件安装:929879312f30c80e44a6461d4788ce26&#34;&gt;2. 常用桌面软件安装&lt;/h3&gt;

&lt;h4 id=&#34;2-1-安装vmware-tools-root用户执行:929879312f30c80e44a6461d4788ce26&#34;&gt;2.1 安装VMware tools (root用户执行)&lt;/h4&gt;

&lt;p&gt;VMware Workstation ——&amp;gt; 虚拟机 ——&amp;gt; 安装VMware Tools
挂载VMware Tools安装光盘&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;su

mount /dev/sr0 /mnt
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;把VMware Tools安装文件拷贝至root主目录&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cp /mnt/VMwareTools-10.0.10-4301679.tar.gz .
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;解压缩VMmareTools安装文件&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;tar xvf VMwareTools-10.0.10-4301679.tar.gz
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;解压完毕后进入vmware-tools-distrib目录&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd vmware-tools-distrib
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;运行vmware-install.pl&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;./vmware-install.pl
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;DO you still want to proceed with this legacy installer?[no]&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;输入 yes ，回车
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;接下来一路回车，直至安装完成。重启系统后，即可自适应窗口、拖放文件等&lt;/p&gt;

&lt;h4 id=&#34;2-2-删除amazon链接:929879312f30c80e44a6461d4788ce26&#34;&gt;2.2 删除Amazon链接&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get remove unity-webapps-common  
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;2-3-卸载libreoffice:929879312f30c80e44a6461d4788ce26&#34;&gt;2.3 卸载Libreoffice&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get remove libreoffice-common
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;2-4-安装-unity-tweak-tool:929879312f30c80e44a6461d4788ce26&#34;&gt;2.4 安装 Unity Tweak Tool&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install unity-tweak-tool
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;查看unity-tweak-tool安装了哪些文件&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;dpkg -L unity-tweak-tool
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;启动Unity Tweak Tool&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;/usr/bin/unity-tweak-tool
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;2-5-安装-numix-https-www-numixproject-org-主题和图标:929879312f30c80e44a6461d4788ce26&#34;&gt;2.5 安装&lt;a href=&#34;https://www.numixproject.org/&#34;&gt;Numix&lt;/a&gt;主题和图标&lt;/h4&gt;

&lt;p&gt;添加Numix源&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-add-repository ppa:numix/ppa
sudo apt-get update
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;安装GTK主题&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install numix-gtk-theme
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;安装Numix图标&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install numix-icon-theme-circle
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;在Unity-tweak-tool中启用Numix daily主题和Numix-circle图标
&lt;img src=&#34;http://blog.mingguilu.com/media/Ubuntu_2_5_01.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h4 id=&#34;2-6-安装指示器:929879312f30c80e44a6461d4788ce26&#34;&gt;2.6 安装指示器&lt;/h4&gt;

&lt;p&gt;大小写指示灯和触摸板开关&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo add-apt-repository ppa:tsbarnes/indicator-keylock
sudo add-apt-repository ppa:atareao/atareao
sudo apt-get update
sudo apt-get install indicator-keylock
sudo apt-get install touchpad-indicator
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;2-7-安装系统监测工具syspeek:929879312f30c80e44a6461d4788ce26&#34;&gt;2.7 安装系统监测工具Syspeek&lt;/h4&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.mingguilu.com/media/Ubuntu_2_7_01.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo add-apt-repository ppa:nilarimogard/webupd8    
sudo apt-get update    
sudo apt-get install syspeek
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;2-8-安装经典菜单插件:929879312f30c80e44a6461d4788ce26&#34;&gt;2.8 安装经典菜单插件&lt;/h4&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.mingguilu.com/media/Ubuntu_2_8_01.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo add-apt-repository ppa:diesch/testing  
sudo apt-get update  
sudo apt-get install classicmenu-indicator
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;2-9-安装google-chrome浏览器:929879312f30c80e44a6461d4788ce26&#34;&gt;2.9 安装Google Chrome浏览器&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install google-chrome-stable
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;解决软件包依赖关系&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get -f install
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;2-10-安装adobe-flash-player:929879312f30c80e44a6461d4788ce26&#34;&gt;2.10 安装Adobe Flash Player&lt;/h4&gt;

&lt;h5 id=&#34;2-10-1-在firefox中打开-https-get-adobe-com-flashplayer-loc-cn:929879312f30c80e44a6461d4788ce26&#34;&gt;2.10.1 在Firefox中打开 &lt;a href=&#34;https://get.adobe.com/flashplayer/?loc=cn&#34;&gt;https://get.adobe.com/flashplayer/?loc=cn&lt;/a&gt;&lt;/h5&gt;

&lt;p&gt;已自动识别出：&lt;code&gt;Linux 64-bit, 简体中文, Firefox&lt;/code&gt;，选择版本为&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;.tar.gz 适用于 Linux
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;立即下载，然后提取flash_player_npapi_linux.x86_64.tar.gz&lt;/p&gt;

&lt;p&gt;按照readme.txt方法&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo cp libflashplayer.so /usr/lib/firefox-addons/plugins/ -v
sudo cp -r usr/* /usr
&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;2-10-2-在chrome中打开-https-get-adobe-com-cn-flashplayer-otherversions:929879312f30c80e44a6461d4788ce26&#34;&gt;2.10.2 在Chrome中打开 &lt;a href=&#34;https://get.adobe.com/cn/flashplayer/otherversions/&#34;&gt;https://get.adobe.com/cn/flashplayer/otherversions/&lt;/a&gt;&lt;/h5&gt;

&lt;p&gt;选择操作系统为：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Linux(64-bit)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;选择版本为&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;xxx for Linux 64-bit(.tar.gz)- PPAPI
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;立即下载，然后提取flash_player_ppapi_linux.x86_64.tar.gz&lt;/p&gt;

&lt;p&gt;按照readme.txt方法&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo cp ~/下载/flash_player_ppapi_linux.x86_64/* /usr/lib/adobe-flashplugin/ -rvf
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果&lt;code&gt;/usr/lib/adobe-flashplugin&lt;/code&gt;目录不存在，可以自己创建一个再进行上一步，也起作用&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo mkdir /usr/lib/adobe-flashplugin
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;2-11-配置-老d的google-hosts-https-laod-cn-hosts-2016-google-hosts-html:929879312f30c80e44a6461d4788ce26&#34;&gt;2.11 配置&lt;a href=&#34;https://laod.cn/hosts/2016-google-hosts.html&#34;&gt;老D的Google Hosts&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;下载老D最新的Google hosts文件，添加以下部分到 &lt;code&gt;/etc/hosts&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# Modified hosts start

......

# Modified hosts end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;以root用户编辑 &lt;code&gt;/etc/hosts&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo gedit /etc/hosts
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;重启网络使hosts本地解析生效&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo systemctl restart NetworkManager
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;2-12-添加ubuntu-kylin的apt源-方便安装常用的桌面软件:929879312f30c80e44a6461d4788ce26&#34;&gt;2.12 添加Ubuntu Kylin的apt源,方便安装常用的桌面软件&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;sudo vim /etc/apt/sources.list.d/ubuntukylin.list

deb http://archive.ubuntukylin.com:10006/ubuntukylin trusty main

sudo apt-get update
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;2-13-安装搜狗输入法:929879312f30c80e44a6461d4788ce26&#34;&gt;2.13 安装搜狗输入法&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install sogoupinyin
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;2-14-安装-网易云音乐-http-music-163-com:929879312f30c80e44a6461d4788ce26&#34;&gt;2.14 安装&lt;a href=&#34;http://music.163.com/&#34;&gt;网易云音乐&lt;/a&gt;&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install netease-cloud-music
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;或者，下载 &lt;a href=&#34;http://music.163.com/#/download&#34;&gt;ubuntu16.04 (64位) 版本的云音乐&lt;/a&gt;并安装&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo dpkg -i netease-cloud-music_1.0.0_amd64_ubuntu16.04.deb
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;解决软件包依赖关系&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo　apt-get -f install
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;2-15-安装-有道词典-http-cidian-youdao-com-index-linux-html:929879312f30c80e44a6461d4788ce26&#34;&gt;2.15 安装&lt;a href=&#34;http://cidian.youdao.com/index-linux.html&#34;&gt;有道词典&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.mingguilu.com/media/Ubuntu_2_15_01.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;参考：&lt;a href=&#34;http://www.linuxdiyf.com/linux/20622.html&#34;&gt;Ubuntu 16.04安装有道词典&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;下载Ubuntu 64位的deb包：&lt;a href=&#34;http://cidian.youdao.com/index-linux.html&#34;&gt;youdao-dict_1.1.0-0-ubuntu_amd64.deb&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;创建youdao-dict目录，把该deb包解压到youdao-dict目录：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo dpkg -X youdao-dict_1.1.0-0-ubuntu_amd64.deb  youdao-dict
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;解压deb包中的control信息（包的依赖就写在这个文件里面）：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo dpkg -e youdao-dict_1.1.0-0-ubuntu_amd64.deb youdao-dict/DEBIAN
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;编辑control文件，删除Depends行尾的gstreamer0.10-plugins-ugly。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo gedit youdao-dict/DEBIAN/control
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;重新打包：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo dpkg-deb -b youdao-dict youdaobuild.deb
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;安装重新打包的安装包&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo dpkg -i youdaobuild.deb
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;安装完毕即可使用，屏幕取词和滑词翻译均能正常使用，喜大普奔！当切换到其他窗口有道词典会自动最小化到右上角任务栏&lt;/p&gt;

&lt;p&gt;使用apt-get和dpkg安装deb包测试多次都安装失败，原因正是因为:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;未安装软件包 gstreamer0.10-plugins-ugly
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;2-16-安装-wps-office-http-community-wps-cn-download:929879312f30c80e44a6461d4788ce26&#34;&gt;2.16 安装&lt;a href=&#34;http://community.wps.cn/download/&#34;&gt;WPS Office&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;下载 wps-office_10.1.0.5672~a21_amd64.deb 并安装&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo dpkg -i wps-office_10.1.0.5672~a21_amd64.deb
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;打开wps会提示缺失symbol、wingdings、wingdings 2、wingdings 3、webding、mtextra 6个字体，在Windows上C:\Windows\Fonts搜索拷贝这6个字体到Ubuntu的usr/share/fonts/下即可。&lt;/p&gt;

&lt;p&gt;百度云分享链接: &lt;a href=&#34;http://pan.baidu.com/s/1pL6ONHL&#34;&gt;http://pan.baidu.com/s/1pL6ONHL&lt;/a&gt; 密码: 2stm&lt;/p&gt;

&lt;h4 id=&#34;2-17-安装shadowsocks:929879312f30c80e44a6461d4788ce26&#34;&gt;2.17 安装Shadowsocks&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;sudo add-apt-repository ppa:hzwhuang/ss-qt5
sudo apt-get update
sudo apt-get install shadowsocks-qt5
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;2-18-安装irssi:929879312f30c80e44a6461d4788ce26&#34;&gt;2.18 安装Irssi&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install screen
sudo apt-get install irssi
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;2-19-安装迅雷的替代者xware-desktop:929879312f30c80e44a6461d4788ce26&#34;&gt;2.19 安装迅雷的替代者Xware-desktop&lt;/h4&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.mingguilu.com/media/Ubuntu_2_19_01.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;在百度网盘中下载最新的Xware-desktop：&lt;a href=&#34;http://pan.baidu.com/s/1qWHMlK4&#34;&gt;http://pan.baidu.com/s/1qWHMlK4&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo chmod +x xware-desktop_0.11.20140723_amd64.deb
sudo dpkg -i xware-desktop_0.11.20140723_amd64.deb
sudo apt-get install -f
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;2-20-安装-vivaldi浏览器-https-vivaldi-com:929879312f30c80e44a6461d4788ce26&#34;&gt;2.20 安装&lt;a href=&#34;https://vivaldi.com&#34;&gt;Vivaldi浏览器&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.mingguilu.com/media/Ubuntu_2_20_01.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;下载&lt;a href=&#34;https://vivaldi.com/download/&#34;&gt;Vivaldi的deb安装包&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo dpkg -i vivaldi-stable_1.6.689.46-1_amd64.deb
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;2-21-自定义截图快捷键:929879312f30c80e44a6461d4788ce26&#34;&gt;2.21 自定义截图快捷键&lt;/h4&gt;

&lt;p&gt;系统设置——&amp;gt;键盘——&amp;gt;快捷键——&amp;gt;截图&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.mingguilu.com/media/Ubuntu_2_21_01.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;3-常用工具软件安装:929879312f30c80e44a6461d4788ce26&#34;&gt;3. 常用工具软件安装&lt;/h3&gt;

&lt;h4 id=&#34;3-1-安装albert:929879312f30c80e44a6461d4788ce26&#34;&gt;3.1 安装Albert&lt;/h4&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.mingguilu.com/media/Ubuntu_3_1_01.gif&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;安装方法参考&lt;a href=&#34;https://github.com/ManuelSchneid3r/albert/wiki&#34;&gt;Albert WIki&lt;/a&gt;的《How to install albert》&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo add-apt-repository ppa:nilarimogard/webupd8
sudo apt-get update
sudo apt-get install albert
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;3-2-安装vim:929879312f30c80e44a6461d4788ce26&#34;&gt;3.2  安装Vim&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install vim
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;3-3-安装filezilla:929879312f30c80e44a6461d4788ce26&#34;&gt;3.3 安装Filezilla&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install filezilla
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;3-4-安装-git-https-git-scm-com:929879312f30c80e44a6461d4788ce26&#34;&gt;3.4 安装&lt;a href=&#34;https://git-scm.com/&#34;&gt;Git&lt;/a&gt;&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install git
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;3-5-安装-sublime-text-3-www-sublimetext-com:929879312f30c80e44a6461d4788ce26&#34;&gt;3.5 安装&lt;a href=&#34;www.sublimetext.com/&#34;&gt;Sublime Text 3&lt;/a&gt;&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;sudo add-apt-repository ppa:webupd8team/sublime-text-3    
sudo apt-get update    
sudo apt-get install sublime-text
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果修改&lt;code&gt;Preferences.sublime-settings - User&lt;/code&gt;后提示没有权限保存&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; sudo chmode o+rwx ~/.config/sublime-text-3/ -R
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;关于Sublime Text 3在Ubuntu下无法输入中文的问题，尝试了网上很多方法都没有解决&lt;/p&gt;

&lt;h4 id=&#34;3-6-安装-notepadqq-http-notepadqq-altervista-org-wp-download:929879312f30c80e44a6461d4788ce26&#34;&gt;3.6 安装&lt;a href=&#34;http://notepadqq.altervista.org/wp/download/&#34;&gt;Notepadqq&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;Notepadqq功能近似于Windows下的Notepad++&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo add-apt-repository ppa:notepadqq-team/notepadqq
sudo apt-get update
sudo apt-get install notepadqq
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;3-7-安装-atom-https-atom-io:929879312f30c80e44a6461d4788ce26&#34;&gt;3.7 安装&lt;a href=&#34;https://atom.io/&#34;&gt;Atom&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;安装过程因为下载速度奇慢，建议单独开一个Terminal,耐心等待&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo add-apt-repository ppa:webupd8team/atom
sudo apt-get update
sudo apt-get install atom
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;3-8-安装hugo-由go语言实现的静态网站生成器:929879312f30c80e44a6461d4788ce26&#34;&gt;3.8 安装Hugo(由Go语言实现的静态网站生成器)&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install hugo
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;3-9-安装-vmware-workstation-https-my-vmware-com-cn-web-vmware-login:929879312f30c80e44a6461d4788ce26&#34;&gt;3.9 安装&lt;a href=&#34;https://my.vmware.com/cn/web/vmware/login&#34;&gt;VMware Workstation&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;下载&lt;a href=&#34;https://my.vmware.com/cn/group/vmware/details?downloadGroup=WKST-1252-LX&amp;amp;productId=524&amp;amp;rPId=13365&#34;&gt;VMware Workstation Pro for Linux&lt;/a&gt;
安装方法参考官方文档：&lt;a href=&#34;http://pubs.vmware.com/workstation-12/index.jsp#com.vmware.ws.using.doc/GUID-1F5B1F14-A586-4A56-83FA-2E7D8333D5CA.html&#34;&gt;http://pubs.vmware.com/workstation-12/index.jsp#com.vmware.ws.using.doc/GUID-1F5B1F14-A586-4A56-83FA-2E7D8333D5CA.html&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;su root
sh VMware-Workstation-Full-12.5.2-4638234.x86_64.bundle
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;稍等弹出图形化的安装界面，与windows上安装相似，一路下一步至安装完毕。&lt;/p&gt;

&lt;h3 id=&#34;4-使用samba与windows共享文件:929879312f30c80e44a6461d4788ce26&#34;&gt;4. 使用Samba与Windows共享文件&lt;/h3&gt;

&lt;h4 id=&#34;4-1-搭建samba服务:929879312f30c80e44a6461d4788ce26&#34;&gt;4.1 搭建Samba服务&lt;/h4&gt;

&lt;p&gt;安装samba和smbclient&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install samba smbclient
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;创建共享目录&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo mkdir -p /home/share
sudo chmod -R 777 /home/share
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;添加samba用户&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo useradd -s /sbin/nologin share
#创建一个samba用户，不能用于登录系统
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;设置用户密码&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo smbpasswd -a share
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;配置smb配置文件&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo cp /etc/samba/smb.conf /etc/samba/smb.conf.bak
sudo vim /etc/samba/smb.conf

[share]
    comment = Shared Folder require password
    path = /home/share
    browseable = yes
    guest ok = yes
    writable = yes
    valid users = share
    create mask = 0777
    directory mask = 0777
    available = yes


#常用选项
#[shared_name]                           # 共享名称
#    comment =                           # 共享描述
#    path =                              # 文件系统路径
#    browseable = {yes|no}               # 是否可以被查看到
#    public = {yes|no}                   # 是否可被所有人读
#    guest ok = {yes|no}                 # 与 public 相同
#    read only = yes                     # 是否只读
#    writeable = yes                     # 是否可写
#    write list = user1, user2           # 可写用户列表
#                @group, +group          # 可写组列表
#    valid users =                       # 白名单
#    invalid users =                     # 黑名单
#    create mask =                       # 默认创建文件的权限
#    directory mask =                    # 默认创建目录的权限
#    available = {yes|no}                # 是否启用该目录共享
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;重启samba服务&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo service smbd restart
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;或&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo /etc/init.d/smbd restart
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;或&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo systemctl restart smbd.service
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;查看samba服务的状态&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo smbstatus
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;4-2-在windows上访问ubuntu的共享目录:929879312f30c80e44a6461d4788ce26&#34;&gt;4.2 在Windows上访问Ubuntu的共享目录&lt;/h4&gt;

&lt;p&gt;Windows上使用FQDN路径访问，在开始或者资源管理器地址栏输入：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;\\192.168.1.114
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.mingguilu.com/media/Ubuntu_4_2_01.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Windwos上断开与samba共享目录的链接&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;net use \\192.168.1.114\share /del /y
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;或&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;net use * /del /y
#注意*代表断开所有的共享链接，如果有多个共享链接时，应避免使用*
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.mingguilu.com/media/Ubuntu_4_2_02.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Windows上映射samba共享目录为网络映射驱动器&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.mingguilu.com/media/Ubuntu_4_2_03.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h4 id=&#34;4-3-在ubuntu上访问windows共享目录:929879312f30c80e44a6461d4788ce26&#34;&gt;4.3 在Ubuntu上访问Windows共享目录&lt;/h4&gt;

&lt;p&gt;在Ubuntu文件管理器上，点击“连接到服务器”，输入: smb://192.168.1.110 ，点击“连接”&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.mingguilu.com/media/Ubuntu_4_2_04.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;在Ubuntu上使用mount挂载Windows共享目录&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo mount -t cifs -o username=awesomeit //192.168.1.110/d /mnt/share/
#回车之后输入Windows用户“awesomeit”的密码，把Windows上的共享目录”d“挂载到ubuntu的“/mnt/share”（需先创建好）下

#使用mount挂载windows共享目录一定要先安装cifs-utils,否则挂载时会有如下报错：
mount: //192.168.1.110/d is write-protected, mounting read-only
mount: cannot mount //192.168.1.110/d read-only
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;安装cifs-utils&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install cifs-utils
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;查看已挂载的共享目录&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo mount | tail -1
//192.168.1.110/d on /mnt/share type cifs (rw,relatime,vers=1.0,cache=strict,username=awesomeit,domain=DESKTOP-L440,uid=0,noforceuid,gid=0,noforcegid,addr=192.168.1.110,file_mode=0755,dir_mode=0755,nounix,serverino,mapposix,rsize=61440,wsize=65536,actimeo=1)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;在Ubuntu上使用umount卸载Windows共享目录的挂载点&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo umount /mnt/share

#卸载挂载点时，必须先离开挂载点目录，否则会报错：
umount: /mnt/share: target is busy
        (In some cases useful info about processes that
         use the device is found by lsof(8) or fuser(1).)
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;5-使用ssh远程登录ubuntu:929879312f30c80e44a6461d4788ce26&#34;&gt;5. 使用ssh远程登录Ubuntu&lt;/h3&gt;

&lt;p&gt;Ubuntu16.04默认安装了“openssh-client”，但未安装“openssh-server”，在远程ssh时会提示：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ssh awesomeit@192.168.1.114
ssh: connect to host 192.168.1.114 port 22: Connection refused
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;安装openssh-server&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install openssh-server
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;安装完成即可使用ssh远程登录&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ssh awesomeit@192.168.1.114
The authenticity of host &#39;192.168.1.114 (192.168.1.114)&#39; can&#39;t be established.
ECDSA key fingerprint is SHA256:bNfIXbmCCh1qzw9d5VkOWecltbZV1OaKizH8pLuMigo.
Are you sure you want to continue connecting (yes/no)? yes
Warning: Permanently added &#39;192.168.1.114&#39; (ECDSA) to the list of known hosts.
awesomeit@192.168.1.114&#39;s password:
Welcome to Ubuntu 16.04.1 LTS (GNU/Linux 4.4.0-57-generic x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

1 个可升级软件包。
0 个安全更新。

Last login: Thu Jan  5 22:28:15 2017 from 192.168.1.107
awesomeit@awesomeit-virtual-machine:~$
awesomeit@awesomeit-virtual-machine:~$
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;但是默认不允许root用户远程ssh登录&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ssh root@192.168.1.114
root@192.168.1.114&#39;s password:
Permission denied, please try again.
root@192.168.1.114&#39;s password:
Permission denied, please try again.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如要开启root用户ssh远程登录（不建议这样做），需修改配置文件&amp;rdquo;/etc/ssh/sshd_config&amp;rdquo;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo vim /etc/ssh/sshd_config
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;注释掉“PermitRootLogin prohibit-password”，添加“PermitRootLogin yes”&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#PermitRootLogin prohibit-password
PermitRootLogin yes
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;重启ssh服务&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo service ssh restart
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;再测试即可使用root用户ssh远程登录&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo service ssh restart

$ ssh root@192.168.1.114
root@192.168.1.114&#39;s password:
Welcome to Ubuntu 16.04.1 LTS (GNU/Linux 4.4.0-57-generic x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

1 个可升级软件包。
0 个安全更新。

Last login: Thu Jan  5 22:38:09 2017 from 192.168.1.107
root@awesomeit-virtual-machine:~#
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>使用Hugo和Github搭建静态博客之填坑</title>
      <link>http://blog.mingguilu.com/%E7%8B%AE/%E4%BD%BF%E7%94%A8Hugo%E5%92%8CGithub%E6%90%AD%E5%BB%BA%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2%E4%B9%8B%E5%A1%AB%E5%9D%91/</link>
      <pubDate>Wed, 14 Dec 2016 10:57:00 +0800</pubDate>
      
      <guid>http://blog.mingguilu.com/%E7%8B%AE/%E4%BD%BF%E7%94%A8Hugo%E5%92%8CGithub%E6%90%AD%E5%BB%BA%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2%E4%B9%8B%E5%A1%AB%E5%9D%91/</guid>
      <description>

&lt;blockquote&gt;
&lt;p&gt;我的静态博客已经搭建成功了，并且使用Markdown记录了过程，但期间踩了一路的坑，今天总结一下其中一个：Hugo成功部署到Github Pages，但访问博客时不加载网页布局和样式。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;这算是遇到最大的坑了，前后折腾了半个月的时间，直到找到了组织（Hugo交流QQ群：512499080），群主大大&lt;a href=&#34;http://www.coderzh.com/&#34;&gt;@coderzh&lt;/a&gt; 一语道破天机。
&lt;img src=&#34;http://blog.mingguilu.com/media/hugo_tk_01.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h4 id=&#34;1-先来回顾一下如何踩上这个大坑的:597c1832ad705093668c865e80485432&#34;&gt;1 先来回顾一下如何踩上这个大坑的&lt;/h4&gt;

&lt;h5 id=&#34;1-1-使用-hugo-new-site-创建一个新站点时-配置文件-config-toml-中的-baseurl-默认是-http:597c1832ad705093668c865e80485432&#34;&gt;1.1 使用&lt;code&gt;hugo new site&lt;/code&gt; 创建一个新站点时，配置文件&lt;code&gt;config.toml&lt;/code&gt; 中的 &lt;code&gt;baseurl&lt;/code&gt; 默认是 &lt;code&gt;http://&lt;/code&gt;&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;baseurl = &amp;quot;http://replace-this-with-your-hugo-site.com/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;clone spf13.com的博客项目中&lt;code&gt;baseurl&lt;/code&gt; 也是 &lt;code&gt;http://&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;baseurl = &amp;quot;http://spf13.com/&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;在之后修改时，直接把博客地址改为了我自己的&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;baseurl = &amp;quot;http://imkind.github.io/&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;1-2-自2016年6月15日起-使用github-pages默认域名搭建个人站点-已被强制要求https访问-即使用http访问-也会被重定向到https-参见-securing-your-github-pages-site-with-https-https-help-github-com-articles-securing-your-github-pages-site-with-https:597c1832ad705093668c865e80485432&#34;&gt;1.2 自2016年6月15日起，使用Github Pages默认域名搭建个人站点，已被强制要求HTTPS访问，即使用HTTP访问，也会被重定向到HTTPS。参见《Securing your GitHub Pages site with HTTPS》 &lt;a href=&#34;https://help.github.com/articles/securing-your-github-pages-site-with-https/&#34;&gt;https://help.github.com/articles/securing-your-github-pages-site-with-https/&lt;/a&gt;&lt;/h5&gt;

&lt;blockquote&gt;
&lt;p&gt;You can enforce HTTPS to add a layer of encryption for traffic to your GitHub Pages site if it has a github.io domain.&lt;/p&gt;

&lt;p&gt;With HTTPS enforcement enabled, HTTP requests to your GitHub Pages site will be transparently redirected to HTTPS.&lt;/p&gt;

&lt;p&gt;HTTPS enforcement is required for GitHub Pages sites created after June 15, 2016 and using a github.io domain. If you created your GitHub Pages site before June 15, 2016, you can manually enable HTTPS enforcement. HTTPS is not supported for GitHub Pages using custom domains.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;这一点可以在repository的settings中得到证实&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;√ Enforce HTTPS — Required for your site because you are using the default domain (imkind.github.io)&lt;/p&gt;

&lt;p&gt;HTTPS provides a layer of encryption that prevents others from snooping on or tampering with traffic to your site.&lt;/p&gt;

&lt;p&gt;When HTTPS is enforced, your site will only be served over HTTPS. Learn more.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;此时，Hugo中配置的HTTP与Github Pages强制使用的HTTPS不一致，导致站点图片、css和js文件无法加载，访问时造成上图的情况&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If you enable HTTPS for your site, and your site&amp;rsquo;s HTML still references images, CSS, or JavaScript over HTTP, then your site is serving mixed content, and you may have trouble loading assets. Serving mixed content also makes your site less secure.&lt;/p&gt;

&lt;p&gt;To remove your site&amp;rsquo;s mixed content, improve your site&amp;rsquo;s security, and resolve problems related to loading mixed content, edit your site&amp;rsquo;s HTML files and change http:// to https:// so that all of your assets are served over HTTPS.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&#34;2-填坑-更多解决方案参见-resolving-problems-with-mixed-content-https-help-github-com-articles-securing-your-github-pages-site-with-https:597c1832ad705093668c865e80485432&#34;&gt;2. 填坑，更多解决方案参见《Resolving problems with mixed content》&lt;a href=&#34;https://help.github.com/articles/securing-your-github-pages-site-with-https/&#34;&gt;https://help.github.com/articles/securing-your-github-pages-site-with-https/&lt;/a&gt;&lt;/h4&gt;

&lt;h5 id=&#34;2-1-综上-在配置文件config-toml中把-http-修改为-https:597c1832ad705093668c865e80485432&#34;&gt;2.1 综上，在配置文件config.toml中把&lt;code&gt;http&lt;/code&gt;修改为&lt;code&gt;https&lt;/code&gt;&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;baseurl = &amp;quot;http://imkind.github.io/&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;修改为&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;baseurl = &amp;quot;https://imkind.github.io/&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;然后，重新运行 &lt;code&gt;hugo&lt;/code&gt; 生成静态站点，分别把改动push到IMkind_blog_hugo和imkind.github.io&lt;/p&gt;

&lt;h5 id=&#34;2-2-但是-我发现-spf13-com-http-spf13-com-blog-coderzh-com-http-blog-coderzh-com-nanshu-wang-http-nanshu-wang-blog-bpcoder-com-http-blog-bpcoder-com-等都能使用http正常访问-这可能是因为绑定了自己的域名:597c1832ad705093668c865e80485432&#34;&gt;2.2 但是，我发现&lt;a href=&#34;http://spf13.com/&#34;&gt;spf13.com&lt;/a&gt;、&lt;a href=&#34;http://blog.coderzh.com/&#34;&gt;blog.coderzh.com&lt;/a&gt;、&lt;a href=&#34;http://nanshu.wang/&#34;&gt;nanshu.wang&lt;/a&gt;、&lt;a href=&#34;http://blog.bpcoder.com/&#34;&gt;blog.bpcoder.com&lt;/a&gt;等都能使用HTTP正常访问，这可能是因为绑定了自己的域名。&lt;/h5&gt;

&lt;p&gt;《Securing your GitHub Pages site with HTTPS》 &lt;a href=&#34;https://help.github.com/articles/securing-your-github-pages-site-with-https/&#34;&gt;https://help.github.com/articles/securing-your-github-pages-site-with-https/&lt;/a&gt; ，第三段最后一句：&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;HTTPS is not supported for GitHub Pages using custom domains.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&#34;彩蛋:597c1832ad705093668c865e80485432&#34;&gt;&lt;em&gt;彩蛋&lt;/em&gt;&lt;/h4&gt;

&lt;p&gt;附上群主大大&lt;a href=&#34;http://www.coderzh.com/&#34;&gt;@coderzh&lt;/a&gt;如何一语道破天机
&lt;img src=&#34;http://blog.mingguilu.com/media/hugo_tk_02.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>使用Hugo和Github搭建静态博客</title>
      <link>http://blog.mingguilu.com/%E7%8B%AE/%E4%BD%BF%E7%94%A8Hugo%E5%92%8CGithub%E6%90%AD%E5%BB%BA%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2/</link>
      <pubDate>Fri, 02 Dec 2016 09:53:13 +0800</pubDate>
      
      <guid>http://blog.mingguilu.com/%E7%8B%AE/%E4%BD%BF%E7%94%A8Hugo%E5%92%8CGithub%E6%90%AD%E5%BB%BA%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2/</guid>
      <description>

&lt;blockquote&gt;
&lt;p&gt;我的静态博客使用Hugo生成，部署在Github Pages个人主页上，为了完成搭建，期间学习了Hugo、Git、Markdown。由于接触静态博客不久，对很多东西一知半解，本文仅记录了在Windows 10上基于Hugo作者&lt;a href=&#34;https://stevefrancia.com/&#34;&gt;Steve Francia&lt;/a&gt;的个人博客&lt;a href=&#34;http://spf13.com/&#34;&gt;http://spf13.com/&lt;/a&gt;的源代码定制自己博客的过程，绝不权威，仅供参考。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;1-准备:bd6ccd207b6b74639fc982765b5a80a8&#34;&gt;1.准备&lt;/h2&gt;

&lt;h3 id=&#34;1-1-注册github-https-github-com:bd6ccd207b6b74639fc982765b5a80a8&#34;&gt;1.1 &lt;a href=&#34;https://github.com/&#34;&gt;注册Github&lt;/a&gt;&lt;/h3&gt;

&lt;h3 id=&#34;1-2-安装并配置git-for-windows-https-git-scm-com-downloads:bd6ccd207b6b74639fc982765b5a80a8&#34;&gt;1.2 &lt;a href=&#34;https://git-scm.com/downloads&#34;&gt;安装并配置Git for Windows&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;默认选项安装到Ajusting your PATH environment时，勾选第二项Run Git from Windows Command Prompt，即可在windows命令行使用git命令，不过Git Bash用户体验更好。&lt;/p&gt;

&lt;p&gt;Git全局配置&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git config --global user.name [your-name]
git config --global user.email [your-email-address]
git config --global color.ui true
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;配置SSH Key&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ssh-keygen -t rsa -C &amp;quot;youremail@example.com&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;一路回车使用默认值，完成之后在用户主目录中进入 &lt;code&gt;.ssh&lt;/code&gt;目录，可以看到&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;id_rsa      私钥，不能泄露出去
id_rsa.pub  公钥，可告诉任何人
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;登录Github，依次点击&amp;rdquo;settings&amp;rdquo;——&amp;gt;&amp;ldquo;SSH and GPG keys&amp;rdquo;——&amp;gt;&amp;ldquo;New SSH Key&amp;rdquo;
&lt;img src=&#34;http://blog.mingguilu.com/media/git_13_01.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;填写Title，在Key文本框里粘贴&lt;code&gt;id_rsa.pub&lt;/code&gt;文件的内容，点击&amp;rdquo;Add SSH Key&amp;rdquo;&lt;/p&gt;

&lt;h3 id=&#34;1-3-安装hugo-https-github-com-spf13-hugo-releases:bd6ccd207b6b74639fc982765b5a80a8&#34;&gt;1.3 &lt;a href=&#34;https://github.com/spf13/hugo/releases&#34;&gt;安装Hugo&lt;/a&gt;&lt;/h3&gt;

&lt;h4 id=&#34;1-3-2-ubuntu:bd6ccd207b6b74639fc982765b5a80a8&#34;&gt;1.3.2 Ubuntu&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install hugo
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;1-3-1-windows-10:bd6ccd207b6b74639fc982765b5a80a8&#34;&gt;1.3.1 Windows 10&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;下载hugo-0.17-Windows-64bit.zip，并解压缩到C:\Program Files\Hugo\&lt;/li&gt;
&lt;li&gt;将hugo-0.17-windows-amd64.exe修改为hugo.exe&lt;/li&gt;
&lt;li&gt;运行sysdm.cpl，添加环境变量：高级-环境变量-系统变量-编辑PATH-新建-‪C:\Program Files\Hugo&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;2-定制hugo:bd6ccd207b6b74639fc982765b5a80a8&#34;&gt;2. 定制Hugo&lt;/h2&gt;

&lt;h3 id=&#34;2-1-clone大神spf13的博客项目源代码:bd6ccd207b6b74639fc982765b5a80a8&#34;&gt;2.1 Clone大神spf13的博客项目源代码&lt;/h3&gt;

&lt;p&gt;进入工作目录&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ cd d/HelloWorld/hugo/
$ pwd
/d/HelloWorld/hugo
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;clone大神spf13的博客项目源代码：&lt;a href=&#34;https://github.com/spf13/spf13.com&#34;&gt;spf13.com&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ git clone https://github.com/spf13/spf13.com.git
Cloning into &#39;spf13.com&#39;...
remote: Counting objects: 894, done.
remote: Total 894 (delta 0), reused 0 (delta 0), pack-reused 894
Receiving objects: 100% (894/894), 17.35 MiB | 20.00 KiB/s, done.
Resolving deltas: 100% (346/346), done.
Checking out files: 100% (366/366), done.
$ ls -A spf13.com/
.git/  .gitignore  archetypes/  config.toml  content/  layouts/  README.md  static/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;重新打开一个git bash，运行站点&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ cd /d/HelloWorld/hugo/spf13.com/
$ hugo server -w
Started building site
0 of 12 drafts rendered
0 future content
151 pages created
0 non-page files copied
0 paginator pages created
273 tags created
22 topics created
in 718 ms
Watching for changes in D:\HelloWorld\hugo\spf13.com\{content,layouts,static}
Serving pages from memory
Web Server is available at http://localhost:1313/ (bind address 127.0.0.1)
Press Ctrl+C to stop
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;在浏览器输入localhost:1313,查看效果:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.mingguilu.com/media/hugo_2_1_01.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;2-2-删除多余文件-修改项目名称:bd6ccd207b6b74639fc982765b5a80a8&#34;&gt;2.2 删除多余文件，修改项目名称&lt;/h3&gt;

&lt;p&gt;删除spf13.com\content\下三个目录post、presentation、project,这是导航栏对应的博文存放目录，删除后，稍后将创建自己的分类博文目录&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ rm -r spf13.com/content/post/
$ rm -r spf13.com/content/presentation/
$ rm -r spf13.com/content/project/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;删除spf13.com\static\media\下的所有图片文件(spf13博文中的图片)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; rm spf13.com/static/media/*
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ctrl+C停止站点运行，修改目录名为自己的项目名称&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ mv spf13.com/ IMkind_blog_hugo
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;删除项目的Git版本库&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ rm -rf IMkind_blog_hugo/ .git/
$ rm IMkind_blog_hugo/ .gitignore

$ cd IMkind_blog_hugo/
$ git status
fatal: Not a git repository (or any of the parent directories): .git
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;创建新的版本库&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ git init
Initialized empty Git repository in D:/HelloWorld/hugo/IMkind_blog_hugo/.git/
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;2-3-修改配置文件config-toml:bd6ccd207b6b74639fc982765b5a80a8&#34;&gt;2.3 修改配置文件config.toml&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.mingguilu.com/media/hugo_2_3_01.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;baseurl = &amp;quot;https://imkind.github.io/&amp;quot;
title = &amp;quot;Continuous  Delivery&amp;quot;
languageCode = &amp;quot;en-us&amp;quot;
disqusShortname = &amp;quot;&amp;quot;
copyright = &amp;quot;&amp;quot;
MetaDataFormat = &amp;quot;yaml&amp;quot;

[author]
    name = &amp;quot;IMkind&amp;quot;

[indexes]
    tag = &amp;quot;tags&amp;quot;
    topic = &amp;quot;topics&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;baeurl 博客地址，必须使用&lt;code&gt;https://&lt;/code&gt;,切记！&lt;/li&gt;
&lt;li&gt;title 博客标题&lt;/li&gt;
&lt;li&gt;disqusShortname  Disqus的用户名，不使用评论功能可留空&lt;/li&gt;
&lt;li&gt;copyright 版权信息&lt;/li&gt;
&lt;li&gt;name  博客作者署名&lt;/li&gt;
&lt;li&gt;其它项默认参数即可&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;启动站点，在浏览器可以看到效果了：&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.mingguilu.com/media/hugo_2_3_02.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;2-4-修改博客副标题:bd6ccd207b6b74639fc982765b5a80a8&#34;&gt;2.4 修改博客副标题&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.mingguilu.com/media/hugo_2_4_01.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;在 layouts\partials\subheader.html&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;div class=&amp;quot;icon-spf13-3&amp;quot; id=&amp;quot;logo&amp;quot;&amp;gt;

&amp;lt;div id=&amp;quot;byline&amp;quot;&amp;gt;by Steve Francia&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;修改为&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;div class=&amp;quot;icon-happy&amp;quot; id=&amp;quot;logo&amp;quot;&amp;gt;

&amp;lt;div id=&amp;quot;byline&amp;quot;&amp;gt;Hello , IMkind&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;spf13.com博客中所有的图标都是以 &lt;code&gt;css类&lt;/code&gt; 来实现，&lt;code&gt;\static\static\css&lt;/code&gt; 中以 &lt;code&gt;.icon-&lt;/code&gt; 开头的类各自定义了一个图标。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;例如：&lt;code&gt;.icon-happy&lt;/code&gt; 即 笑脸图标，浏览器查看效果：&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.mingguilu.com/media/hugo_2_4_02.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;2-5-修改导航条:bd6ccd207b6b74639fc982765b5a80a8&#34;&gt;2.5 修改导航条&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.mingguilu.com/media/hugo_2_5_01.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;在 layouts\partials\nav.html&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;ul id=&amp;quot;mainnav&amp;quot;&amp;gt;
    &amp;lt;li&amp;gt;
        &amp;lt;a href=&amp;quot;/post/&amp;quot;&amp;gt;
        &amp;lt;span class=&amp;quot;icon&amp;quot;&amp;gt; &amp;lt;i aria-hidden=&amp;quot;true&amp;quot; class=&amp;quot;icon-quill&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&amp;lt;/span&amp;gt;
        &amp;lt;span&amp;gt; blog &amp;lt;/span&amp;gt;
    &amp;lt;/a&amp;gt;
    &amp;lt;/li&amp;gt;
    &amp;lt;li&amp;gt;
    &amp;lt;a href=&amp;quot;/project/&amp;quot;&amp;gt;
        &amp;lt;span class=&amp;quot;icon&amp;quot;&amp;gt; &amp;lt;i aria-hidden=&amp;quot;true&amp;quot; class=&amp;quot;icon-console&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&amp;lt;/span&amp;gt;
        &amp;lt;span&amp;gt; code &amp;lt;/span&amp;gt;
    &amp;lt;/a&amp;gt;
    &amp;lt;/li&amp;gt;
    &amp;lt;li&amp;gt;
    &amp;lt;a href=&amp;quot;/presentation/&amp;quot;&amp;gt;
        &amp;lt;span class=&amp;quot;icon&amp;quot;&amp;gt; &amp;lt;i aria-hidden=&amp;quot;true&amp;quot; class=&amp;quot;icon-stats&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&amp;lt;/span&amp;gt;
        &amp;lt;span&amp;gt; talks &amp;lt;/span&amp;gt;
    &amp;lt;/a&amp;gt;
    &amp;lt;/li&amp;gt;
    &amp;lt;li&amp;gt;
    &amp;lt;a href=&amp;quot;http://stevefrancia.com&amp;quot;&amp;gt;
        &amp;lt;span class=&amp;quot;icon&amp;quot;&amp;gt; &amp;lt;i aria-hidden=&amp;quot;true&amp;quot; class=&amp;quot;icon-13&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&amp;lt;/span&amp;gt;
        &amp;lt;span&amp;gt; me &amp;lt;/span&amp;gt;
    &amp;lt;/a&amp;gt;
    &amp;lt;/li&amp;gt;
&amp;lt;/ul&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;修改为&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;ul id=&amp;quot;mainnav&amp;quot;&amp;gt;
    &amp;lt;li&amp;gt;
        &amp;lt;a href=&amp;quot;/感/&amp;quot;&amp;gt;
        &amp;lt;span class=&amp;quot;icon&amp;quot;&amp;gt; &amp;lt;i aria-hidden=&amp;quot;true&amp;quot; class=&amp;quot;icon-quill&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&amp;lt;/span&amp;gt;
        &amp;lt;span&amp;gt; 感 &amp;lt;/span&amp;gt;
    &amp;lt;/a&amp;gt;
    &amp;lt;/li&amp;gt;
    &amp;lt;li&amp;gt;
    &amp;lt;a href=&amp;quot;/猿/&amp;quot;&amp;gt;
        &amp;lt;span class=&amp;quot;icon&amp;quot;&amp;gt; &amp;lt;i aria-hidden=&amp;quot;true&amp;quot; class=&amp;quot;icon-code&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&amp;lt;/span&amp;gt;
        &amp;lt;span&amp;gt; 猿 &amp;lt;/span&amp;gt;
    &amp;lt;/a&amp;gt;
    &amp;lt;/li&amp;gt;
    &amp;lt;li&amp;gt;
    &amp;lt;a href=&amp;quot;/狮/&amp;quot;&amp;gt;
        &amp;lt;span class=&amp;quot;icon&amp;quot;&amp;gt; &amp;lt;i aria-hidden=&amp;quot;true&amp;quot; class=&amp;quot;icon-console&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&amp;lt;/span&amp;gt;
        &amp;lt;span&amp;gt; 狮 &amp;lt;/span&amp;gt;
    &amp;lt;/a&amp;gt;
    &amp;lt;/li&amp;gt;
    &amp;lt;li&amp;gt;
    &amp;lt;a href=&amp;quot;/about/index.html&amp;quot;&amp;gt;
        &amp;lt;span class=&amp;quot;icon&amp;quot;&amp;gt; &amp;lt;i aria-hidden=&amp;quot;true&amp;quot; class=&amp;quot;icon-user&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&amp;lt;/span&amp;gt;
        &amp;lt;span&amp;gt; 吾 &amp;lt;/span&amp;gt;
    &amp;lt;/a&amp;gt;
    &amp;lt;/li&amp;gt;
&amp;lt;/ul&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;注意：在源码中修改了每个导航标题之后，还要到www\content下创建对应的目录。但是直接创建的目录并不能起作用，即使目录中存在Markdown格式的文档，点击之后也会是一片空白。&lt;/p&gt;

&lt;p&gt;到底该怎么创建对应的目录呢？使用hugo new 命令：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ hugo new about.md
D:\HelloWorld\hugo\IMkind_blog_hugo\content\about.md created
$ hugo new 感/我的第一篇感.md
D:\HelloWorld\hugo\IMkind_blog_hugo\content\感\我的第一篇感.md created
$ hugo new 猿/我的第一篇猿.md
D:\HelloWorld\hugo\IMkind_blog_hugo\content\猿\我的第一篇猿.md created
$ hugo new 狮/我的第一篇狮.md
D:\HelloWorld\hugo\IMkind_blog_hugo\content\狮\我的第一篇狮.md created
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这样就创建好了三个对应目录感、猿、狮，并同时创建了markdown格式的博文，往每篇博文中写入一段内容，即可在浏览器看到效果，在导航栏点击对应的标题，显示对应目录下所有的博文标题。&lt;/p&gt;

&lt;p&gt;注意：必须往每篇博文正文写入一段内容，否则在页面上点击对应的导航标题都会跳转到空白页面。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.mingguilu.com/media/hugo_2_5_02.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;导航栏每行默认显示四个标题，超过会另取一行。可随意增加&lt;code&gt;&amp;lt;li&amp;gt;...&amp;lt;/li&amp;gt;&lt;/code&gt;数量，并创建对应的目录,如下：&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.mingguilu.com/media/hugo_2_5_03.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;2-6-修改侧边栏分享和社交:bd6ccd207b6b74639fc982765b5a80a8&#34;&gt;2.6 修改侧边栏分享和社交&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.mingguilu.com/media/hugo_2_6_01.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;在 layouts\partials\social.html 按需增减、修改&lt;code&gt;&amp;lt;li&amp;gt;...&amp;lt;/li&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;ul id=&amp;quot;social&amp;quot;&amp;gt;
    &amp;lt;li id=&amp;quot;follow&amp;quot;&amp;gt;
        &amp;lt;span class=&amp;quot;icon icon-heart-2&amp;quot;&amp;gt; &amp;lt;/span&amp;gt;
        &amp;lt;span class=&amp;quot;title&amp;quot;&amp;gt; follow &amp;lt;/span&amp;gt;
        &amp;lt;div class=&amp;quot;dropdown follow&amp;quot;&amp;gt;
            &amp;lt;ul class=&amp;quot;social&amp;quot;&amp;gt;
                &amp;lt;li&amp;gt; &amp;lt;a href=&amp;quot;http://github.com/imkind&amp;quot; target=&amp;quot;_blank&amp;quot; title=&amp;quot;GitHub&amp;quot; class=&amp;quot;github&amp;quot;&amp;gt;&amp;lt;span class=&amp;quot;icon icon-github&amp;quot;&amp;gt;&amp;lt;/span&amp;gt;GitHub&amp;lt;/a&amp;gt; &amp;lt;/li&amp;gt;
                &amp;lt;li&amp;gt; &amp;lt;a href=&amp;quot;http://weibo.com/kind0214&amp;quot; target=&amp;quot;_blank&amp;quot; title=&amp;quot;Weibo&amp;quot; class=&amp;quot;github&amp;quot;&amp;gt;&amp;lt;span class=&amp;quot;icon icon-feed&amp;quot;&amp;gt;&amp;lt;/span&amp;gt;Weibo&amp;lt;/a&amp;gt; &amp;lt;/li&amp;gt;
                &amp;lt;li&amp;gt; &amp;lt;a href=&amp;quot;http://www.facebook.com/kind0214&amp;quot; target=&amp;quot;_blank&amp;quot; title=&amp;quot;Join me on Facebook&amp;quot; class=&amp;quot;facebook&amp;quot;&amp;gt;&amp;lt;span class=&amp;quot;icon icon-facebook&amp;quot;&amp;gt;&amp;lt;/span&amp;gt;Facebook&amp;lt;/a&amp;gt; &amp;lt;/li&amp;gt;
                &amp;lt;li&amp;gt; &amp;lt;a href=&amp;quot;http://www.twitter.com/kind0214&amp;quot; target=&amp;quot;_blank&amp;quot; title=&amp;quot;Follow me on Twitter&amp;quot; class=&amp;quot;twitter&amp;quot;&amp;gt;&amp;lt;span class=&amp;quot;icon icon-twitter&amp;quot;&amp;gt;&amp;lt;/span&amp;gt;Twitter&amp;lt;/a&amp;gt; &amp;lt;/li&amp;gt;
                &amp;lt;li&amp;gt; &amp;lt;a href=&amp;quot;http://www.linkedin.com/in/luminggui&amp;quot; target=&amp;quot;_blank&amp;quot; title=&amp;quot;LinkedIn&amp;quot; class=&amp;quot;linkedin&amp;quot;&amp;gt;&amp;lt;span class=&amp;quot;icon icon-linkedin&amp;quot;&amp;gt;&amp;lt;/span&amp;gt;LinkedIn&amp;lt;/a&amp;gt; &amp;lt;/li&amp;gt;
                &amp;lt;li&amp;gt; &amp;lt;a href=&amp;quot;mailto:luminggui0214@gmail.com&amp;quot; target=&amp;quot;_blank&amp;quot; title=&amp;quot;Send an email&amp;quot; class=&amp;quot;email&amp;quot;&amp;gt;&amp;lt;span class=&amp;quot;icon icon-mail&amp;quot;&amp;gt;&amp;lt;/span&amp;gt;Email&amp;lt;/a&amp;gt; &amp;lt;/li&amp;gt;
            &amp;lt;/ul&amp;gt;
            &amp;lt;span class=&amp;quot;subcount icon-arrow-right&amp;quot;&amp;gt;&amp;lt;/span&amp;gt;
        &amp;lt;/div&amp;gt;
    &amp;lt;/li&amp;gt;
&amp;lt;/ul&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;在 static\css\style.css 调整侧边栏位置&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#social{position:absolute;bottom:2em;width:90%;left:5%}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;修改为&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#social{position:relative;top:1em;width:90%;left:5%}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;浏览器查看效果&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.mingguilu.com/media/hugo_2_6_02.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;2-7-修改脚注:bd6ccd207b6b74639fc982765b5a80a8&#34;&gt;2.7 修改脚注&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.mingguilu.com/media/hugo_2_7_01.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;在 layouts\partials\footer.html 修改脚注内容&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;        &amp;lt;footer&amp;gt;
          &amp;lt;div&amp;gt;
            &amp;lt;p&amp;gt;
            &amp;amp;copy;2016
                &amp;lt;span itemprop=&amp;quot;name&amp;quot;&amp;gt;IMkind .&amp;lt;/span&amp;gt;
            Powered by &amp;lt;a href=&amp;quot;http://gohugo.io&amp;quot;&amp;gt;Hugo&amp;lt;/a&amp;gt;.
                Theme by &amp;lt;a href=&amp;quot;http://servergrove.com&amp;quot;&amp;gt;Server Francia&amp;lt;/a&amp;gt;.
            &amp;lt;/p&amp;gt;
          &amp;lt;/div&amp;gt;
        &amp;lt;/footer&amp;gt;
    &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;在浏览器查看效果&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.mingguilu.com/media/hugo_2_7_02.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;2-8-修改博文正文显示页的布局:bd6ccd207b6b74639fc982765b5a80a8&#34;&gt;2.8 修改博文正文显示页的布局&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.mingguilu.com/media/hugo_2_8_01.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h4 id=&#34;2-8-1-修改博客作者相关介绍:bd6ccd207b6b74639fc982765b5a80a8&#34;&gt;2.8.1 修改博客作者相关介绍&lt;/h4&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.mingguilu.com/media/hugo_2_8_1_01.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;在 layouts\partials\details.html  对作者介绍部分 &lt;code&gt;&amp;lt;div&amp;gt;&amp;lt;section id=&amp;quot;author&amp;quot;&amp;gt;...&amp;lt;/section&amp;gt;&amp;lt;/div&amp;gt;&lt;/code&gt; 稍作修改即可，由于本人实在太过平淡无奇，索性去掉这一部分&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;!--
&amp;lt;div&amp;gt;&amp;lt;section id=&amp;quot;author&amp;quot;&amp;gt;
...
&amp;lt;/section&amp;gt;&amp;lt;/div&amp;gt;
--&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;2-8-2-修改博文创建时间-字数统计-阅读时间-tags-topics的显示位置:bd6ccd207b6b74639fc982765b5a80a8&#34;&gt;2.8.2 修改博文创建时间、字数统计、阅读时间、tags、topics的显示位置&lt;/h4&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.mingguilu.com/media/hugo_2_8_2_01.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;将博文创建时间、字数统计、阅读时间、tags、topics的显示位置调整到标题和正文之间&lt;/p&gt;

&lt;p&gt;在 layouts_default\single.html&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;section id=&amp;quot;main&amp;quot;&amp;gt;
  &amp;lt;h1 itemprop=&amp;quot;name&amp;quot; id=&amp;quot;title&amp;quot;&amp;gt;{{ .Title }}&amp;lt;/h1&amp;gt;
  &amp;lt;div&amp;gt;
        &amp;lt;article itemprop=&amp;quot;articleBody&amp;quot; id=&amp;quot;content&amp;quot;&amp;gt;
           {{ .Content }}
        &amp;lt;/article&amp;gt;
  &amp;lt;/div&amp;gt;
&amp;lt;/section&amp;gt;

{{ partial &amp;quot;meta_aside.html&amp;quot; . }}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;修改为&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;section id=&amp;quot;main&amp;quot;&amp;gt;
  &amp;lt;h1 itemprop=&amp;quot;name&amp;quot; id=&amp;quot;title&amp;quot;&amp;gt;{{ .Title }}&amp;lt;/h1&amp;gt;
  {{ partial &amp;quot;meta_aside.html&amp;quot; . }}
  &amp;lt;div&amp;gt;
        &amp;lt;article itemprop=&amp;quot;articleBody&amp;quot; id=&amp;quot;content&amp;quot;&amp;gt;
           {{ .Content }}
        &amp;lt;/article&amp;gt;
  &amp;lt;/div&amp;gt;
&amp;lt;/section&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;在浏览器查看效果&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.mingguilu.com/media/hugo_2_8_2_02.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h4 id=&#34;2-8-3-修改上下篇链接的显示位置:bd6ccd207b6b74639fc982765b5a80a8&#34;&gt;2.8.3 修改上下篇链接的显示位置&lt;/h4&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.mingguilu.com/media/hugo_2_8_3_01.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;在 layouts\partials\details.html 中删除或注释掉上下篇链接相关代码&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;!--
&amp;lt;div&amp;gt;
    &amp;lt;section id=&amp;quot;prev&amp;quot;&amp;gt;
        &amp;amp;nbsp;{{if .Prev}}&amp;lt;a class=&amp;quot;previous&amp;quot; href=&amp;quot;{{.Prev.Permalink}}&amp;quot;&amp;gt;&amp;lt;i class=&amp;quot;icon-arrow-left&amp;quot;&amp;gt;&amp;lt;/i&amp;gt; {{.Prev.Title}}&amp;lt;/a&amp;gt;&amp;lt;br&amp;gt;{{end}}
    &amp;lt;/section&amp;gt;
    &amp;lt;section id=&amp;quot;next&amp;quot;&amp;gt;
        &amp;amp;nbsp;{{if .Next}}&amp;lt;a class=&amp;quot;next&amp;quot; href=&amp;quot;{{.Next.Permalink}}&amp;quot;&amp;gt;{{.Next.Title}} &amp;lt;i class=&amp;quot;icon-arrow-right&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&amp;lt;/a&amp;gt;{{end}}
    &amp;lt;/section&amp;gt;
&amp;lt;/div&amp;gt;
--&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;新建 layouts\partials\prevnext.html，代码如下&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;div&amp;gt;
    &amp;lt;section id=&amp;quot;prev&amp;quot;&amp;gt;
        &amp;amp;nbsp;{{if .Prev}}&amp;lt;a class=&amp;quot;previous&amp;quot; href=&amp;quot;{{.Prev.Permalink}}&amp;quot;&amp;gt;&amp;lt;i class=&amp;quot;icon-arrow-left&amp;quot;&amp;gt;&amp;lt;/i&amp;gt; {{.Prev.Title}}&amp;lt;/a&amp;gt;&amp;lt;br&amp;gt;{{end}}
    &amp;lt;/section&amp;gt;
    &amp;lt;section id=&amp;quot;next&amp;quot;&amp;gt;
        &amp;amp;nbsp;{{if .Next}}&amp;lt;a class=&amp;quot;next&amp;quot; href=&amp;quot;{{.Next.Permalink}}&amp;quot;&amp;gt;{{.Next.Title}} &amp;lt;i class=&amp;quot;icon-arrow-right&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&amp;lt;/a&amp;gt;{{end}}
    &amp;lt;/section&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;新建 layouts\partials\prevnext_aside.html，代码如下&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{ $baseurl := .Site.BaseURL }}

&amp;lt;aside id=&amp;quot;prevnext&amp;quot;&amp;gt;
{{ partial &amp;quot;prevnext.html&amp;quot; . }}
&amp;lt;/aside&amp;gt;

&amp;lt;meta itemprop=&amp;quot;wordCount&amp;quot; content=&amp;quot;{{ .WordCount }}&amp;quot;&amp;gt;
&amp;lt;meta itemprop=&amp;quot;datePublished&amp;quot; content=&amp;quot;{{ .Date.Format &amp;quot;2006-01-02&amp;quot; }}&amp;quot;&amp;gt;
&amp;lt;meta itemprop=&amp;quot;url&amp;quot; content=&amp;quot;{{ .Permalink }}&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;在 layouts_default\single.html&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;section id=&amp;quot;main&amp;quot;&amp;gt;
  &amp;lt;h1 itemprop=&amp;quot;name&amp;quot; id=&amp;quot;title&amp;quot;&amp;gt;{{ .Title }}&amp;lt;/h1&amp;gt;
  {{ partial &amp;quot;meta_aside.html&amp;quot; . }}
  &amp;lt;div&amp;gt;
        &amp;lt;article itemprop=&amp;quot;articleBody&amp;quot; id=&amp;quot;content&amp;quot;&amp;gt;
           {{ .Content }}
        &amp;lt;/article&amp;gt;
  &amp;lt;/div&amp;gt;
&amp;lt;/section&amp;gt;

{{ partial &amp;quot;disqus.html&amp;quot; . }}
{{ partial &amp;quot;footer.html&amp;quot; . }}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;修改为&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;section id=&amp;quot;main&amp;quot;&amp;gt;
  &amp;lt;h1 itemprop=&amp;quot;name&amp;quot; id=&amp;quot;title&amp;quot;&amp;gt;{{ .Title }}&amp;lt;/h1&amp;gt;
  {{ partial &amp;quot;meta_aside.html&amp;quot; . }}
  &amp;lt;div&amp;gt;
        &amp;lt;article itemprop=&amp;quot;articleBody&amp;quot; id=&amp;quot;content&amp;quot;&amp;gt;
           {{ .Content }}
        &amp;lt;/article&amp;gt;
  &amp;lt;/div&amp;gt;
{{ partial &amp;quot;prevnext_aside.html&amp;quot; . }}
&amp;lt;/section&amp;gt;

{{ partial &amp;quot;disqus.html&amp;quot; . }}
{{ partial &amp;quot;footer.html&amp;quot; . }}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;在 static\css\style.css&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#main&amp;gt;div,footer&amp;gt;div,#meta&amp;gt;div,#content,#comments&amp;gt;div{position:relative;text-align:left;margin:0 auto;word-wrap:break-word}

#next,#prev{width:50% !important;padding-top:2em}

#main&amp;gt;div,footer&amp;gt;div,#meta&amp;gt;div,#meta&amp;gt;section,#content,#comments&amp;gt;div{max-width:38em}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;修改为&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#main&amp;gt;div,footer&amp;gt;div,#meta&amp;gt;div,#content,#comments&amp;gt;div,#prevnext&amp;gt;div{position:relative;text-align:left;margin:0 auto;word-wrap:break-word}

#next,#prev{width:50% !important;padding-top:2em;float:left;}

#main&amp;gt;div,footer&amp;gt;div,#meta&amp;gt;div,#meta&amp;gt;section,#content,#comments&amp;gt;div,#prevnext&amp;gt;div{max-width:100%}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;在浏览器查看效果
&lt;img src=&#34;http://blog.mingguilu.com/media/hugo_2_8_3_02.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;2-9-修改字号大小:bd6ccd207b6b74639fc982765b5a80a8&#34;&gt;2.9 修改字号大小&lt;/h3&gt;

&lt;p&gt;在 static\css\style.css&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;body{font-size:0.9em;line-height:1.8em}
h1{font-size:1.6em;line-height:1.8em}
h2{font-size:1.4em;line-height:1.8em}
h3{font-size:1.2em;line-height:1.8em}
h4{font-size:1.1em;line-height:1.8em}
h5{font-size:1em;line-height:1.8em}

h1#title{font-size:1.6em !important;line-height:1.8em}
h1,h2{font-size:1.6em;line-height:1.8em}
h2{font-size:1.4em;font-weight:normal}
h3{margin:1.3em 0 1.5em}

.post-meta{color:#34495e;font-size:90%}

body&amp;gt;footer p{margin:0;padding:0;font-size:90%;line-height:1.5em}

body&amp;gt;section,body&amp;gt;aside,body&amp;gt;footer,body&amp;gt;.content{font-size:0.9em;line-height:1.8em}

body&amp;gt;section,body&amp;gt;aside,body&amp;gt;.content,body&amp;gt;footer,#comments{margin:1em 7.14286% 0 28.57143%;font-size:0.9em;line-height:1.8em;*zoom:1}

body&amp;gt;section,body&amp;gt;aside,body&amp;gt;.content,body&amp;gt;footer,#comments{margin:1em 21.42857% 0 21.42857%;font-size:0.9em;line-height:1.8em;*zoom:1}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;2-10-修改网站标题:bd6ccd207b6b74639fc982765b5a80a8&#34;&gt;2.10 修改网站标题&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.mingguilu.com/media/hugo_2_10_01.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;在 layouts\partials\header.html&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;title&amp;gt; {{ .Title }} - spf13.com &amp;lt;/title&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;将网站标题spf13.com修改为imkind.github.io&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;title&amp;gt; {{ .Title }} - imkind.github.io &amp;lt;/title&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.mingguilu.com/media/hugo_2_10_02.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;2-11-修改og标签:bd6ccd207b6b74639fc982765b5a80a8&#34;&gt;2.11 修改og标签&lt;/h3&gt;

&lt;p&gt;摘自知乎：
&lt;code&gt;og是一种新的HTTP头部标记，即Open Graph Protocol，用了Meta Property=og标签，就是你同意了网页内容可以被其他社会化网站引用等&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;在 layouts\partials\meta.html 将大神spf13相关的信息修改为自己的，或者注释掉这一部分&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;!-- open graph --&amp;gt;
&amp;lt;meta property=&amp;quot;og:type&amp;quot; content=&amp;quot;article&amp;quot;/&amp;gt;
&amp;lt;meta property=&amp;quot;og:description&amp;quot; content=&amp;quot;{{ .Description }}&amp;quot;/&amp;gt;
&amp;lt;meta property=&amp;quot;og:title&amp;quot; content=&amp;quot;{{ .Title }} : spf13.com&amp;quot;/&amp;gt;
&amp;lt;meta property=&amp;quot;og:site_name&amp;quot; content=&amp;quot;spf13 is Steve Francia&amp;quot;/&amp;gt;
&amp;lt;meta property=&amp;quot;og:image&amp;quot; content=&amp;quot;&amp;quot; /&amp;gt;
&amp;lt;meta property=&amp;quot;og:image:type&amp;quot; content=&amp;quot;image/jpeg&amp;quot; /&amp;gt;
&amp;lt;meta property=&amp;quot;og:image:width&amp;quot; content=&amp;quot;&amp;quot; /&amp;gt;
&amp;lt;meta property=&amp;quot;og:image:height&amp;quot; content=&amp;quot;&amp;quot; /&amp;gt;
&amp;lt;meta property=&amp;quot;og:url&amp;quot; content=&amp;quot;{{ .Permalink }}&amp;quot;&amp;gt;
&amp;lt;meta property=&amp;quot;og:locale&amp;quot; content=&amp;quot;en_US&amp;quot;&amp;gt;
&amp;lt;meta property=&amp;quot;article:published_time&amp;quot; content=&amp;quot;{{ .Date.Format &amp;quot;2006-01-02&amp;quot; }}&amp;quot;/&amp;gt;
&amp;lt;meta property=&amp;quot;article:modified_time&amp;quot; content=&amp;quot;{{ .Date.Format &amp;quot;2006-01-02&amp;quot; }}&amp;quot;/&amp;gt;

&amp;lt;!--Twitter Cards--&amp;gt;
&amp;lt;meta name=&amp;quot;twitter:card&amp;quot; content=&amp;quot;summary&amp;quot;&amp;gt;
&amp;lt;!--&amp;lt;meta name=&amp;quot;twitter:card&amp;quot; content=&amp;quot;summary_large_image&amp;quot;&amp;gt;--&amp;gt;
&amp;lt;meta name=&amp;quot;twitter:site&amp;quot; content=&amp;quot;@spf13&amp;quot;&amp;gt;
&amp;lt;meta name=&amp;quot;twitter:title&amp;quot; content=&amp;quot;{{ .Title }} : spf13.com&amp;quot;&amp;gt;
&amp;lt;meta name=&amp;quot;twitter:creator&amp;quot; content=&amp;quot;@spf13&amp;quot;&amp;gt;
&amp;lt;meta name=&amp;quot;twitter:description&amp;quot; content=&amp;quot;{{ .Description }}&amp;quot;&amp;gt;
&amp;lt;meta name=&amp;quot;twitter:image:src&amp;quot; content=&amp;quot;&amp;quot;&amp;gt;
&amp;lt;meta name=&amp;quot;twitter:domain&amp;quot; content=&amp;quot;spf13.com&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;2-12-多说评论系统:bd6ccd207b6b74639fc982765b5a80a8&#34;&gt;2.12 多说评论系统&lt;/h3&gt;

&lt;p&gt;spf13.com默认使用了&lt;a href=&#34;https://disqus.com/&#34;&gt;Disqus&lt;/a&gt;评论系统，我去注册并在博客配置之后，无法显示评论区，而且在打开博文时因为连接Disqus服务器严重拖慢速度，于是更换了国产的&lt;a href=&#34;http://duoshuo.com/&#34;&gt;多说&lt;/a&gt;评论系统，相对于内置了Disqus，多说评论系统的植入稍微复杂一点。&lt;/p&gt;

&lt;h4 id=&#34;2-12-1-注册-多说-http-duoshuo-com-评论系统:bd6ccd207b6b74639fc982765b5a80a8&#34;&gt;2.12.1 注册&lt;a href=&#34;http://duoshuo.com/&#34;&gt;多说&lt;/a&gt;评论系统&lt;/h4&gt;

&lt;p&gt;打开多说首页，点击“登录”，使用SNS账号登录，我选择了微博。
&lt;img src=&#34;http://blog.mingguilu.com/media/hugo_2_12_1_01.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h4 id=&#34;2-12-2-创建站点:bd6ccd207b6b74639fc982765b5a80a8&#34;&gt;2.12.2 创建站点&lt;/h4&gt;

&lt;p&gt;登录之后就跳转到站点配置的页面
&lt;img src=&#34;http://blog.mingguilu.com/media/hugo_2_12_2_01.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h4 id=&#34;2-12-3-获取植入代码:bd6ccd207b6b74639fc982765b5a80a8&#34;&gt;2.12.3 获取植入代码&lt;/h4&gt;

&lt;p&gt;工具——&amp;gt;获取代码——&amp;gt;稳定版
&lt;img src=&#34;http://blog.mingguilu.com/media/hugo_2_12_3_01.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h4 id=&#34;2-12-4-植入多说代码:bd6ccd207b6b74639fc982765b5a80a8&#34;&gt;2.12.4 植入多说代码&lt;/h4&gt;

&lt;p&gt;在 layouts\partials\disqus.html&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;aside id=comments&amp;gt;
    &amp;lt;div&amp;gt;&amp;lt;h2&amp;gt; Comments &amp;lt;/h2&amp;gt;&amp;lt;/div&amp;gt;

     {{ template &amp;quot;_internal/disqus.html&amp;quot; . }}

&amp;lt;/aside&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;修改为&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;aside id=comments&amp;gt;
    &amp;lt;div&amp;gt;&amp;lt;h2&amp;gt; Comments &amp;lt;/h2&amp;gt;&amp;lt;/div&amp;gt;

     &amp;lt;!-- {{ template &amp;quot;_internal/disqus.html&amp;quot; . }} --&amp;gt;

     &amp;lt;!-- 多说评论框 start --&amp;gt;
    &amp;lt;div class=&amp;quot;ds-thread&amp;quot; data-thread-key=&amp;quot;{{ .URL }}&amp;quot; data-title=&amp;quot;{{ .Title }}&amp;quot; data-url=&amp;quot;{{ .Permalink }}&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;
    &amp;lt;!-- 多说评论框 end --&amp;gt;
    &amp;lt;!-- 多说公共JS代码 start (一个网页只需插入一次) --&amp;gt;
    &amp;lt;script type=&amp;quot;text/javascript&amp;quot;&amp;gt;
    var duoshuoQuery = {short_name:&amp;quot;imkind&amp;quot;};
        (function() {
            var ds = document.createElement(&#39;script&#39;);
            ds.type = &#39;text/javascript&#39;;ds.async = true;
            ds.src = (document.location.protocol == &#39;https:&#39; ? &#39;https:&#39; : &#39;http:&#39;) + &#39;//static.duoshuo.com/embed.js&#39;;
            ds.charset = &#39;UTF-8&#39;;
            (document.getElementsByTagName(&#39;head&#39;)[0]
             || document.getElementsByTagName(&#39;body&#39;)[0]).appendChild(ds);
        })();
        &amp;lt;/script&amp;gt;
    &amp;lt;!-- 多说公共JS代码 end --&amp;gt;

&amp;lt;/aside&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;2-12-5-设置duoshuoshortname:bd6ccd207b6b74639fc982765b5a80a8&#34;&gt;2.12.5 设置duoshuoShortname&lt;/h4&gt;

&lt;p&gt;在 config.toml&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;disqusShortname = &amp;quot;&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;修改为&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;duoshuoShortname = &amp;quot;imkind&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;在浏览器中博文下方查看效果&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.mingguilu.com/media/hugo_2_12_5_01.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;2-13-代码高亮:bd6ccd207b6b74639fc982765b5a80a8&#34;&gt;2.13 代码高亮&lt;/h3&gt;

&lt;h4 id=&#34;2-13-1-使用在线js-加载速度慢-不推荐使用:bd6ccd207b6b74639fc982765b5a80a8&#34;&gt;2.13.1 使用在线js(加载速度慢，不推荐使用)&lt;/h4&gt;

&lt;p&gt;参考：&lt;a href=&#34;http://nanshu.wang/&#34;&gt;nanshu.wang&lt;/a&gt;的教程&lt;a href=&#34;http://nanshu.wang/post/2015-01-31/&#34;&gt;Hugo静态网站生成器中文教程&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;在 layouts\partials\head_includes.html 添加&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;script src=&amp;quot;https://yandex.st/highlightjs/8.0/highlight.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;https://yandex.st/highlightjs/8.0/styles/default.min.css&amp;quot;&amp;gt;
&amp;lt;script&amp;gt;hljs.initHighlightingOnLoad();&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;在浏览器查看效果&lt;/p&gt;

&lt;h4 id=&#34;2-13-2-使用本地配置-highlight-js-https-highlightjs-org-推荐使用:bd6ccd207b6b74639fc982765b5a80a8&#34;&gt;2.13.2 使用本地配置&lt;a href=&#34;https://highlightjs.org/&#34;&gt;highlight.js&lt;/a&gt;（推荐使用）&lt;/h4&gt;

&lt;p&gt;参考：&lt;a href=&#34;http://newoxygen.github.io&#34;&gt;http://newoxygen.github.io&lt;/a&gt; 的教程 &lt;a href=&#34;http://newoxygen.github.io/post/hugo%E5%BF%AB%E9%80%9F%E5%BB%BA%E7%AB%99/#2.2&#34;&gt;hugo快速建站&lt;/a&gt;&lt;/p&gt;

&lt;h5 id=&#34;2-13-2-1-下载-highlight-js-https-highlightjs-org:bd6ccd207b6b74639fc982765b5a80a8&#34;&gt;2.13.2.1 下载 &lt;a href=&#34;https://highlightjs.org/&#34;&gt;highlight.js&lt;/a&gt;&lt;/h5&gt;

&lt;p&gt;打开&lt;a href=&#34;https://highlightjs.org/&#34;&gt;highlight.js&lt;/a&gt;首页，点击 &lt;a href=&#34;https://highlightjs.org/download/&#34;&gt;Get version 9.8.0&lt;/a&gt;，勾选常用的编程语言，点击“Download”下载，解压&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ls highlight/
CHANGES.md  highlight.pack.js  LICENSE  README.md  README.ru.md  styles/
&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;2-13-2-2-植入highlight-js:bd6ccd207b6b74639fc982765b5a80a8&#34;&gt;2.13.2.2 植入highlight.js&lt;/h5&gt;

&lt;p&gt;复制 highlight.pack.js 到 static\static\js&lt;/p&gt;

&lt;p&gt;重命名 styles 为 highlight，并复制到 static\static\css&lt;/p&gt;

&lt;p&gt;在layouts\partials\header.html 添加&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;!-- Highlight.js --&amp;gt;
&amp;lt;script src=&amp;quot;{{ .Site.BaseURL }}static/js/highlight.pack.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;{{ .Site.BaseURL }}static/css/highlight/github.css&amp;quot;&amp;gt;
&amp;lt;script&amp;gt;hljs.initHighlightingOnLoad();&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;可根据个人爱好调用 static\static\css\highlight 中的css样式。&lt;/p&gt;

&lt;h4 id=&#34;2-14-植入百度统计:bd6ccd207b6b74639fc982765b5a80a8&#34;&gt;2.14 植入百度统计&lt;/h4&gt;

&lt;p&gt;注册&lt;a href=&#34;http://tongji.baidu.com&#34;&gt;百度统计&lt;/a&gt;，在“管理”中“新增网站”&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.mingguilu.com/media/hugo_2_14_01.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;拷贝“统计代码”至 layouts\partials\header.html 的&lt;code&gt;&amp;lt;/head&amp;gt;&lt;/code&gt;标签前&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;script&amp;gt;]
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement(&amp;quot;script&amp;quot;);
  hm.src = &amp;quot;https://hm.baidu.com/hm.js?3d1fd52b11dc0bde2abdc4760452f3dc&amp;quot;;
  var s = document.getElementsByTagName(&amp;quot;script&amp;quot;)[0];
  s.parentNode.insertBefore(hm, s);
})();
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;2-15-植入google-analytics-分析:bd6ccd207b6b74639fc982765b5a80a8&#34;&gt;2.15 植入Google Analytics(分析)&lt;/h4&gt;

&lt;p&gt;注册&lt;a href=&#34;http://www.google.cn/intl/zh-CN_ALL/analytics/features/analysis-tools.html&#34;&gt;Google Analytics (分析)&lt;/a&gt;，在“管理”——“媒体资源”中“创建新媒体资源”&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.mingguilu.com/media/hugo_2_15_01.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;拷贝“跟踪代码”至 layouts\partials\header.html 的&lt;code&gt;&amp;lt;/head&amp;gt;&lt;/code&gt;标签前&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;script&amp;gt;
  (function(i,s,o,g,r,a,m){i[&#39;GoogleAnalyticsObject&#39;]=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,&#39;script&#39;,&#39;https://www.google-analytics.com/analytics.js&#39;,&#39;ga&#39;);

  ga(&#39;create&#39;, &#39;UA-86857821-1&#39;, &#39;auto&#39;);
  ga(&#39;send&#39;, &#39;pageview&#39;);
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;3-部署hugo到github-pages个人主页:bd6ccd207b6b74639fc982765b5a80a8&#34;&gt;3. 部署hugo到Github pages个人主页&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://pages.github.com/#user-site&#34;&gt;Github pages&lt;/a&gt;有两种类型，个人主页（User site）和项目主页（Project site）。个人主页一个账号只能有一个，必须以[your-github-account].github.io命名来创建repository。&lt;/p&gt;

&lt;h4 id=&#34;3-1-在github新建-your-hugo-project-name-仓库-用于托管hugo静态博客系统源代码:bd6ccd207b6b74639fc982765b5a80a8&#34;&gt;3.1 在Github新建[your-hugo-project-name]仓库，用于托管hugo静态博客系统源代码&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;https://github.com/imkind/IMkind_blog_hugo
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;3-2-在github新建-your-github-account-github-io仓库-用于存放hugo生成得静态博客站点文件:bd6ccd207b6b74639fc982765b5a80a8&#34;&gt;3.2 在Github新建[your-github-account].github.io仓库，用于存放hugo生成得静态博客站点文件&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;https://github.com/imkind/imkind.github.io
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;3-3-创建本地的git仓库:bd6ccd207b6b74639fc982765b5a80a8&#34;&gt;3.3 创建本地的git仓库&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;$ git init
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;3-4-添加远程库-把本地git仓库同远程库关联起来:bd6ccd207b6b74639fc982765b5a80a8&#34;&gt;3.4 添加远程库，把本地git仓库同远程库关联起来&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;$ git remote add origin git@github.com:[your-github-account]/[your-hugo-project-name].git
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;即&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ git remote add origin git@github.com:imkind/IMkind_blog_hugo.git
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;3-5-查看项目下是否有生成了静态页面的-public-目录-如果有删除掉-只要执行-hugo-即可重新生成-因为下一步配置子项目时-会再创建一个public目录:bd6ccd207b6b74639fc982765b5a80a8&#34;&gt;3.5 查看项目下是否有生成了静态页面的&lt;code&gt;public&lt;/code&gt;目录，如果有删除掉（只要执行&lt;code&gt;hugo&lt;/code&gt;即可重新生成），因为下一步配置子项目时，会再创建一个public目录&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;$ rm -rf public/
&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;3-6-把-your-github-account-github-io设置为-your-hugo-project-name-的子项目-命令会-clone-远程仓库-your-github-account-github-io到本地并重命名为-public:bd6ccd207b6b74639fc982765b5a80a8&#34;&gt;3.6 把[your-github-account].github.io设置为[your-hugo-project-name]的子项目，命令会&lt;code&gt;clone&lt;/code&gt;远程仓库[your-github-account].github.io到本地并重命名为&lt;code&gt;public&lt;/code&gt;&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;$ git submodule add git@github.com:[your-github-account]/[your-github-account].github.io.git  public
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;即&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ git submodule add git@github.com:imkind/imkind.github.io.git public
Cloning into &#39;D:/HelloWorld/hugo/IMkind_blog_hugo/public&#39;...
warning: You appear to have cloned an empty repository.
fatal: You are on a branch yet to be born
Unable to checkout submodule &#39;public&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;3-7-把pulic目录写入-gitignore文件-在之后提交hugo项目源代码时就会忽略public目录:bd6ccd207b6b74639fc982765b5a80a8&#34;&gt;3.7 把pulic目录写入.gitignore文件，在之后提交hugo项目源代码时就会忽略public目录&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;$ echo &amp;quot;/public&amp;quot; &amp;gt; .gitignore
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;3-8-把submodule配置写入-gitmodules文件-如ls-a看不到该文件-可自行创建并添加内容:bd6ccd207b6b74639fc982765b5a80a8&#34;&gt;3.8 把submodule配置写入.gitmodules文件。如ls -A看不到该文件，可自行创建并添加内容。&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;$ vim .gitmodules

[submodule &amp;quot;public&amp;quot;]
    path = public
    url = git@github.com:imkind/imkind.github.io.git
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;3-9-初次提交至github远程仓库-使用了-u-参数-之后改动代码提交到github-只需-git-push-origin-master:bd6ccd207b6b74639fc982765b5a80a8&#34;&gt;3.9 初次提交至github远程仓库,使用了&lt;code&gt;-u&lt;/code&gt;参数,之后改动代码提交到github，只需&lt;code&gt;git push origin master&lt;/code&gt;&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;$ git add -A

$ git commit -m &amp;quot;first commit&amp;quot;

$ git push -u origin master
Counting objects: 379, done.
Delta compression using up to 4 threads.
Compressing objects: 100% (368/368), done.
Writing objects: 100% (379/379), 1.15 MiB | 0 bytes/s, done.
Total 379 (delta 157), reused 0 (delta 0)
remote: Resolving deltas: 100% (157/157), done.
To github.com:imkind/IMkind_blog_hugo.git
 * [new branch]      master -&amp;gt; master
Branch master set up to track remote branch master from origin.
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;3-10-生成静态站点到public目录下:bd6ccd207b6b74639fc982765b5a80a8&#34;&gt;3.10 生成静态站点到public目录下&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;$ hugo
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;3-11-初次提交pubic目录下的静态站点内容到远程仓库:bd6ccd207b6b74639fc982765b5a80a8&#34;&gt;3.11 初次提交pubic目录下的静态站点内容到远程仓库&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;$ cd public

$ git add -A

$ git commit -m &amp;quot;first post&amp;quot;

$ git push -u origin master
Counting objects: 219, done.
Delta compression using up to 4 threads.
Compressing objects: 100% (210/210), done.
Writing objects: 100% (219/219), 1.16 MiB | 51.00 KiB/s, done.
Total 219 (delta 71), reused 0 (delta 0)
remote: Resolving deltas: 100% (71/71), done.
To https://github.com/imkind/imkind.github.io.git
 * [new branch]      master -&amp;gt; master
Branch master set up to track remote branch master from origin.
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;4-部署成功-在浏览器访问-https-your-github-account-github-io-就看到自己的博客了:bd6ccd207b6b74639fc982765b5a80a8&#34;&gt;4. 部署成功，在浏览器访问 https://[your-github-account].github.io 就看到自己的博客了。&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.mingguilu.com/media/hugo_4_01.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h4 id=&#34;参考:bd6ccd207b6b74639fc982765b5a80a8&#34;&gt;&lt;em&gt;参考&lt;/em&gt;&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://spf13.com/&#34;&gt;Steve Francia&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.gohugo.org/&#34;&gt;Hugo中文文档&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.gohugo.org/post/coderzh-hugo/&#34;&gt;使用hugo搭建个人博客站点&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://nanshu.wang/post/2015-01-31/&#34;&gt;Hugo静态网站生成器中文教程&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.bpcoder.com/2015/12/hugo-create-blog/&#34;&gt;利用 Hugo &amp;amp; GitHub 搭建个人博客静态网站&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>