<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Continuous  Delivery</title>
    <link>http://blog.mingguilu.com/</link>
    <description>Recent content on Continuous  Delivery</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <copyright>Copyright (c) 2016 - 2021, MingguiLu; all rights reserved.</copyright>
    <lastBuildDate>Thu, 10 Aug 2017 17:32:57 +0800</lastBuildDate>
    <atom:link href="http://blog.mingguilu.com/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Windows下的git_clone问题</title>
      <link>http://blog.mingguilu.com/%E7%8B%AE/Windows%E4%B8%8B%E7%9A%84git_clone%E9%97%AE%E9%A2%98/</link>
      <pubDate>Thu, 10 Aug 2017 17:32:57 +0800</pubDate>
      
      <guid>http://blog.mingguilu.com/%E7%8B%AE/Windows%E4%B8%8B%E7%9A%84git_clone%E9%97%AE%E9%A2%98/</guid>
      <description>&lt;p&gt;近期为了方便学习数据挖掘与数据分析，将系统由Linux Mint换回windows10开发者预览版，并安装了Ubuntu on Windows 10，由于硬盘格式化了，需要从Github上克隆博客代码，却遇到了问题。&lt;/p&gt;

&lt;p&gt;Windows10的分区挂载在Ubuntu on Windows 10的/mnt目录下，ls可以看到Windows的C、D两个分区&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mingguilu@DESKTOP-KME2TBI:~$ cd /mnt/
mingguilu@DESKTOP-KME2TBI:/mnt$ ls
c  d
mingguilu@DESKTOP-KME2TBI:/mnt$
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;准备将博客代码克隆到D盘下，便于Windows和Ubuntu都能操作，但是克隆时却报错了：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mingguilu@DESKTOP-KME2TBI:/mnt/d/helloworld/hugo$ git clone git@github.com:mingguilu/blog_mingguilu_com.git
Cloning into &#39;blog_mingguilu_com&#39;...
remote: Counting objects: 522, done.
remote: Compressing objects: 100% (5/5), done.
remote: Total 522 (delta 0), reused 1 (delta 0), pack-reused 517
Receiving objects: 100% (522/522), 16.24 MiB | 1.36 MiB/s, done.
Resolving deltas: 100% (188/188), done.
Checking connectivity... done.
error: unable to create file content/猿/AutoIT3开发Helpdesk自动化工具之一:简介.md (Invalid argument)
error: unable to create file content/猿/AutoIt3开发Helpdesk自动化工具之三:系统配置.md (Invalid argument)
error: unable to create file content/猿/AutoIt3开发Helpdesk自动化工具之二:常用语法.md (Invalid argument)
error: unable to create file content/猿/AutoIt3开发Helpdesk自动化工具之五:多任务组合.md (Invalid argument)
error: unable to create file content/猿/AutoIt3开发Helpdesk自动化工具之四:软件安装.md (Invalid argument)
fatal: unable to checkout working tree
warning: Clone succeeded, but checkout failed.
You can inspect what was checked out with &#39;git status&#39;
and retry the checkout with &#39;git checkout -f HEAD&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;博客代码克隆成功了，但是content下多篇博文检出失败，为了排除Ubuntu on Windows 10的问题，在windows端Git bash上尝试克隆还是报错了&amp;hellip;&amp;hellip;&lt;/p&gt;

&lt;p&gt;一番折腾问题依旧，只好Google一下才大概明白是怎么回事，部分博文的文件名中含有冒号，之前都是在linux中创建的没有问题，但是Windows不支持文件名中包含特殊符号。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://stackoverflow.com/questions/20715804/git-cant-checkout-a-repo-from-github&#34;&gt;Git can&amp;rsquo;t checkout a repo from github&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://stackoverflow.com/questions/26097568/git-pull-error-unable-to-create-file-invalid-argument&#34;&gt;Git pull error: unable to create file (Invalid argument)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;在Ubuntu on Windows 10上切换到家目录中，顺利克隆成功&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mingguilu@DESKTOP-KME2TBI:~$ git clone git@github.com:mingguilu/blog_mingguilu_com.git
Cloning into &#39;blog_mingguilu_com&#39;...
remote: Counting objects: 522, done.
remote: Compressing objects: 100% (5/5), done.
remote: Total 522 (delta 0), reused 1 (delta 0), pack-reused 517
Receiving objects: 100% (522/522), 16.24 MiB | 3.31 MiB/s, done.
Resolving deltas: 100% (188/188), done.
Checking connectivity... done.
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>AutoIt3开发Helpdesk自动化工具之五:多任务组合</title>
      <link>http://blog.mingguilu.com/%E7%8C%BF/AutoIt3%E5%BC%80%E5%8F%91Helpdesk%E8%87%AA%E5%8A%A8%E5%8C%96%E5%B7%A5%E5%85%B7%E4%B9%8B%E4%BA%94:%E5%A4%9A%E4%BB%BB%E5%8A%A1%E7%BB%84%E5%90%88/</link>
      <pubDate>Thu, 27 Apr 2017 15:05:10 +0800</pubDate>
      
      <guid>http://blog.mingguilu.com/%E7%8C%BF/AutoIt3%E5%BC%80%E5%8F%91Helpdesk%E8%87%AA%E5%8A%A8%E5%8C%96%E5%B7%A5%E5%85%B7%E4%B9%8B%E4%BA%94:%E5%A4%9A%E4%BB%BB%E5%8A%A1%E7%BB%84%E5%90%88/</guid>
      <description>

&lt;p&gt;前两篇示例中，分别创建了系统配置和软件安装的3个脚本，通过“Compile Script to .exe (x86/x64)”将.au3脚本转换为.exe可执行程序，之后运行对应程序即可进行自动安装配置。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;├── 修改administrator密码.au3
├── 创建admin用户.au3
├── 修改计算机名并加域.au3
├── Cisco VPN  Client.au3
├── Adobe Flash.au3
└── Linphone.au3
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;但是单独使用某一个脚本的场景并不多，通常我们根据不同需要自动完成多个任务，例如&lt;/p&gt;

&lt;p&gt;呼叫中心的电话销售：&lt;/p&gt;

&lt;p&gt;修改administrator密码 + 修改计算机名并加域 + Adobe Flash + Linphone&lt;/p&gt;

&lt;p&gt;各城市门店的业务员：&lt;/p&gt;

&lt;p&gt;修改administrator密码 + 创建admin用户 + 修改计算机名并加域 + Adobe Flash + Cisco VPN Client&lt;/p&gt;

&lt;h4 id=&#34;可以通过autoit3的用户自定义函数实现多个任务的组合:632ee543b7a1eaef1b2150eb4acb0465&#34;&gt;可以通过AutoIt3的用户自定义函数实现多个任务的组合&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;将每个功能脚本定义为一个函数&lt;/li&gt;
&lt;li&gt;将所有的自定义函数放在同一个脚本&lt;/li&gt;
&lt;li&gt;通过依次调用多个函数实现多个自动化任务&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;下面看一下脚本模型&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#cs ----------------------------------------------------------------------------

 AutoIt Version: 3.3.14.2
 Author:         MingguiLu

 Script Function:
    Helpdesk自动化配置脚本.

#ce ----------------------------------------------------------------------------

; Script Start - Add your code below here

_changePassword()   ;;调用函数 _changePassword()，即执行“修改administrator密码”的脚本
;_createAdmin()  ;;添加了注释符号，不会调用函数 _createAdmin()，即不执行“创建admin用户”的脚本
_joinDomain()   ;;调用函数 _joinDomain()，即执行“修改计算机名并加域”的脚本
_adobeFlash()   ;;调用函数 _adobeFlash()，即执行“Adobe Flash”的脚本
;_linPhone()    ;;添加了注释符号，不会调用函数 _linPhone()，即不执行 “Linphone”的脚本
_ciscoVpnClient()   ;;调用函数 _ciscoVpnClient()，即执行“Cisco VPN Client”的脚本


Func _changePassword()  ;;创建一个自定义函数 _changePassword()

   ;;Script “修改administrator密码”的脚本

EndFunc


Func _createAdmin()

   ;;Script “创建admin用户”的脚本

EndFunc

Func _joinDomain()

   ;;Script “修改计算机名并加域”的脚本

EndFunc

Func _adobeFlash()

   ;;Script “Adobe Flash”的脚本

EndFunc

Func _linPhone()

   ;;Script “Linphone”的脚本

EndFunc

Func _ciscoVpnClient()

   ;;Script “Cisco VPN Client”的脚本

EndFunc

; Script End
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;使用以上的脚本模型，我们可以持续维护一份脚本，优化现有的函数或者添加新的函数，需要执行不同任务组合时，拷贝一份脚本并调用相应的函数即可。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>AutoIt3开发Helpdesk自动化工具之四:软件安装</title>
      <link>http://blog.mingguilu.com/%E7%8C%BF/AutoIt3%E5%BC%80%E5%8F%91Helpdesk%E8%87%AA%E5%8A%A8%E5%8C%96%E5%B7%A5%E5%85%B7%E4%B9%8B%E5%9B%9B:%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/</link>
      <pubDate>Tue, 25 Apr 2017 23:14:48 +0800</pubDate>
      
      <guid>http://blog.mingguilu.com/%E7%8C%BF/AutoIt3%E5%BC%80%E5%8F%91Helpdesk%E8%87%AA%E5%8A%A8%E5%8C%96%E5%B7%A5%E5%85%B7%E4%B9%8B%E5%9B%9B:%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/</guid>
      <description>

&lt;p&gt;本章将结合示例，演示如何编写自动安装软件的脚本&lt;/p&gt;

&lt;p&gt;为了便于访问软件安装程序，我将所需的软件放置在共享文件夹中，并设置共享和NTFS权限为everyone可读&lt;/p&gt;

&lt;h3 id=&#34;一-安装adobe-flash-player:604f28a47967a39b8a2bb2aff9812294&#34;&gt;一、安装Adobe Flash Player&lt;/h3&gt;

&lt;p&gt;由于Adobe Flash Player的更新升级非常频繁，安装文件名称随着每次升级变更，所以将安装文件名称修改为“Adobe_flashplayer_installer.exe”，这样每当更新安装文件之后，无需修改脚本内容。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#cs ----------------------------------------------------------------------------

 AutoIt Version: 3.3.14.2
 Author:        MingguiLu
 Script Function:
      Adobe Flash Player

#ce ----------------------------------------------------------------------------

; Script Start - Add your code below here

WinMinimizeAll()

Global $administratorUserName = &amp;quot;administrator&amp;quot;
Global $administratorPassword = &amp;quot;Root@1024&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.mingguilu.com/media/170425_01_01_01.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;If IsAdmin() Then
   Run(&amp;quot;\\wh-filesrv-01\Software\Adobe\Adobe_flashplayer_installer.exe&amp;quot;)
Else
   ;;以管理员账户运行安装软件
   RunAs($administratorUserName,@ComputerName,$administratorPassword,0,&amp;quot;\\wh-filesrv-01\Software\Adobe\Adobe_flashplayer_installer.exe&amp;quot;,&amp;quot;&amp;quot;)
EndIf
;; “”表示当前活动窗口
WinWaitActive(&amp;quot;&amp;quot;)
;;获取当前活动窗口的标题，存储到变量tempFlashTitle中
Local $tempFlashTitle = WinGetTitle(&amp;quot;&amp;quot;)
WinWaitActive($tempFlashTitle,&amp;quot;我已经阅读并同意&amp;quot;)
SLEEP(500)
;;勾选“我已经阅读并同意Flash Player 许可协议的条款。”
ControlCommand($tempFlashTitle,&amp;quot;我已经阅读并同意&amp;quot;,&amp;quot;Button4&amp;quot;,&amp;quot;Check&amp;quot;,&amp;quot;&amp;quot;)
SLEEP(500)
;;点击“安装”
ControlClick($tempFlashTitle,&amp;quot;我已经阅读并同意&amp;quot;,&amp;quot;Button2&amp;quot;,&amp;quot;left&amp;quot;,1)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Adobe Flash Player安装程序和IE浏览器会冲突，导致安装过程中会报错，需要使用if条件判断语句处理报错窗口&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.mingguilu.com/media/170425_01_01_02.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;WinWaitActive(&amp;quot;&amp;quot;)
;;获取当前活动窗口的文本，存储到变量tempFlashText中
Local $tempFlashText = WinGetText(&amp;quot;&amp;quot;)
;;如果窗口文本中包含“下列发生冲突的应用程序”字段，则点击“确定”关闭窗口
If StringInStr($tempFlashText,&amp;quot;下列发生冲突的应用程序&amp;quot;) Then
   SLEEP(500)
   ControlClick($tempFlashTitle,&amp;quot;下列发生冲突的应用程序&amp;quot;,&amp;quot;Button1&amp;quot;,&amp;quot;left&amp;quot;,1)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.mingguilu.com/media/170425_01_01_03.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;   ;;弹出消息框提示用户，2秒后自动消失
   MsgBox(64,&amp;quot;提示&amp;quot;,&amp;quot;请关闭IE浏览器后再尝试运行安装程序！&amp;quot;,2)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.mingguilu.com/media/170425_01_01_04.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Else
   ;;等待安装完成
   WinWaitActive($tempFlashTitle,&amp;quot;Flash Player&amp;quot;)
   SLEEP(500)
   ;;点击“确定”关闭窗口
   ControlClick($tempFlashTitle,&amp;quot;Flash Player&amp;quot;,&amp;quot;Button2&amp;quot;,&amp;quot;left&amp;quot;,1)
   WinWaitClose($tempFlashTitle,&amp;quot;Flash Player&amp;quot;)
EndIf

; Script End
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;二-安装linphone:604f28a47967a39b8a2bb2aff9812294&#34;&gt;二、安装linphone&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;#cs ----------------------------------------------------------------------------

 AutoIt Version: 3.3.14.2
 Author:        MingguiLu
 Script Function:
    Linphone

#ce ----------------------------------------------------------------------------

; Script Start - Add your code below here

WinMinimizeAll()

Global $administratorUserName = &amp;quot;administrator&amp;quot;
Global $administratorPassword = &amp;quot;Root@1024&amp;quot;

If IsAdmin() Then
   Run(&amp;quot;\\wh-filesrv-01\Software\Linphone\Linphone-3.10.2-win32.exe&amp;quot;)
Else
   RunAs($administratorUserName,@ComputerName,$administratorPassword,0,&amp;quot;\\wh-filesrv-01\Software\Linphone\Linphone-3.10.2-win32.exe&amp;quot;,&amp;quot;&amp;quot;)
EndIf
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.mingguilu.com/media/170425_01_02_01.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;WinWaitActive(&amp;quot;&amp;quot;)
;;获取当前活动窗口的文本，存储到变量tempLinphoneText中
Local $tempLinphoneText = WinGetText(&amp;quot;&amp;quot;)
;;判断字符“installed”是否包含在当前活动窗口文本中，并将结果存储在变量tempResult中
Local $tempResult = StringInStr($tempLinphoneText,&amp;quot;installed&amp;quot;,0,1)
;;如果tempResult为True，表示Linphone已安装，可结束安装程序
If $tempResult Then
   WinActivate(&amp;quot;Linphone 3.10.2 安装&amp;quot;,&amp;quot;Linphone is already installed&amp;quot;)
   WinWaitActive(&amp;quot;Linphone 3.10.2 安装&amp;quot;,&amp;quot;Linphone is already installed&amp;quot;)
   SLEEP(500)
   ;;点击“取消”
   ControlClick(&amp;quot;Linphone 3.10.2 安装&amp;quot;,&amp;quot;Linphone is already installed&amp;quot;,&amp;quot;Button2&amp;quot;,&amp;quot;left&amp;quot;,1)
   WinWaitClose(&amp;quot;Linphone 3.10.2 安装&amp;quot;,&amp;quot;Linphone is already installed&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.mingguilu.com/media/170425_01_02_02.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;;;如果tempResult为False，表示Linphone未安装，可继续完成安装
Else
   WinActivate(&amp;quot;Linphone 3.10.2 安装&amp;quot;,&amp;quot;欢迎使用“Linphone 3.10.2”安装向导&amp;quot;)
   WinWaitActive(&amp;quot;Linphone 3.10.2 安装&amp;quot;,&amp;quot;欢迎使用“Linphone 3.10.2”安装向导&amp;quot;)
   SLEEP(500)
   ;;点击“下一步（N）”
   Send(&amp;quot;!n&amp;quot;)
   SLEEP(500)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.mingguilu.com/media/170425_01_02_03.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;   WinWaitActive(&amp;quot;Linphone 3.10.2 安装&amp;quot;,&amp;quot;许可证协议&amp;quot;)
   SLEEP(500)
   ;;点击“我接受（I）”
   Send(&amp;quot;!i&amp;quot;)
   SLEEP(500)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.mingguilu.com/media/170425_01_02_04.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;   WinWaitActive(&amp;quot;Linphone 3.10.2 安装&amp;quot;,&amp;quot;选择安装位置&amp;quot;)
   SLEEP(500)
   ;;点击“下一步（N）”
   Send(&amp;quot;!n&amp;quot;)
   SLEEP(500)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.mingguilu.com/media/170425_01_02_05.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;   WinWaitActive(&amp;quot;Linphone 3.10.2 安装&amp;quot;,&#39;选择“开始菜单”文件夹&#39;)
   SLEEP(500)
   ;;点击“下一步（N）”
   Send(&amp;quot;!n&amp;quot;)
   SLEEP(500)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.mingguilu.com/media/170425_01_02_06.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;   WinWaitActive(&amp;quot;Linphone 3.10.2 安装&amp;quot;,&amp;quot;选择组件&amp;quot;)
   SLEEP(500)
   ;;按下方向键下
   Send(&amp;quot;{DOWN}&amp;quot;)
   SLEEP(500)
   ;;按下空格键，选中“Cisco&#39;S OpenH264 Codec”
   Send(&amp;quot;{SPACE}&amp;quot;)
   SLEEP(500)
   ;;点击“安装（I）”
   Send(&amp;quot;!i&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.mingguilu.com/media/170425_01_02_07.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;   WinWaitActive(&amp;quot;Linphone 3.10.2 安装&amp;quot;,&#39;正在完成“Linphone 3.10.2”安装向导&#39;)
   SLEEP(1000)
   ;;点击“完成（F）”
   Send(&amp;quot;!f&amp;quot;)
   WinWaitClose(&amp;quot;Linphone 3.10.2 安装&amp;quot;,&#39;正在完成“Linphone 3.10.2”安装向导&#39;)
EndIf

; Script End
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;三-安装cisco-vpn-client:604f28a47967a39b8a2bb2aff9812294&#34;&gt;三、安装Cisco VPN Client&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;#cs ----------------------------------------------------------------------------

 AutoIt Version: 3.3.14.2
 Author:         MingguiLu

 Script Function:
      Cisco VPN Client


#ce ----------------------------------------------------------------------------

; Script Start - Add your code below here

;;最小化所有窗口
WinMinimizeAll()

Global $administratorUserName = &amp;quot;administrator&amp;quot;
Global $administratorPassword = &amp;quot;Root@1024&amp;quot;

If IsAdmin() Then
   Run(&amp;quot;\\wh-filesrv-01\Software\Cisco\Cisco.VPN.Client.v5.0.07.0290.x64\setup.exe&amp;quot;)
Else
   RunAs($administratorUserName,@ComputerName,$administratorPassword,0,&amp;quot;\\wh-filesrv-01\Software\Cisco\Cisco.VPN.Client.v5.0.07.0290.x64\setup.exe&amp;quot;,&amp;quot;&amp;quot;)
EndIf
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.mingguilu.com/media/170425_01_03_01.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;WinWaitActive(&amp;quot;WinZip Self-Extractor - setup.exe&amp;quot;,&amp;quot;To unzip all files in setup.exe&amp;quot;)
SLEEP(500)
ControlClick(&amp;quot;WinZip Self-Extractor - setup.exe&amp;quot;,&amp;quot;To unzip all files in setup.exe&amp;quot;,&amp;quot;Button4&amp;quot;,&amp;quot;left&amp;quot;,1)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.mingguilu.com/media/170425_01_03_02.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;WinWaitActive(&amp;quot;WinZip Self-Extractor&amp;quot;,&amp;quot;确定&amp;quot;)
SLEEP(500)
ControlClick(&amp;quot;WinZip Self-Extractor&amp;quot;,&amp;quot;确定&amp;quot;,&amp;quot;Button1&amp;quot;,&amp;quot;left&amp;quot;,1)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.mingguilu.com/media/170425_01_03_03.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;WinWaitActive(&amp;quot;Cisco Systems VPN Client 5.0.07.0290&amp;quot;,&amp;quot;This installation can be displayed in multiple languages&amp;quot;)
SLEEP(500)
ControlClick(&amp;quot;Cisco Systems VPN Client 5.0.07.0290&amp;quot;,&amp;quot;This installation can be displayed in multiple languages&amp;quot;,&amp;quot;Button1&amp;quot;,&amp;quot;left&amp;quot;,1)
SLEEP(1000)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果已安装过Cisco VPN Client软件，再重复安装，将会有下图所示的报错窗口，需要使用if条件判断语句处理报错窗口&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.mingguilu.com/media/170425_01_03_09.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;;;如果存在标题为“Installer informaton”,文本内容包含&amp;quot;Error 28000:&amp;quot;的活动窗口，说明该软件已安装，可结束安装程序
If WinExists(&amp;quot;Installer Information&amp;quot;,&amp;quot;Error 28000:&amp;quot;) Then
   WinActivate(&amp;quot;Installer Information&amp;quot;,&amp;quot;Error 28000: Before installing the Cisco Systems VPN Client 5.0.07.0290&amp;quot;)
   WinWaitActive(&amp;quot;Installer Information&amp;quot;,&amp;quot;Error 28000: Before installing the Cisco Systems VPN Client 5.0.07.0290&amp;quot;)
   SLEEP(500)
   ControlClick(&amp;quot;Installer Information&amp;quot;,&amp;quot;Error 28000: Before installing the Cisco Systems VPN Client 5.0.07.0290&amp;quot;,&amp;quot;Button1&amp;quot;,&amp;quot;left&amp;quot;,1)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.mingguilu.com/media/170425_01_03_10.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;   WinWaitActive(&amp;quot;Fatal Error&amp;quot;,&amp;quot;Installation ended prematurely because of an error&amp;quot;)
   SLEEP(500)
   ControlClick(&amp;quot;Fatal Error&amp;quot;,&amp;quot;Installation ended prematurely because of an error&amp;quot;,&amp;quot;Button1&amp;quot;,&amp;quot;left&amp;quot;,1)
   WinWaitClose(&amp;quot;Fatal Error&amp;quot;,&amp;quot;Installation ended prematurely because of an error&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.mingguilu.com/media/170425_01_03_04.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Else
   WinWaitActive(&amp;quot;Cisco Systems VPN Client 5.0.07.0290 Setup&amp;quot;,&amp;quot;Welcome to the Cisco Systems VPN Client&amp;quot;)
   SLEEP(500)
   Send(&amp;quot;!n&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.mingguilu.com/media/170425_01_03_05.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;   WinWaitActive(&amp;quot;Cisco Systems VPN Client 5.0.07.0290 Setup&amp;quot;,&amp;quot;License Agreemen&amp;quot;)
   SLEEP(500)
   Send(&amp;quot;!a&amp;quot;)
   SLEEP(500)
   Send(&amp;quot;!n&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.mingguilu.com/media/170425_01_03_06.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;   WinWaitActive(&amp;quot;Cisco Systems VPN Client 5.0.07.0290 Setup&amp;quot;,&amp;quot;Destination Folder&amp;quot;)
   SLEEP(500)
   Send(&amp;quot;!n&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.mingguilu.com/media/170425_01_03_07.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;   WinWaitActive(&amp;quot;Cisco Systems VPN Client 5.0.07.0290 Setup&amp;quot;,&amp;quot;Ready to Install the Application&amp;quot;)
   SLEEP(500)
   Send(&amp;quot;!n&amp;quot;)
   SLEEP(500)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.mingguilu.com/media/170425_01_03_08.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;   WinWaitActive(&amp;quot;Cisco Systems VPN Client 5.0.07.0290 Setup&amp;quot;,&amp;quot;successfully installed&amp;quot;)
   ;;将vpn客户端配置文件拷贝到“C:\Program Files (x86)\Cisco Systems\VPN Client\Profiles”下
   FileCopy(&amp;quot;\\wh-mingguilu-01\Installers\Cisco\Cisco.VPN.Client.v5.0.07.0290.x64\quark-IDC.pcf&amp;quot;,&amp;quot;C:\Program Files (x86)\Cisco Systems\VPN Client\Profiles&amp;quot;,1)
   SLEEP(500)
   ;;点击“Finish”关闭窗口
   ControlClick(&amp;quot;Cisco Systems VPN Client 5.0.07.0290 Setup&amp;quot;,&amp;quot;successfully installed&amp;quot;,&amp;quot;Button1&amp;quot;,&amp;quot;left&amp;quot;,1)
   ;;点击“Finish”关闭窗口可能弹出标题为“Installer Information”的提示框口，也可能没有，需要使用if条件判断语句处理报错窗口
   If WinExists(&amp;quot;Installer Information&amp;quot;) Then
      WinActivate(&amp;quot;Installer Information&amp;quot;,&amp;quot;You must restart your system&amp;quot;)
      WinWaitActive(&amp;quot;Installer Information&amp;quot;,&amp;quot;You must restart your system&amp;quot;)
      SLEEP(500)
      ControlClick(&amp;quot;Installer Information&amp;quot;,&amp;quot;You must restart your system&amp;quot;,&amp;quot;Button2&amp;quot;,&amp;quot;left&amp;quot;,1)
      WinWaitClose(&amp;quot;Installer Information&amp;quot;,&amp;quot;You must restart your system&amp;quot;)
   Else
      WinWaitClose(&amp;quot;Cisco Systems VPN Client 5.0.07.0290 Setup&amp;quot;,&amp;quot;successfully installed&amp;quot;)
   EndIf
EndIf

; Script End
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>AutoIt3开发Helpdesk自动化工具之三:系统配置</title>
      <link>http://blog.mingguilu.com/%E7%8C%BF/AutoIt3%E5%BC%80%E5%8F%91Helpdesk%E8%87%AA%E5%8A%A8%E5%8C%96%E5%B7%A5%E5%85%B7%E4%B9%8B%E4%B8%89:%E7%B3%BB%E7%BB%9F%E9%85%8D%E7%BD%AE/</link>
      <pubDate>Sun, 23 Apr 2017 14:55:43 +0800</pubDate>
      
      <guid>http://blog.mingguilu.com/%E7%8C%BF/AutoIt3%E5%BC%80%E5%8F%91Helpdesk%E8%87%AA%E5%8A%A8%E5%8C%96%E5%B7%A5%E5%85%B7%E4%B9%8B%E4%B8%89:%E7%B3%BB%E7%BB%9F%E9%85%8D%E7%BD%AE/</guid>
      <description>

&lt;p&gt;本章将结合示例，演示如何编写自动配置系统的脚本&lt;/p&gt;

&lt;h3 id=&#34;一-修改administrator密码:c9ffc739bb4ddbbc027821a37c325092&#34;&gt;一、修改administrator密码&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;#cs ----------------------------------------------------------------------------

 AutoIt Version: 3.3.14.2
 Author:         MingguiLu

 Script Function:
    修改Administrator密码.

#ce ----------------------------------------------------------------------------

; Script Start - Add your code below here

;;最小化所有窗口
WinMinimizeAll()

;;定义变量用于存储administrator的密码
Global $administratorPassword = &amp;quot;Root@1024&amp;quot;

;;如果当前为管理员即可重设密码，如果为普通用户弹出警告提示
If IsAdmin() Then
   Run(&amp;quot;net user administrator &amp;quot; &amp;amp; $administratorPassword)
   SLEEP(500)
Else
   MsgBox(64,&amp;quot;警告&amp;quot;,&amp;quot;当前用户无权操作administrator密码，请切换其它管理员帐户操作！&amp;quot;)
   SLEEP(500)
EndIf

; Script End
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;二-创建普通用户admin:c9ffc739bb4ddbbc027821a37c325092&#34;&gt;二、创建普通用户Admin&lt;/h3&gt;

&lt;p&gt;当电脑在外网或脱域、administrator密码被篡改或不便告知用户、用户忘记了域账户的登录密码等极端情况下，无法登录到桌面时，可使用admin用户登录到桌面后运行远程协助软件&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.mingguilu.com/media/170423_01_02_01.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; #cs ----------------------------------------------------------------------------

 AutoIt Version: 3.3.14.2
 Author:         MingguiLu

 Script Function:
    创建普通用户admin

#ce ----------------------------------------------------------------------------

; Script Start - Add your code below here

;;最小化所有窗口
WinMinimizeAll()

If IsAdmin() Then
   ;;创建用户admin,密码设置为:abc@123
   Run(&amp;quot;net user admin abc@123 /add&amp;quot;)
   ;;将用户admin添加到本地组users中
   Run(&amp;quot;net localgroup users admin /add&amp;quot;)
   ;;打开计算机管理控制台
   ShellExecute(@SystemDir &amp;amp; &amp;quot;\compmgmt.msc&amp;quot;)
   WinWaitActive(&amp;quot;计算机管理&amp;quot;,&amp;quot;计算机管理(本地)&amp;quot;)
   ;;暂停脚本半秒钟
   SLEEP(500)
   ;;按下方向键下键
   Send(&amp;quot;{DOWN}&amp;quot;,5)
   SLEEP(500)
   Send(&amp;quot;{DOWN}&amp;quot;)
   SLEEP(500)
   Send(&amp;quot;{DOWN}&amp;quot;)
   SLEEP(500)
   Send(&amp;quot;{DOWN}&amp;quot;)
   SLEEP(500)
   Send(&amp;quot;{DOWN}&amp;quot;)
   SLEEP(500)
   ;;按下方向键右键
   Send(&amp;quot;{RIGHT}&amp;quot;)
   SLEEP(500)
   Send(&amp;quot;{DOWN}&amp;quot;)
   SLEEP(500)
   ;;按下Tab键
   Send(&amp;quot;{TAB}&amp;quot;)
   SLEEP(500)
   ;;按下回车键
   Send(&amp;quot;{ENTER}&amp;quot;)
   WinWaitActive(&amp;quot;admin 属性&amp;quot;,&amp;quot;常规&amp;quot;)
   SLEEP(500)
   ;;选中“用户不能更改密码”
   ControlCommand(&amp;quot;admin 属性&amp;quot;,&amp;quot;常规&amp;quot;,&amp;quot;Button2&amp;quot;,&amp;quot;Check&amp;quot;,&amp;quot;&amp;quot;)
   SLEEP(500)
   ;;选中“密码永不过期”
   ControlCommand(&amp;quot;admin 属性&amp;quot;,&amp;quot;常规&amp;quot;,&amp;quot;Button3&amp;quot;,&amp;quot;Check&amp;quot;,&amp;quot;&amp;quot;)
   SLEEP(500)
   ;;点击“确定”
   ControlClick(&amp;quot;admin 属性&amp;quot;,&amp;quot;常规&amp;quot;,&amp;quot;Button6&amp;quot;,&amp;quot;left&amp;quot;,1)
   WinActivate(&amp;quot;计算机管理&amp;quot;,&amp;quot;计算机管理(本地)&amp;quot;)
   WinWaitActive(&amp;quot;计算机管理&amp;quot;,&amp;quot;计算机管理(本地)&amp;quot;)
   SLEEP(500)
   WinClose(&amp;quot;计算机管理&amp;quot;,&amp;quot;计算机管理(本地)&amp;quot;)
   WinWaitClose(&amp;quot;计算机管理&amp;quot;,&amp;quot;计算机管理(本地)&amp;quot;)
Else
   MsgBox(64,&amp;quot;警告&amp;quot;,&amp;quot;当前用户无权操作用户和组，请切换其它管理员帐户操作！&amp;quot;)
EndIf

; Script End   
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;三-修改计算机名并加域:c9ffc739bb4ddbbc027821a37c325092&#34;&gt;三、修改计算机名并加域&lt;/h3&gt;

&lt;p&gt;当开始运行脚本时，弹出一个交互窗口用于输入计算机名，并存储到变量中以便之后调用。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#cs ----------------------------------------------------------------------------

 AutoIt Version: 3.3.14.2
 Author:         MingguiLu

 Script Function:
    修改计算机名并加域.

#ce ----------------------------------------------------------------------------

; Script Start - Add your code below here

;;最小化所有窗口
WinMinimizeAll()

Global $administratorUserName = &amp;quot;administrator&amp;quot;
Global $administratorPassword = &amp;quot;Root@1024&amp;quot;

;;定义变量$domainName存储域名
Global $domainName = &amp;quot;awesomeit.com&amp;quot;
;;定义变量$itUserName存储IT的账户
Global $itUserName = &amp;quot;mingguilu&amp;quot;
;;定义变量$itPassword存储IT的密码
Global $itPassword = &amp;quot;Password@1024&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.mingguilu.com/media/170423_01_03_01.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;;;定义变量$hostName存储用户交互中输入的计算机名
Global $hostName
Global $hostName = InputBox(&amp;quot;输入&amp;quot;,&amp;quot;请输入计算机名：&amp;quot;,&amp;quot;&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.mingguilu.com/media/170423_01_03_02.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;If IsAdmin() Then
   ;;打开系统属性控制台
   Run(&amp;quot;control sysdm.cpl&amp;quot;)
Else
   ;;以管理员模式打开系统属性控制台
   RunAs($administratorUserName,@ComputerName,$administratorPassword,0,&amp;quot;control sysdm.cpl&amp;quot;)
EndIf
WinWaitActive(&amp;quot;系统属性&amp;quot;,&amp;quot;计算机名&amp;quot;)
SLEEP(500)
;;进入“更改”
Send(&amp;quot;!c&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.mingguilu.com/media/170423_01_03_03.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;WinWaitActive(&amp;quot;计算机名/域更改&amp;quot;,&amp;quot;计算机名(&amp;amp;C):&amp;quot;)
SLEEP(500)
WinActivate(&amp;quot;计算机名/域更改&amp;quot;,&amp;quot;计算机名(&amp;amp;C):&amp;quot;)
;;自动填写计算机名
ControlSetText(&amp;quot;计算机名/域更改&amp;quot;,&amp;quot;计算机名(&amp;amp;C):&amp;quot;,&amp;quot;Edit1&amp;quot;,$hostName)
SLEEP(500)
;;选中“域（D）”
ControlCommand(&amp;quot;计算机名/域更改&amp;quot;,&amp;quot;计算机名(&amp;amp;C):&amp;quot;,&amp;quot;Button3&amp;quot;,&amp;quot;Check&amp;quot;)
SLEEP(500)
;;自动填写域名
ControlSetText(&amp;quot;计算机名/域更改&amp;quot;,&amp;quot;计算机名(&amp;amp;C):&amp;quot;,&amp;quot;Edit3&amp;quot;,$domainName)
SLEEP(500)
;;点击“确定”
ControlClick(&amp;quot;计算机名/域更改&amp;quot;,&amp;quot;计算机名(&amp;amp;C):&amp;quot;,&amp;quot;Button6&amp;quot;,&amp;quot;left&amp;quot;,1)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.mingguilu.com/media/170423_01_03_04.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;WinWaitActive(&amp;quot;Windows 安全&amp;quot;)
SLEEP(500)
;;自动填写IT人员账号
ControlSetText(&amp;quot;Windows 安全&amp;quot;,&amp;quot;&amp;quot;,&amp;quot;Edit1&amp;quot;,$itUserName)
SLEEP(500)
;;自动填写IT人员密码
ControlSetText(&amp;quot;Windows 安全&amp;quot;,&amp;quot;&amp;quot;,&amp;quot;Edit2&amp;quot;,$itPassword)
SLEEP(500)
;;点击“确定”
ControlClick(&amp;quot;Windows 安全&amp;quot;,&amp;quot;&amp;quot;,&amp;quot;Button2&amp;quot;,&amp;quot;left&amp;quot;,1)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.mingguilu.com/media/170423_01_03_05.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;WinWaitActive(&amp;quot;计算机名/域更改&amp;quot;,&amp;quot;欢迎加入 awesomeit.com 域&amp;quot;)
SLEEP(500)
ControlClick(&amp;quot;计算机名/域更改&amp;quot;,&amp;quot;欢迎加入 awesomeit.com 域&amp;quot;,&amp;quot;Button1&amp;quot;,&amp;quot;left&amp;quot;,1) 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;为了兼容可能弹出的提示框，使用while循环结合if条件判断，做应对的操作：如果8秒钟之内弹出“帐户名与安全标识间无任何映射完成”的提示框，则按下回车键关闭提示框并跳出循环；如果没有弹出这个提示框，则8秒之后结束循环&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Local $i = 0
    While $i &amp;lt;= 8000
       If WinExists(&amp;quot;计算机名/域更改&amp;quot;,&amp;quot;帐户名与安全标识间无任何映射完成&amp;quot;) Then
              WinActivate(&amp;quot;计算机名/域更改&amp;quot;,&amp;quot;帐户名与安全标识间无任何映射完成&amp;quot;)
              WinWaitActive(&amp;quot;计算机名/域更改&amp;quot;,&amp;quot;帐户名与安全标识间无任何映射完成&amp;quot;)
              SLEEP(500)
              Send(&amp;quot;{ENTER}&amp;quot;)
              ExitLoop
       Else
              SLEEP(1000)
              $i = $i + 1000
       EndIf
WEnd
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.mingguilu.com/media/170423_01_03_06.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;WinWaitActive(&amp;quot;计算机名/域更改&amp;quot;,&amp;quot;确定&amp;quot;)
SLEEP(500)
Send(&amp;quot;{ENTER}&amp;quot;)

WinWaitActive(&amp;quot;系统属性&amp;quot;,&amp;quot;计算机名&amp;quot;)
SLEEP(500)
ControlClick(&amp;quot;系统属性&amp;quot;,&amp;quot;计算机名&amp;quot;,&amp;quot;Button3&amp;quot;,&amp;quot;left&amp;quot;,1)

WinWaitActive(&amp;quot;Microsoft Windows&amp;quot;)
SLEEP(500)
Send(&amp;quot;!l&amp;quot;)
WinWaitClose(&amp;quot;Microsoft Windows&amp;quot;)

; Script End
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>AutoIt3开发Helpdesk自动化工具之二:常用语法</title>
      <link>http://blog.mingguilu.com/%E7%8C%BF/AutoIt3%E5%BC%80%E5%8F%91Helpdesk%E8%87%AA%E5%8A%A8%E5%8C%96%E5%B7%A5%E5%85%B7%E4%B9%8B%E4%BA%8C:%E5%B8%B8%E7%94%A8%E8%AF%AD%E6%B3%95/</link>
      <pubDate>Fri, 21 Apr 2017 09:11:59 +0800</pubDate>
      
      <guid>http://blog.mingguilu.com/%E7%8C%BF/AutoIt3%E5%BC%80%E5%8F%91Helpdesk%E8%87%AA%E5%8A%A8%E5%8C%96%E5%B7%A5%E5%85%B7%E4%B9%8B%E4%BA%8C:%E5%B8%B8%E7%94%A8%E8%AF%AD%E6%B3%95/</guid>
      <description>

&lt;p&gt;在正式开始脚本工具编写之前，先熟悉一下AutoIt3常用的语法&lt;/p&gt;

&lt;h4 id=&#34;参考文档:338b28e343cf68126d23434ed1836511&#34;&gt;参考文档：&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;AutoIt3安装目录中的官方英文手册 v3.3.14.2 ： AutoIt.chm&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;AutoIt 在线手册中文版_脚本之家 v3.1.1  :  &lt;a href=&#34;http://www.jb51.net/shouce/autoit/&#34;&gt;http://www.jb51.net/shouce/autoit/&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;编辑器:338b28e343cf68126d23434ed1836511&#34;&gt;编辑器&lt;/h4&gt;

&lt;p&gt;自带的编辑器是SciTe，带有所有的语法高亮功能，同时还整合了很多AutoIt的第三方工具（比如语法错误检查和脚本整理等）&lt;/p&gt;

&lt;p&gt;AutoIt3脚本文件的后缀名是&lt;code&gt;.au3&lt;/code&gt;，在安装AutoIt软件的系统上可直接运行，在未安装的系统上需编译为&lt;code&gt;.exe&lt;/code&gt;程序。创建&lt;code&gt;.au3&lt;/code&gt;格式的脚本文件方法：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;右键 ——&amp;gt; 新建 ——&amp;gt; AutoIt v3 Script&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;建议使用这种方法，优势在于脚本会自动添加一段头注释模板：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#cs ----------------------------------------------------------------------------

 AutoIt Version: 3.3.14.2
 Author:         myName

 Script Function:
    Template AutoIt script.

#ce ----------------------------------------------------------------------------

; Script Start - Add your code below here
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;在编辑器上 File ——&amp;gt; New、直接点击New图标、或者使用快捷键 &lt;code&gt;Ctrl + N&lt;/code&gt;，这些不会自动添加头注释&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;注释:338b28e343cf68126d23434ed1836511&#34;&gt;注释&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;单行注释  分号“;”之后的内容作为注释内容&lt;/li&gt;

&lt;li&gt;&lt;p&gt;多行注释&lt;/p&gt;

&lt;p&gt;#comments-start 注释开始，可简写为：#cs&lt;/p&gt;

&lt;p&gt;;code   脚本代码&lt;/p&gt;

&lt;p&gt;#comments-end   注释结束，可简写为：#ce&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;暂停执行脚本:338b28e343cf68126d23434ed1836511&#34;&gt;暂停执行脚本&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;Sleep ( 暂停时间 )  ;暂停执行的时间以毫秒为单位，1000毫秒 = 1秒

Sleep(500)
;推荐在每次等待窗口出现之后和模拟键鼠操作控件时使用Sleep暂停执行脚本半秒钟，以优化自动任务的可视效果
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;运行外部程序:338b28e343cf68126d23434ed1836511&#34;&gt;运行外部程序&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;Run ( &amp;quot;文件名&amp;quot; [, &amp;quot;工作目录&amp;quot; [, 标志]] )
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;.exe 可执行程序&lt;/p&gt;

&lt;p&gt;Run(&amp;ldquo;notepad.exe&amp;rdquo;)&lt;/p&gt;

&lt;p&gt;Run(&amp;ldquo;C:\Program Files\Microsoft Office\Office16\OUTLOOK.EXE&amp;rdquo;)   ;绝对路径&lt;/p&gt;

&lt;p&gt;Run(&amp;rdquo;\\wh-filesrv-01\Installers\LinPhone\Linphone-3.10.2-win32.exe&amp;rdquo;)  ;网络共享路径&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;.msi 微软格式的安装包&lt;/p&gt;

&lt;p&gt;Run(&amp;ldquo;msiexec /i \\wh-filesrv-01\Installers\Synjones\二代证读验机具USB驱动\USBDrv3.0-x64.msi&amp;rdquo;)&lt;br /&gt;
;调用系统程序&lt;code&gt;msiexec.exe&lt;/code&gt;操作.msi程序， &lt;code&gt;/i&lt;/code&gt;参数表示安装&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;.cpl     控制面板项&lt;/p&gt;

&lt;p&gt;Run(&amp;ldquo;control sysdm.cpl&amp;rdquo;)    ;打开系统属性窗口&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;.cer  证书文件&lt;/p&gt;

&lt;p&gt;Run(&amp;ldquo;explorer  \\wh-filesrv-01\Installers\AD\CA.cer&amp;rdquo;) ;打开安装证书窗口&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;DOS命令&lt;/p&gt;

&lt;p&gt;Run(&amp;ldquo;net user admin abc@123 /add&amp;rdquo;) ;创建本地用户admin，密码为abc@123&lt;/p&gt;

&lt;p&gt;Run(&amp;ldquo;net localgroup users admin /add&amp;rdquo;) ;将本地用户admin加入users组&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;系统目录&lt;/p&gt;

&lt;p&gt;Run(&amp;ldquo;explorer &amp;rdquo; &amp;amp; @ProgramFilesDir) ;打开C:\Program Files (x86)&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;以其它用户运行外部程序:338b28e343cf68126d23434ed1836511&#34;&gt;以其它用户运行外部程序&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;RunAs ( &amp;quot;用户名&amp;quot;, &amp;quot;域&amp;quot;, &amp;quot;密码&amp;quot;, 注册标志, &amp;quot;程序&amp;quot; [, &amp;quot;工作目录&amp;quot; [, 显示标志 [, 选项标志 ]]] )
;注册标志：0 - 不加载配置文件的交互式登录. 1 - 加载配置文件的交互式登录. 2 - 使用网络证书. 4 - 继承调用进程的环境, 而不是用户环境
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;以本地管理员Administrator运行&lt;/p&gt;

&lt;p&gt;Global $rootUserName = &amp;ldquo;administrator&amp;rdquo;&lt;br /&gt;
Global $rootPassword = &amp;ldquo;password@123456&amp;rdquo;&lt;br /&gt;
Local $tempUserName = @UserName&lt;/p&gt;

&lt;p&gt;RunAs($rootUserName,@ComputerName,$rootPassWord,0,&amp;rdquo;\\wh-filesrv-01\Installers\LinPhone\Linphone-3.10.2-win32.exe&amp;rdquo;,&amp;ldquo;&amp;rdquo;)&lt;/p&gt;

&lt;p&gt;RunAs($rootUserName,@ComputerName,$rootPassword,0,&amp;ldquo;net localgroup /delete  administrators &amp;rdquo; &amp;amp; $tempUserName,&amp;ldquo;&amp;rdquo;)&lt;/p&gt;

&lt;p&gt;RunAs($rootUserName,@ComputerName,$rootPassWord,0,&amp;ldquo;certutil -addstore -f Root \\wh-filesrv-01\Installers\AD\CA.cer&amp;rdquo;,&amp;ldquo;&amp;rdquo;)&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;使用shellexecute运行外部程序:338b28e343cf68126d23434ed1836511&#34;&gt;使用ShellExecute运行外部程序&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;ShellExecute ( &amp;quot;文件名&amp;quot; [, &amp;quot;参数&amp;quot; [, &amp;quot;工作目录&amp;quot; [, &amp;quot;动作&amp;quot; [, 显示标志]]]] )
;理论上windows能识别的文件，即双击能打开的文件，使用ShellExecute也能打开
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;.msi 微软格式的安装包&lt;/p&gt;

&lt;p&gt;ShellExecute(&amp;rdquo;\\wh-filesrv-01\Installers\Synjones\二代证读验机具USB驱动\USBDrv3.0-x64.msi&amp;rdquo;)    ;安装共享目录的.msi程序&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;.msc 微软管理控制台窗口&lt;/p&gt;

&lt;p&gt;ShellExecute(@SystemDir &amp;amp; &amp;ldquo;\compmgmt.msc&amp;rdquo;)  ;打开计算机管理&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;.docx、.xlsx、.pptx  Office文档&lt;/p&gt;

&lt;p&gt;ShellExecute(&amp;ldquo;test.docx&amp;rdquo;)   ;打开当前目录中的Word文件
ShellExecute(&amp;ldquo;test.xlsx&amp;rdquo;)   ;打开当前目录中的Excel文件
ShellExecute(&amp;ldquo;test.pptx&amp;rdquo;)   ;打开当前目录中的PPT文件&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;.lnk  快捷方式&lt;/p&gt;

&lt;p&gt;ShellExecute(@UserProfileDir &amp;amp; &amp;ldquo;\desktop\微信.lnk&amp;rdquo;)   ;通过快捷方式运行微信&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;窗口操作:338b28e343cf68126d23434ed1836511&#34;&gt;窗口操作&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;最小化所有窗口&lt;/p&gt;

&lt;p&gt;WinMinimizeAll()&lt;br /&gt;
;我习惯在每个任务开头加上这个函数，以便仅显示任务的活动窗口&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;等待指定窗口出现&lt;/p&gt;

&lt;p&gt;WinWait ( &amp;ldquo;窗口标题&amp;rdquo; [, &amp;ldquo;窗口文本&amp;rdquo; [, 超时时间]] )&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;激活指定的窗口&lt;/p&gt;

&lt;p&gt;WinActivate ( &amp;ldquo;窗口标题&amp;rdquo; [, &amp;ldquo;窗口文本&amp;rdquo;] )&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;等待指定的窗口被激活&lt;/p&gt;

&lt;p&gt;WinWaitActive ( &amp;ldquo;窗口标题&amp;rdquo;, [&amp;ldquo;窗口文本&amp;rdquo;], [超时时间] )&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;关闭指定的窗口&lt;/p&gt;

&lt;p&gt;WinClose ( &amp;ldquo;窗口标题&amp;rdquo; [, &amp;ldquo;窗口文本&amp;rdquo;] )&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;等待指定的窗口被关闭&lt;/p&gt;

&lt;p&gt;WinWaitClose ( &amp;ldquo;窗口标题&amp;rdquo; [, &amp;ldquo;窗口文本&amp;rdquo; [, 超时时间]] )&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;检查指定的窗口是否存在&lt;/p&gt;

&lt;p&gt;WinExists ( &amp;ldquo;窗口标题&amp;rdquo; [, &amp;ldquo;窗口文本&amp;rdquo;] )&lt;br /&gt;
;返回值：若目标窗口确实存在则返回值为1，否则返回值为0&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;检查指定的窗口是否存在且当前被激活&lt;/p&gt;

&lt;p&gt;WinActive ( &amp;ldquo;窗口标题&amp;rdquo; [, &amp;ldquo;窗口文本&amp;rdquo;] )&lt;br /&gt;
;返回值：若目标窗口确实存在并被激活了则返回1，否则返回值为0&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;获取指定窗口的完整标题名&lt;/p&gt;

&lt;p&gt;WinGetTitle ( &amp;ldquo;窗口标题&amp;rdquo; [, &amp;ldquo;窗口文本&amp;rdquo;] )&lt;br /&gt;
;返回值：返回一个含有目标窗口的完整标题的字符串。若无匹配窗口则返回值为1&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;获取指定窗口中的文本&lt;/p&gt;

&lt;p&gt;WinGetText ( &amp;ldquo;窗口标题&amp;rdquo; [, &amp;ldquo;窗口文本&amp;rdquo;] )&lt;br /&gt;
;返回值：返回一个含有获得的窗口文本的字符串。若无匹配窗口则返回值为1&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;控件操作:338b28e343cf68126d23434ed1836511&#34;&gt;控件操作&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;向指定控件发送鼠标点击命令&lt;/p&gt;

&lt;p&gt;ControlClick ( &amp;ldquo;窗口标题&amp;rdquo;, &amp;ldquo;窗口文本&amp;rdquo;, &amp;ldquo;控件ID&amp;rdquo; [, 按钮] [, 点击次数]] )&lt;br /&gt;
;按钮：默认“left”，还可以是“right”、“middle”；点击次数：默认“1”&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;选中或撤销选中指定的复选/单选框&lt;/p&gt;

&lt;p&gt;ControlCommand ( &amp;ldquo;窗口标题&amp;rdquo;, &amp;ldquo;窗口文本&amp;rdquo;, 控件ID, &amp;ldquo;命令&amp;rdquo;, &amp;ldquo;选项&amp;rdquo; )&lt;br /&gt;
;命令：“Check”使目标按钮（复选框/单选框）变为选中状态 ;“UnCheck”撤销目标按钮（复选框/单选框）的选中状态&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;向指定的控件发送字符串&lt;/p&gt;

&lt;p&gt;ControlSend ( &amp;ldquo;窗口标题&amp;rdquo;, &amp;ldquo;窗口文本&amp;rdquo;, 控件ID, &amp;ldquo;字符串&amp;rdquo; [, 标志] )&lt;br /&gt;
;向控件发送指定的字符串，并追加到原有字符串后面&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;修改指定控件的文本&lt;/p&gt;

&lt;p&gt;ControlSetText( &amp;ldquo;窗口标题&amp;rdquo;, &amp;ldquo;窗口文本&amp;rdquo;, 控件ID, &amp;ldquo;新文本&amp;rdquo; )&lt;br /&gt;
;向控件发送指定的字符串，并替换原有的字符串&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;模拟键击操作:338b28e343cf68126d23434ed1836511&#34;&gt;模拟键击操作&lt;/h4&gt;

&lt;p&gt;参考文档：&lt;a href=&#34;http://www.jb51.net/shouce/autoit/AutoIt_CN/html/functions/Send.htm&#34;&gt;Send - AutoIt 在线手册中文版_脚本之家&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Send ( &amp;quot;按键&amp;quot; [, 标志] )  
;向激活窗口发送模拟键击操作

!  表示 Alt  
+ 表示 Shift  
^ 表示 Ctrl  
# 表示 Windows  

Send(&amp;quot;!y&amp;quot;)  ;按下Alt+Y键
Send(&amp;quot;^s&amp;quot;)  ;按下Ctrl+S键
Send(&amp;quot;#r&amp;quot;)  ;按下Win+R键，打开运行

Send(&amp;quot;{TAB}&amp;quot;)  ;按下Tab键  
Send(&amp;quot;+{TAB 4}&amp;quot;)  ;连续按下4次Shift+Tab键  
Send(&amp;quot;{ENTER}&amp;quot;)  ;按下回车键  
Send(&amp;quot;{SPACE}&amp;quot;)  ;按下空格键  

Send(&amp;quot;{UP}&amp;quot;)  ;方向键上  
Send(&amp;quot;{DOWN 3}&amp;quot;)  ;连续按3次方向键下  
Send(&amp;quot;{LEFT}&amp;quot;)  ;方向键左  
Send(&amp;quot;{RIGHT 5}&amp;quot;)  ;连续按5次方向键右  
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;消息框:338b28e343cf68126d23434ed1836511&#34;&gt;消息框&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;MsgBox ( 标志, &amp;quot;标题&amp;quot;, &amp;quot;文本&amp;quot; [, 超时时间] )  
;显示一个简单的对话框（可设置超时属性）

$i = 5
While $i &amp;gt; 0
   MsgBox(64, &amp;quot;测试&amp;quot;, &amp;quot;此对话框将会在&amp;quot; &amp;amp; $i &amp;amp; &amp;quot;秒后自动消失&amp;quot;,1)
   Sleep(1000)
   $i = $i - 1
WEnd
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;输入框:338b28e343cf68126d23434ed1836511&#34;&gt;输入框&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;InputBox ( &amp;quot;标题&amp;quot;, &amp;quot;提示信息&amp;quot; [, &amp;quot;默认数据&amp;quot; [, &amp;quot;密码字符&amp;quot; [, 宽度, 高度 [, 左边, 上边 [, 超时时间]]]]] )  
;显示一个输入框以供用户输入数据

$yourName = InputBox(&amp;quot;提问&amp;quot;,&amp;quot;请输入你的姓名：&amp;quot;,&amp;quot;Please enter your name&amp;quot;)
MsgBox(64,&amp;quot;欢迎&amp;quot;,&amp;quot;Wellcome, &amp;quot; &amp;amp; $yourName &amp;amp; &amp;quot; !&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;检查当前用户是否拥有管理员权限:338b28e343cf68126d23434ed1836511&#34;&gt;检查当前用户是否拥有管理员权限&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;IsAdmin()
; 返回值为 1，说明当前用户拥有管理员权限  ;返回值为0，说明用户不是管理员

If IsAdmin() Then
   MsgBox(64,&amp;quot;提示&amp;quot;,&amp;quot;当前用户为系统管理员！请继续操作！&amp;quot;)
Else
   MsgBox(64,&amp;quot;提示&amp;quot;,&amp;quot;当前用户非系统管理员！请切换管理员操作！&amp;quot;)
EndIf
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;检查某个字符串是否含有给定的子串:338b28e343cf68126d23434ed1836511&#34;&gt;检查某个字符串是否含有给定的子串&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;StringInStr ( &amp;quot;字符串&amp;quot;, &amp;quot;子串&amp;quot; [, 区分大小写 [, 出现次序]] )
;成功：返回子串的位置  ;失败：返回值为0，说明未发现匹配子串
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;尝试运行2次下面的脚本示例：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;WinMinimizeAll()
Run(&amp;quot;notepad.exe&amp;quot;)
WinWaitActive(&amp;quot;无标题 - 记事本&amp;quot;)
Sleep(500)
ControlSend(&amp;quot;无标题 - 记事本&amp;quot;,&amp;quot;&amp;quot;,&amp;quot;Edit1&amp;quot;,&amp;quot;写入一段演示的文本内容！&amp;quot;)
Sleep(500)
$tempText = WinGetText(&amp;quot;&amp;quot;)
If StringInStr($tempText,&amp;quot;一段演示&amp;quot;) Then
   MsgBox(64,&amp;quot;提示&amp;quot;,&amp;quot;文本写入成功&amp;quot;,1)
EndIf
Sleep(500)
WinClose(&amp;quot;无标题 - 记事本&amp;quot;)
WinWaitActive(&amp;quot;记事本&amp;quot;,&amp;quot;保存(&amp;amp;S)&amp;quot;)
Sleep(500)
Send(&amp;quot;!s&amp;quot;)
WinWaitActive(&amp;quot;另存为&amp;quot;,&amp;quot;命名空间树控件&amp;quot;)
Sleep(500)
ControlSetText(&amp;quot;另存为&amp;quot;,&amp;quot;命名空间树控件&amp;quot;,&amp;quot;Edit1&amp;quot;,&amp;quot;test.txt&amp;quot;)
Sleep(500)
Send(&amp;quot;!s&amp;quot;)
Sleep(500)
If WinExists(&amp;quot;确认另存为&amp;quot;) Then
   ;WinActivate(&amp;quot;确认另存为&amp;quot;)
   ;WinWaitActive(&amp;quot;确认另存为&amp;quot;)
   Send(&amp;quot;!y&amp;quot;)
EndIf   
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;操作注册表:338b28e343cf68126d23434ed1836511&#34;&gt;操作注册表&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;读取注册表指定的值&lt;/p&gt;

&lt;p&gt;RegRead ( &amp;ldquo;键名&amp;rdquo;, &amp;ldquo;值项&amp;rdquo; )&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;创建一个主键、子键或值项&lt;/p&gt;

&lt;p&gt;RegWrite ( &amp;ldquo;键名&amp;rdquo; [,&amp;ldquo;值项&amp;rdquo;, &amp;ldquo;类型&amp;rdquo;, 数据] )&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;从注册表中删除指定键值&lt;/p&gt;

&lt;p&gt;RegDelete ( &amp;ldquo;键名&amp;rdquo; [, &amp;ldquo;值项&amp;rdquo;] )&lt;/p&gt;

&lt;p&gt;;修改注册表实现开机自动登录：&lt;/p&gt;

&lt;p&gt;RegWrite(&amp;ldquo;HKEY_LOCAL_MACHINE64\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon&amp;rdquo;, &amp;ldquo;AutoAdminLogon&amp;rdquo;, &amp;ldquo;REG_SZ&amp;rdquo;, &amp;ldquo;1&amp;rdquo;)&lt;br /&gt;
RegWrite(&amp;ldquo;HKEY_LOCAL_MACHINE64\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon&amp;rdquo;, &amp;ldquo;DefaultDomainName&amp;rdquo;, &amp;ldquo;REG_SZ&amp;rdquo;, $domainName)&lt;br /&gt;
RegWrite(&amp;ldquo;HKEY_LOCAL_MACHINE64\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon&amp;rdquo;, &amp;ldquo;DefaultUserName&amp;rdquo;, &amp;ldquo;REG_SZ&amp;rdquo;, $userName)&lt;br /&gt;
RegWrite(&amp;ldquo;HKEY_LOCAL_MACHINE64\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon&amp;rdquo;, &amp;ldquo;DefaultPassword&amp;rdquo;, &amp;ldquo;REG_SZ&amp;rdquo;, $userPassword)&lt;/p&gt;

&lt;p&gt;;修改注册表取消开机自动登录：&lt;/p&gt;

&lt;p&gt;RegWrite(&amp;ldquo;HKEY_LOCAL_MACHINE64\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon&amp;rdquo;, &amp;ldquo;AutoAdminLogon&amp;rdquo;, &amp;ldquo;REG_SZ&amp;rdquo;, &amp;ldquo;0&amp;rdquo;)&lt;br /&gt;
RegWrite(&amp;ldquo;HKEY_LOCAL_MACHINE64\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon&amp;rdquo;, &amp;ldquo;DefaultDomainName&amp;rdquo;, &amp;ldquo;REG_SZ&amp;rdquo;, &amp;ldquo;.&amp;rdquo;)&lt;br /&gt;
RegWrite(&amp;ldquo;HKEY_LOCAL_MACHINE64\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon&amp;rdquo;, &amp;ldquo;DefaultUserName&amp;rdquo;, &amp;ldquo;REG_SZ&amp;rdquo;,&amp;ldquo;administrator&amp;rdquo;)&lt;br /&gt;
RegDelete(&amp;ldquo;HKEY_LOCAL_MACHINE64\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon&amp;rdquo;, &amp;ldquo;DefaultPassword&amp;rdquo;)&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;注意！操作注册表有一个技巧十分重要，如果是Windows x64系统，需在“HKEY_LOCAL_MACHINE”后加上“64”，否则操作会被重定向至 “HKEY_LOCAL_MACHINE\SOFTWARE\Wow6432Node”&lt;/p&gt;

&lt;h4 id=&#34;关机:338b28e343cf68126d23434ed1836511&#34;&gt;关机&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;Shutdown ( 代码 )

0 = Logoff（注销）
1 = Shutdown（关机）
2 = Reboot（重启）
4 = Force（强制执行）
8 = Power down（断电）
32= Suspend（待机）
64= Hibernate（休眠）
可按需把相应数值相加。比如，要关机并断电，则应指定数值 9 （shutdown + power down = 1 + 8 = 9）
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>AutoIt3开发Helpdesk自动化工具之一:简介</title>
      <link>http://blog.mingguilu.com/%E7%8C%BF/AutoIT3%E5%BC%80%E5%8F%91Helpdesk%E8%87%AA%E5%8A%A8%E5%8C%96%E5%B7%A5%E5%85%B7%E4%B9%8B%E4%B8%80:%E7%AE%80%E4%BB%8B/</link>
      <pubDate>Tue, 18 Apr 2017 16:30:57 +0800</pubDate>
      
      <guid>http://blog.mingguilu.com/%E7%8C%BF/AutoIT3%E5%BC%80%E5%8F%91Helpdesk%E8%87%AA%E5%8A%A8%E5%8C%96%E5%B7%A5%E5%85%B7%E4%B9%8B%E4%B8%80:%E7%AE%80%E4%BB%8B/</guid>
      <description>

&lt;p&gt;在员工数量较多的大中型公司，Hekpdesk工程师每天重复处理大量简单而繁琐的桌面软硬件请求和报障，这些工作大多在初期进行短暂的技术学习后，很快演变为经验积累，但再丰富的经验如果无法解放时间和双手，枯燥和疲惫一直如影随形。细想一下，有些工作场景中Helpdesk工程师像机器一样在每台PC上按照相同的流程，打开相同的窗口，安装相同的软件，设置相同的选项&amp;hellip;&amp;hellip;.听起来让人很不安？但这样的情景时常上演，比如需要给30名新员工配置办公电脑、部门需要统一安装某几款软件并进行设置、或者反过来要卸载某款软件&amp;hellip;&amp;hellip;那么何必把自己当做机器呢，电脑本身不就是一台聪明的机器吗！&lt;/p&gt;

&lt;p&gt;接下来，我们将使用AutoIt3来开发一个让电脑自己执行重复任务的自动化脚本工具，并打造一个简洁实用的图形界面。&lt;/p&gt;

&lt;h3 id=&#34;一-autoit-v3-简介-https-www-autoitscript-com-site-autoit:082ed7ddbc2103f688f62492d15086fc&#34;&gt;一、&lt;a href=&#34;https://www.autoitscript.com/site/autoit/&#34;&gt;AutoIt v3 简介&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;AutoIt v3是一种免费的基于类BASIC的脚本语言，用于自动化Windows GUI和通用脚本。 它使用模拟键盘，鼠标移动和窗口/控制操作的组合，以便以其他语言（例如VBScript和SendKeys）不可能或不可靠的方式自动执行任务。 AutoIt也非常小，独立，将运行在所有版本的Windows开箱即用，不需要烦人的“runtime”要求！&lt;/p&gt;

&lt;p&gt;AutoIt最初设计用于PC“大批量交付”情况，可靠地自动化并配置成千上万的个人电脑。 随着时间的推移，它已经成为一种强大的语言，它支持复杂的表达式，用户自定义函数，循环以及经验丰富的脚本编写期望。&lt;/p&gt;

&lt;h4 id=&#34;autoit-v3-的优秀特性:082ed7ddbc2103f688f62492d15086fc&#34;&gt;AutoIt v3 的优秀特性:&lt;/h4&gt;

&lt;p&gt;&lt;p&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;简单易学的类BASIC语法&lt;/li&gt;
&lt;li&gt;模拟按键和鼠标移动&lt;/li&gt;
&lt;li&gt;操作窗口和进程&lt;/li&gt;
&lt;li&gt;与所有标准的Windows控件进行交互&lt;/li&gt;
&lt;li&gt;脚本可以编译成独立的可执行文件&lt;/li&gt;
&lt;li&gt;创建图形用户界面（GUI）&lt;/li&gt;
&lt;li&gt;支持COM&lt;/li&gt;
&lt;li&gt;正则表达式&lt;/li&gt;
&lt;li&gt;直接调用外部DLL和Windows API函数&lt;/li&gt;
&lt;li&gt;Scriptable RunAs函数&lt;/li&gt;
&lt;li&gt;详细的帮助文件和大型社区支持论坛&lt;/li&gt;
&lt;li&gt;兼容Windows XP / Server 2003 / Vista / Windows 7 / Server 2008 / Server  2008 R2 / Windows 8 / Server 2012 R2&lt;/li&gt;
&lt;li&gt;支持Unicode和x64&lt;/li&gt;
&lt;li&gt;支持数字签名&lt;/li&gt;
&lt;li&gt;适用于Windows Vista的用户帐户控制（UAC）&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;最重要的是，AutoIt将持续免费 - 但是如果你想支持在项目和网络托管上花费的时间，金钱和精力，那么你可以&lt;a href=&#34;https://www.autoitscript.com/site/donate/&#34;&gt;捐赠&lt;/a&gt;。&lt;/p&gt;

&lt;h4 id=&#34;搭建autoit-v3-脚本开发环境:082ed7ddbc2103f688f62492d15086fc&#34;&gt;搭建AutoIt v3 脚本开发环境&lt;/h4&gt;

&lt;p&gt;&lt;p&gt;
&lt;a href=&#34;https://www.autoitscript.com/site/autoit/downloads/&#34;&gt;下载AutoIt v3 开发工具&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;下载时建议选择AutoIt3完全安装程序，它包含了：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;AutoIt 脚本运行软件、文档和实例&lt;/li&gt;
&lt;li&gt;Aut2Exe - 将可执行脚本转换为独立的.exe文件&lt;/li&gt;
&lt;li&gt;AutoitX - DLL/COM control。 具体作用我也不明白，安装后该目录中存放着写.dll文件&lt;/li&gt;
&lt;li&gt;Editor - 一个删减版本的SciTE脚本编辑器&lt;/li&gt;
&lt;li&gt;Au3Info - 用于探测指定窗口的详细信息，包括窗口大小和坐标、标题和文本、控件类型和ID等&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;安装时以缺省配置安装即可，安装完成即可获得我们所需的全部环境&lt;/p&gt;

&lt;h3 id=&#34;二-项目简介:082ed7ddbc2103f688f62492d15086fc&#34;&gt;二、项目简介&lt;/h3&gt;

&lt;p&gt;接下来将使用AutoIt3开发一个“Helpdesk自动化工具”，并打造一个简洁实用的用户图形界面以便交互。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.mingguilu.com/media/170419_01_02_01.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h4 id=&#34;主要用途:082ed7ddbc2103f688f62492d15086fc&#34;&gt;主要用途&lt;/h4&gt;

&lt;p&gt;用于新员工入职后电脑的自动化配置&lt;/p&gt;

&lt;h4 id=&#34;功能实现:082ed7ddbc2103f688f62492d15086fc&#34;&gt;功能实现&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;随时随地开箱即用：通过文件共享在内网每一台PC上运行本工具和软件，并兼容各种意外的情况&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;我们更希望完全实现无人值守，但这并不容易。由于AutoIt3通常使用标题和文本来等待、激活、操作窗口，所以意外窗口使得自动化过程很脆弱。管理员用户和普通用户下、软件重复安装时、电脑运行速度、甚至工具本身都可能造成意外窗口，这需要反复调试来使脚本兼容各种场景。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;自动进行多任务的组合：在图形界面上通过点击预设的操作选项和用户选项，自动勾选所需的功能模块&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;如上图，点击“驻地(含VPN)”，会自动勾选上所需的系统配置、软件安装项和自动重启系统+登录域账户选项，在点击“运行”后自动配置安装，并自动重启，自动登录用户账户；当用户帐号登陆后，再次运行工具勾选对应的“用户选项”进行outlook、skype等配置&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;自动进行系统配置： 为了实现桌面统一规范化管理或应对之后可能面临的需求&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;例如：创建一个本地用户Admin、添加IT组至本地管理员组&lt;/p&gt;

&lt;p&gt;公司在各地开设分职场，但由于员工数量较少未安排驻留的Helpdesk工程师，所有的需求和故障通过电话或远程桌面进行支持，为了应对电脑出现脱域无法登录，或本地管理员密码被爆破的情况，可以在初始配置时创建一个本地admin用户，加入users组，以便用户能顺利登录桌面提供TeamViewer远程授权；而事先将Helpdesk组加入电脑本地管理员组，可在远程到用户桌面后通过切换用户，夺回管理员权限并重置密码&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;自动进行软件安装：为了安装多个软件组合时，自动启动安装程序，自动配置选项直至安装完成&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;一般我们会将操纵系统和常用的办公软件通过MDT做统一部署，比如Office、输入法、PDF阅读器、桌面词典等，而各部门专用的业务软件则会在配置电脑时进行安装&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Python3从文件中读取数据</title>
      <link>http://blog.mingguilu.com/%E7%8C%BF/Python3%E4%BB%8E%E6%96%87%E4%BB%B6%E4%B8%AD%E8%AF%BB%E5%8F%96%E6%95%B0%E6%8D%AE/</link>
      <pubDate>Sun, 12 Mar 2017 13:06:28 +0800</pubDate>
      
      <guid>http://blog.mingguilu.com/%E7%8C%BF/Python3%E4%BB%8E%E6%96%87%E4%BB%B6%E4%B8%AD%E8%AF%BB%E5%8F%96%E6%95%B0%E6%8D%AE/</guid>
      <description>

&lt;p&gt;Python3有三种从文件中读取数据的方法：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;read()　读取整个文件内容；占用内存多&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;readline()　每次读取并返回一行数据；读取速度慢，每次占用内存少&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;readlines()　读取每一行数据，并作为元素存储在一个列表中&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;下面我将圆周率π的部分数值拆分为三行存储在文件&lt;code&gt;pi_digits.txt&lt;/code&gt;中，然后使用python读取文件并拼接为完整的&lt;code&gt;π&lt;/code&gt;：3.141592653589793238462643383279，注意得到结果是字符串，并不是数字&lt;/p&gt;

&lt;p&gt;使用&lt;code&gt;.read()&lt;/code&gt;读取文件&lt;code&gt;pi_digits.txt&lt;/code&gt;的全部内容&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;with open(&#39;pi_digits.txt&#39;) as file_object:
    &#39;&#39;&#39;打开文件&#39;&#39;&#39;
    print(file_object.read())
    &#39;&#39;&#39;打印文件内容&#39;&#39;&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;打印结果：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;3.1415926535
  8979323846
  2643383279
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;方法一-read:70c1948403385fde2f5c586d29c1840f&#34;&gt;方法一：.read()&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;with open(&#39;pi_digits.txt&#39;) as file_object:
    &#39;&#39;&#39;打开文件&#39;&#39;&#39;
    pi = file_object.read()
    &#39;&#39;&#39;读取文件内容并赋给变量content&#39;&#39;&#39;
    print(pi.replace(&amp;quot;\n&amp;quot;,&amp;quot;&amp;quot;).replace(&amp;quot; &amp;quot;,&amp;quot;&amp;quot;))
    &#39;&#39;&#39;使用.replace()将每行末尾的换行符和空格，替换为空，打印拼接完成的π&#39;&#39;&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;方法二-逐行读取:70c1948403385fde2f5c586d29c1840f&#34;&gt;方法二：逐行读取&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;with open(&#39;pi_digits.txt&#39;) as file_object:
    &#39;&#39;&#39;打开文件&#39;&#39;&#39;
    pi = &#39;&#39;
    &#39;&#39;&#39;初始化变量pi&#39;&#39;&#39;
    for line in file_object:
        &#39;&#39;&#39;逐行读取文件的每一行内容&#39;&#39;&#39;
        pi += line.strip()
        &#39;&#39;&#39;剔除元素首尾的空字符后做字符串拼接，并赋给pi&#39;&#39;&#39;
        # pi += &amp;quot;&amp;quot;.join(line.strip())
    print(pi)
    &#39;&#39;&#39;打印拼接完成的π&#39;&#39;&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;方法三-readline:70c1948403385fde2f5c586d29c1840f&#34;&gt;方法三：.readline()&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;with open(&#39;pi_digits.txt&#39;) as file_object:
    &#39;&#39;&#39;打开文件&#39;&#39;&#39;
    pi = &#39;&#39;
    &#39;&#39;&#39;初始化变量pi&#39;&#39;&#39;
    while True:
        &#39;&#39;&#39;???&#39;&#39;&#39;
        line = file_object.readline()
        &#39;&#39;&#39;读取一行内容赋给变量line&#39;&#39;&#39;
        if line:
            &#39;&#39;&#39;如果读取到一行数据&#39;&#39;&#39;
            #print(line)
            pi += line.strip()
            &#39;&#39;&#39;剔除这行数据两端的空字符之后拼接并赋给pi&#39;&#39;&#39;
        else:
            &#39;&#39;&#39;如果读取内容为空&#39;&#39;&#39;
            break
            &#39;&#39;&#39;退出循环&#39;&#39;&#39;
     print(pi)
     &#39;&#39;&#39;打印拼接完成的π&#39;&#39;&#39; 
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;方法四-readlines:70c1948403385fde2f5c586d29c1840f&#34;&gt;方法四：.readlines()&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;with open(&#39;pi_digits.txt&#39;) as file_object:
    &#39;&#39;&#39;打开文件&#39;&#39;&#39;
    lines = file_object.readlines()
    &#39;&#39;&#39;读取文件的每行作为元素存入列表&#39;&#39;&#39;
    print(lines)
    &#39;&#39;&#39;打印列表&#39;&#39;&#39;
    pi = &#39;&#39;
    &#39;&#39;&#39;初始化变量pi&#39;&#39;&#39;
    for line in lines:
        &#39;&#39;&#39;遍历列表的元素&#39;&#39;&#39;
        pi += line.strip()
        &#39;&#39;&#39;剔除元素首尾的空字符后做字符串拼接，并赋给pi&#39;&#39;&#39;
    print(pi)
    &#39;&#39;&#39;打印拼接完成的π&#39;&#39;&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;方法五-read-split:70c1948403385fde2f5c586d29c1840f&#34;&gt;方法五：.read().split()&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;with open(&#39;pi_digits.txt&#39;) as file_object:
    &#39;&#39;&#39;打开文件&#39;&#39;&#39;
    lines = file_object.read().split()
    &#39;&#39;&#39;将文件分割为字符串列表，相对于.readlines(),这种方法在分割内容时，就剔除了空字符&#39;&#39;&#39;
    print(lines)
    &#39;&#39;&#39;打印列表&#39;&#39;&#39;
    pi = &#39;&#39;
    &#39;&#39;&#39;初始化变量pi，用于表示完整的π&#39;&#39;&#39;
    for line in lines:
        &#39;&#39;&#39;遍历列表的元素&#39;&#39;&#39;
        pi += line
        &#39;&#39;&#39;将每个元素做字符串拼接，并赋给pi&#39;&#39;&#39;
    print(pi)
    &#39;&#39;&#39;打印拼接完成的π&#39;&#39;
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Github_Pages灾备至Coding_Pages</title>
      <link>http://blog.mingguilu.com/%E7%8B%AE/Github_Pages%E7%81%BE%E5%A4%87%E8%87%B3Coding_Pages/</link>
      <pubDate>Sun, 26 Feb 2017 17:32:57 +0800</pubDate>
      
      <guid>http://blog.mingguilu.com/%E7%8B%AE/Github_Pages%E7%81%BE%E5%A4%87%E8%87%B3Coding_Pages/</guid>
      <description>

&lt;p&gt;周四晚间在家访问我托管在Github Pages上的Blog时发现网站打不开，确认本地网络没问题，尝试清理浏览器缓存，刷新系统缓存，问题依旧。下意识的回想起来今天我修改代码啦？调整过DNSPod的解析记录啦？还是站点没备案被和谐了？&amp;hellip;&amp;hellip;打开微博刷新了一下，看到关注的几个技术大V:Easy、刘巍峰、梁斌penny都发布或转发了Github无法访问的消息，我有点惊讶：卧槽！why？&lt;/p&gt;

&lt;p&gt;随即查看了DNSPod的监控，看到托管在Github Pages的三个站点全部告警。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.mingguilu.com/media/170226_01_01.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;零点前后部分地区开始恢复访问，但周五上午我在工地访问Github依然时断时续，速度极慢，而github.io始终无法访问，直到中午才恢复正常。事后没能找到关于本次Github无法访问的详细解析，但发现相对我这样的Git小白用户，真正的开发人员似乎都见怪不怪，这次只是又一次而已。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.mingguilu.com/media/170226_01_02.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;我想起来刚接触Hugo时在&lt;a href=&#34;http://www.gohugo.org/&#34;&gt;Hugo中文文档&lt;/a&gt;看到的那篇&lt;a href=&#34;http://www.gohugo.org/post/coderzh-automated-deploy-hugo/&#34;&gt;通过webhook将Hugo自动部署至GitHub Pages和GitCafe Pages&lt;/a&gt;，那时完全看不懂，其实现在也是&amp;hellip;&amp;hellip; 不过我突然明白为什么托管在Github上的代码也要容灾，虽然Github的服务相对稳定可靠，但我们的网络并非如此，将代码备份到国内的代码托管服务上是很有必要的。目前我并不需要自动部署项目至Github和GitCafe，我只希望能够将本地代码同时push到两个远程库，手工创建版本库，并推送到远程仓库，可以让我更熟练Git的常用命令。&lt;/p&gt;

&lt;p&gt;这个方法很简单：先将Github上已有的仓库导入到Coding，在本地.git版本库配置文件中添加Coding远程仓库的地址，一次push即可将代码同时推送到Github和Coding。&lt;/p&gt;

&lt;h3 id=&#34;1-注册coding:e7706393a2e33dc7c49d540b3db4cdd9&#34;&gt;1. 注册Coding&lt;/h3&gt;

&lt;p&gt;起初我是冲着&lt;a href=&#34;https://gitcafe.com/&#34;&gt;GitCafe&lt;/a&gt;去的，但现在已经合并到&lt;a href=&#34;https://coding.net&#34;&gt;Coding&lt;/a&gt;了。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.mingguilu.com/media/170226_01_01_01.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;2-创建项目的同时导入github的仓库:e7706393a2e33dc7c49d540b3db4cdd9&#34;&gt;2. 创建项目的同时导入Github的仓库&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.mingguilu.com/media/170226_01_02_01.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;3-本地-git版本库追加coding远程仓库地址:e7706393a2e33dc7c49d540b3db4cdd9&#34;&gt;3. 本地.git版本库追加Coding远程仓库地址&lt;/h3&gt;

&lt;p&gt;修改 .gitmodules&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ vim .gitmodules 
[submodule &amp;quot;public&amp;quot;]
    path = public
    url = git@github.com:mingguilu/blog.mingguilu.com.git
    url = git@git.coding.net:Mingguilu/blog.mingguilu.com.git       # 添加Coding远程仓库地址
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;修改 .git/config&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ vim .git/config 
[core]
    repositoryformatversion = 0
    filemode = true
    bare = false
    logallrefupdates = true
[remote &amp;quot;origin&amp;quot;]
    url = git@github.com:mingguilu/blog_mingguilu_com.git
    url = git@git.coding.net:Mingguilu/blog_mingguilu_com.git       # 添加Coding远程仓库地址
    fetch = +refs/heads/*:refs/remotes/origin/*
[branch &amp;quot;master&amp;quot;]
    remote = origin
    merge = refs/heads/master
[submodule &amp;quot;public&amp;quot;]
    url = git@github.com:mingguilu/blog.mingguilu.com.git
    url = git@git.coding.net:Mingguilu/blog.mingguilu.com.git       # 添加Coding远程仓库地址
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;修改 .git/modules/public/config&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ vim .git/modules/public/config 
[core]
    repositoryformatversion = 0
    filemode = true
    bare = false
    logallrefupdates = true
    worktree = ../../../public
[remote &amp;quot;origin&amp;quot;]
    url = git@github.com:mingguilu/blog.mingguilu.com.git
    url = git@git.coding.net:Mingguilu/blog.mingguilu.com.git       # 添加Coding远程仓库地址
    fetch = +refs/heads/*:refs/remotes/origin/*
[branch &amp;quot;master&amp;quot;]
    remote = origin
    merge = refs/heads/master
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;4-至此-一次push即可同时推送到github和coding:e7706393a2e33dc7c49d540b3db4cdd9&#34;&gt;4. 至此，一次push即可同时推送到Github和Coding&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;$ git push  origin master 
对象计数中: 13, 完成.
Delta compression using up to 4 threads.
压缩对象中: 100% (13/13), 完成.
写入对象中: 100% (13/13), 1.68 MiB | 368.00 KiB/s, 完成.
Total 13 (delta 5), reused 0 (delta 0)
remote: Resolving deltas: 100% (5/5), completed with 5 local objects.
To git@github.com:mingguilu/blog.mingguilu.com.git          # 推送至Github远程仓库
   c5e9106..ebb5fca  master -&amp;gt; master
对象计数中: 13, 完成.
Delta compression using up to 4 threads.
压缩对象中: 100% (13/13), 完成.
写入对象中: 100% (13/13), 1.68 MiB | 0 bytes/s, 完成.
Total 13 (delta 5), reused 0 (delta 0)
To git@git.coding.net:Mingguilu/blog.mingguilu.com.git      # 推送至Coding远程仓库
   c5e9106..ebb5fca  master -&amp;gt; master
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;5-开启coding仓库的pages服务并绑定域名:e7706393a2e33dc7c49d540b3db4cdd9&#34;&gt;5. 开启Coding仓库的Pages服务并绑定域名&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.mingguilu.com/media/170226_01_05_01.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;6-在dnspod的增加域名别名解析记录至pages-coding-me-并设置为默认线路-xxx-github-io设置为国外线路:e7706393a2e33dc7c49d540b3db4cdd9&#34;&gt;6. 在DNSPod的增加域名别名解析记录至pages.coding.me.，并设置为默认线路，xxx.github.io设置为国外线路&lt;/h3&gt;

&lt;p&gt;到这里，已完成将Github仓库导入到Coding项目作为备份，并实现Blog的在线访问的灾备，和国内访问速度的优化。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>关于JennyCh_Blog的使用文档</title>
      <link>http://blog.mingguilu.com/%E7%8B%AE/%E5%85%B3%E4%BA%8EJennyCh_Blog%E7%9A%84%E4%BD%BF%E7%94%A8%E6%96%87%E6%A1%A3/</link>
      <pubDate>Tue, 14 Feb 2017 11:57:04 +0800</pubDate>
      
      <guid>http://blog.mingguilu.com/%E7%8B%AE/%E5%85%B3%E4%BA%8EJennyCh_Blog%E7%9A%84%E4%BD%BF%E7%94%A8%E6%96%87%E6%A1%A3/</guid>
      <description>

&lt;p&gt;&lt;img src=&#34;http://blog.mingguilu.com/media/hugo_github_markdown.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;一-准备:f3d75005242de1a1c600b325bf235b42&#34;&gt;一  准备&lt;/h3&gt;

&lt;h4 id=&#34;1-hugo:f3d75005242de1a1c600b325bf235b42&#34;&gt;1. Hugo&lt;/h4&gt;

&lt;h5 id=&#34;简述:f3d75005242de1a1c600b325bf235b42&#34;&gt;简述:&lt;/h5&gt;

&lt;p&gt;Hugo是由Go语言实现的静态网站生成器。其特点是：简单、易用、高效、易扩展、快速部署。　&lt;/p&gt;

&lt;p&gt;官方网站：&lt;a href=&#34;http://gohugo.io/&#34;&gt;http://gohugo.io/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;入门推荐：&lt;a href=&#34;http://www.gohugo.org/&#34;&gt;Hugo中文文档&lt;/a&gt;&lt;/p&gt;

&lt;h5 id=&#34;安装:f3d75005242de1a1c600b325bf235b42&#34;&gt;安装:&lt;/h5&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/spf13/hugo/releases&#34;&gt;下载适用的windows的hugo_x.xx.x_Windows-64bit.zip&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;解压后重命名为&lt;code&gt;hugo.exe&lt;/code&gt;并存放在c:\Program Files\hugo，并把路径添加到系统环境变量Path中，然后再cmd中输入&lt;code&gt;hugo version&lt;/code&gt;测试是否可用&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;gt;　hugo version
Hugo Static Site Generator v0.16 BuildDate: 2016-06-06T08:33:34+08:00
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;2-github-pages:f3d75005242de1a1c600b325bf235b42&#34;&gt;2.  Github pages　&lt;/h4&gt;

&lt;h5 id=&#34;简述-1:f3d75005242de1a1c600b325bf235b42&#34;&gt;简述：&lt;/h5&gt;

&lt;p&gt;&lt;a href=&#34;https://git-scm.com/&#34;&gt;Git&lt;/a&gt;是一款免费、开源的分布式版本控制系统，用于敏捷高效地处理任何或小或大的项目&lt;/p&gt;

&lt;p&gt;入门推荐：&lt;a href=&#34;http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000&#34;&gt;廖雪峰Git教程&lt;/a&gt;、&lt;a href=&#34;http://rogerdudler.github.io/git-guide/index.zh.html&#34;&gt;git - 简明指南&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/&#34;&gt;GitHub&lt;/a&gt; 是一个面向开源及私有软件项目的托管平台，只支持 Git 作为唯一的版本库格式进行托管&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://pages.github.com/&#34;&gt;Github pages&lt;/a&gt;用于将托管在Github上的项目发布位个人主页网站或项目主页网站&lt;/p&gt;

&lt;h5 id=&#34;安装git:f3d75005242de1a1c600b325bf235b42&#34;&gt;安装Git&lt;/h5&gt;

&lt;p&gt;&lt;a href=&#34;https://git-scm.com/downloads&#34;&gt;下载Git for windows&lt;/a&gt;，以默认选项安装，在桌面双击运行&lt;code&gt;Git Bash&lt;/code&gt;&lt;/p&gt;

&lt;h5 id=&#34;创建github仓库:f3d75005242de1a1c600b325bf235b42&#34;&gt;创建Github仓库&lt;/h5&gt;

&lt;p&gt;在&lt;code&gt;Repositories&lt;/code&gt;页面点击&lt;code&gt;New&lt;/code&gt;创建新仓库&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;media/git_jenny_01.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;以下是&lt;code&gt;JennyCh&lt;/code&gt;托管在&lt;code&gt;Github&lt;/code&gt;个人主页和博客项目的仓库&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/jennych/blog&#34;&gt;blog&lt;/a&gt;     托管JennyCh Blog的静态博客网页的仓库&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/jennych/jennych_blog_hugo&#34;&gt;jennych_blog_hugo&lt;/a&gt;       托管JennyCh Blog的站点源代码的仓库&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/jennych/jennych.github.io&#34;&gt;jennych.github.io&lt;/a&gt;       托管JennyCh个人主页静态网页的仓库&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/jennych/jennych_github_io&#34;&gt;jennych_github_io&lt;/a&gt;       托管JennyCh个人主页的站点源代码的仓库&lt;/p&gt;

&lt;h5 id=&#34;启用github-pages:f3d75005242de1a1c600b325bf235b42&#34;&gt;启用Github Pages&lt;/h5&gt;

&lt;p&gt;个人主页：例如&lt;a href=&#34;https://jennych.github.io&#34;&gt;https://jennych.github.io&lt;/a&gt; ，创建&lt;code&gt;Ｇithub帐号.github.io&lt;/code&gt;的仓库，并上传个人主页静态页面项目即可&lt;/p&gt;

&lt;p&gt;项目主页：例如&lt;a href=&#34;https://jennych.github.io/blog/&#34;&gt;https://jennych.github.io/blog/&lt;/a&gt; ，创建随意名称的仓库，并上传项目的静态页面，只要在根目录下存在index.html，即可开启Ｇithub Pages，&lt;code&gt;settings&lt;/code&gt;－－&amp;gt;&lt;code&gt;Ｇithub Pages&lt;/code&gt;－－&amp;gt;&lt;code&gt;Source&lt;/code&gt;－－&amp;gt;&lt;code&gt;master branch&lt;/code&gt;－－&amp;gt; &lt;code&gt;Save&lt;/code&gt;，即可访问项目主页&lt;code&gt;https://Github帐号.github.io/项目仓库名/&lt;/code&gt;&lt;/p&gt;

&lt;h4 id=&#34;3-markdown:f3d75005242de1a1c600b325bf235b42&#34;&gt;3. Markdown&lt;/h4&gt;

&lt;p&gt;Markdown 是一种轻量级的「标记语言」，它拥有很多优点，语法简洁明了、学习容易，而且功能比纯文本更强，导出格式随心所欲，因此有很多人用它写博客&lt;/p&gt;

&lt;p&gt;入门推荐：&lt;a href=&#34;http://www.jianshu.com/p/1e402922ee32/&#34;&gt;Markdown——入门指南&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://markdownpad.com/&#34;&gt;MarkdownPad&lt;/a&gt; 是Windows下的一个多功能Markdown编辑器&lt;/p&gt;

&lt;h3 id=&#34;二-使用hugo:f3d75005242de1a1c600b325bf235b42&#34;&gt;二　使用Hugo&lt;/h3&gt;

&lt;p&gt;创建Hugo静态站点&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;hugo new site 站点名称

$ hugo new site  my_website
Congratulations! Your new Hugo site is created in &amp;quot;D:\\Hellolworld\\my_website&amp;quot;.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Hugo站点下包含如下目录和文件：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;archetypes：存放创建新文章时自动生成内容的模板&lt;/li&gt;
&lt;li&gt;content：存放markdown格式的文章&lt;/li&gt;
&lt;li&gt;layouts：存放网站前端的html模板&lt;/li&gt;
&lt;li&gt;static：存放img、font、css、js等文件&lt;/li&gt;
&lt;li&gt;public: 存放生成的静态网页内容&lt;/li&gt;
&lt;li&gt;theme: 存放网站主题模板(一般将模板内容直接覆盖到根目录)&lt;/li&gt;
&lt;li&gt;config.toml: 网站的配置文件，一般包括baseurl、title、languageCode等配置参数&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;添加网站主题&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ cd my_website/themes/

$ git clone https://github.com/christianmendoza/hugo-smpl-theme
Cloning into &#39;hugo-smpl-theme&#39;...
remote: Counting objects: 78, done.
remote: Compressing objects: 100% (55/55), done.
remote: Total 78 (delta 17), reused 78 (delta 17), pack-reused 0
Unpacking objects: 100% (78/78), done.

$ cd ..
$ pwd
/d/Hellolworld/my_website

$ ls themes/hugo-smpl-theme/
archetypes/   images/   LICENSE    static/
exampleSite/  layouts/  README.md  theme.toml

$ cp themes/hugo-smpl-theme/exampleSite/config.toml  .
# 使用theme文件时，需要适配的config.toml(一般在theme根目录或exampleSite目录下可以找到)，并指定theme = &amp;quot;theme-name&amp;quot;参数才能启动网站
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;新建文章&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;hugo new  路径/文章名称.md

$ hugo new post/技术文章/第一篇技术文章.md
D:\Hellolworld\my_website\content\post\技术文章\第一篇技术文章.md created
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;启动Hugo静态站点&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;hugo server -t=主题名称
# 如果已将theme文件覆盖到站点根目录，无需使用-t指定主题文件，hugo server即可

$ hugo  server  -t=hugo-smpl-theme   -w
Started building site
0 of 1 draft rendered
0 future content
0 pages created
0 non-page files copied
0 paginator pages created
0 tags created
0 categories created
in 7 ms
Watching for changes in D:\Hellolworld\my_website\{data,content,layouts,static,themes}
Serving pages from memory
Web Server is available at http://localhost:1313/ (bind address 127.0.0.1)
Press Ctrl+C to stop
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;生成静态页面&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# hugo命令用于将当前站点转换为静态页面，并自动保存在public目录下

$ hugo
Started building site
0 of 1 draft rendered
0 future content
1 pages created
0 non-page files copied
0 paginator pages created
0 tags created
0 categories created
in 46 ms

$ ls public/
404.html  assets/  index.html  index.xml  post/  sitemap.xml
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;三-使用git-克隆和提交代码:f3d75005242de1a1c600b325bf235b42&#34;&gt;三　使用Git 克隆和提交代码&lt;/h3&gt;

&lt;p&gt;以下内容以JennyCh Blog的站点为例&lt;/p&gt;

&lt;h4 id=&#34;1-从github远程仓库克隆jennych-blog的站点源代码:f3d75005242de1a1c600b325bf235b42&#34;&gt;1. 从Github远程仓库克隆JennyCh Blog的站点源代码&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;git clone Ｇithub远程仓库地址
#Github远程仓库地址分为两种：https和ssh ，可以在仓库主页中点开&amp;quot;Clone or Download&amp;quot;，点击`Use Https`或`Use SSH`可分别查看仓库地址
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.mingguilu.com/media/git_jenny_02.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ git clone git@github.com:jennych/jennych_blog_hugo.git
Cloning into &#39;jennych_blog_hugo&#39;...
remote: Counting objects: 151, done.
remote: Compressing objects: 100% (131/131), done.
remote: Total 151 (delta 10), reused 151 (delta 10), pack-reused 0
Receiving objects: 100% (151/151), 4.25 MiB | 124.00 KiB/s, done.
Resolving deltas: 100% (10/10), done.

$ cd jennych_blog_hugo/

$ ls
archetypes/  content/      images/   LICENSE.md  static/
config.toml  exampleSite/  layouts/  README.md   theme.toml
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;2-从github远程仓库克隆jennych-blog的静态网页:f3d75005242de1a1c600b325bf235b42&#34;&gt;2. 从Github远程仓库克隆JennyCh Blog的静态网页&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;git clone Ｇithub远程仓库地址 public
# 将JennyCh Blog的静态页面仓库克隆到本地，并重命名为public

$ git  clone  git@github.com:jennych/blog.git  public
Cloning into &#39;public&#39;...
remote: Counting objects: 169, done.
remote: Compressing objects: 100% (113/113), done.
remote: Total 169 (delta 41), reused 169 (delta 41), pack-reused 0
Receiving objects: 100% (169/169), 3.84 MiB | 124.00 KiB/s, done.
Resolving deltas: 100% (41/41), done.

$ ls public/
404.html  categories/  fancybox/  font/       img/        js/    sitemap.xml
about/    css/         feed.xml   highlight/  index.html  post/  tags/
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;3-推送本地git版本至github远程仓库:f3d75005242de1a1c600b325bf235b42&#34;&gt;3. 推送本地Git版本至Github远程仓库&lt;/h4&gt;

&lt;p&gt;当修改站点源代码或文章内容后，将修改内容提交为新版本，并推送到Github远程仓库jennych_blog_hugo&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ pwd
/d/Hellolworld/jennych_blog_hugo

$ git add -A
# 把修改内容提交到Git缓存区

$ git commit -m &amp;quot;xxxx&amp;quot;
# 把Git缓存区的内容提交为Git新版本，`-m &amp;quot;xxxx&amp;quot; `为本次提交的版本的简述，如果不加`-m`参数，会进入编辑描述信息的状态

$ git push origin master
# 将本地新版本推送到Github远程仓库
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;生成新的静态页面后提交为新版本，并推送到Github远程仓库blog&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ hugo
# 将修改后的代码和文章转换生成新的静态页面
Started building site
0 draft content
0 future content
6 pages created
0 non-page files copied
0 paginator pages created
3 tags created
2 categories created
in 668 ms

$ cd public/
# 进入public目录,public目录存放着转换生成后的静态页面

$ pwd
/d/Hellolworld/jennych_blog_hugo/public

$ git add -A
# 把新生成的内容提交到Git缓存区

$ git commit -m &amp;quot;xxxx&amp;quot;
# 把Git缓存区的内容提交为Git新版本，`-m &amp;quot;xxxx&amp;quot; `为本次提交的版本的简述，如果不加`-m`参数，会进入编辑描述信息的状态

$ git push origin master
# 将本地新版本推送到Github远程仓库
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;推送完成，访问&lt;a href=&#34;https://jennych.github.io/blog/&#34;&gt;https://jennych.github.io/blog/&lt;/a&gt;即可看到新内容&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>感谢Hugo，让我遇见Markdown和Git</title>
      <link>http://blog.mingguilu.com/%E6%84%9F/%E6%84%9F%E8%B0%A2Hugo%EF%BC%8C%E8%AE%A9%E6%88%91%E9%81%87%E8%A7%81Markdown%E5%92%8CGit/</link>
      <pubDate>Sat, 14 Jan 2017 20:33:09 +0800</pubDate>
      
      <guid>http://blog.mingguilu.com/%E6%84%9F/%E6%84%9F%E8%B0%A2Hugo%EF%BC%8C%E8%AE%A9%E6%88%91%E9%81%87%E8%A7%81Markdown%E5%92%8CGit/</guid>
      <description>&lt;p&gt;去年7月在机缘巧合之下接触了静态博客的概念，深入了解了一些知识之后，特别欣喜，决定动手搭建一个自己的静态博客。时间一晃到了年底，当着手实现的时候发现并不简单&lt;/p&gt;

&lt;p&gt;首先是选择哪一款生成器，在知乎上研究一番后，最终在Jekyll、Hexo和Hugo中，选择了Hugo，因为简单、生成速度快，在&lt;a href=&#34;https://staticsitegenerators.net/&#34;&gt;静态博客生成器排名榜&lt;/a&gt;上发展势头好，接着在《&lt;a href=&#34;http://www.gohugo.org&#34;&gt;Hugo中文文档&lt;/a&gt;》学习如何安装使用它，利用自己有限的网页知识在Hugo作者个人博客&lt;a href=&#34;http://sfp13.com&#34;&gt;spf13.com&lt;/a&gt;的源码基础上定制了自己的博客前端&lt;/p&gt;

&lt;p&gt;然后编写文档需要学习一门新的文本标记语言Markdown，所幸Markdown语法相对容易，常用的也不多，看完Te_Lee 分享的《&lt;a href=&#34;http://sspai.com/25137/&#34;&gt;认识与入门 Markdown&lt;/a&gt;》和《&lt;a href=&#34;http://www.jianshu.com/p/1e402922ee32/&#34;&gt;Markdown——入门指南&lt;/a&gt;》，就可以入门了&lt;/p&gt;

&lt;p&gt;最后为了将Hugo发布到Github Pages的个人主页上，必须得学习Git。我并非一名程序，虽然之前使用过svn和github，但并不了解这个强大并让我之后受益匪浅的Git。花了大概一周的时间潜心学习了廖学锋老师的&lt;a href=&#34;http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000&#34;&gt;《Git教程》&lt;/a&gt;和贺永康老师的&lt;a href=&#34;http://edu.51cto.com/course/course_id-1838.html&#34;&gt;《深入理解Git》
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;经过1个月的折腾，终于把博客上线了。然而，收获不仅是有了这个博客，还促使自己学习了Markdown和Git，更重要的是，Git的版本控制思想让我受益匪浅！&lt;/p&gt;

&lt;p&gt;为了记录博客搭建的过程，除了写文档，还用git版本记录代码改动，经过实践发现很多问题：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;前端代码经常改了又改，有时仅仅1处字体px大小；有时修改bug到一半不得要领，先去解决另外一个，这样导致频繁的&lt;code&gt;git commit&lt;/code&gt;，且一个&lt;code&gt;commit&lt;/code&gt;掺和多处修改&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;因为频繁的&lt;code&gt;git commit&lt;/code&gt;，&lt;code&gt;commit message&lt;/code&gt;每次随性而写，回头&lt;code&gt;git log&lt;/code&gt;一看全是一句话概括，具体改了什么自己也看不懂了&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.mingguilu.com/media/gan_01.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;当写文档时，前一篇没写完搁置了，接着完成了另外一篇，这时commit并push就很尴尬了&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;有时候不得不感慨，真是想什么来什么！这段时间&lt;a href=&#34;http://weibo.com/jobbole&#34;&gt;伯乐在线官方微博&lt;/a&gt;刚好推荐了两篇git干货，&lt;a href=&#34;http://blog.jobbole.com/109197/&#34;&gt;《Git 最佳实践：commit msg》&lt;/a&gt;和&lt;a href=&#34;http://blog.jobbole.com/109466/&#34;&gt;《Git 最佳实践：分支管理》&lt;/a&gt;。虽然自己没法全部理解两篇文章的内容，但依然指导我做些改变&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;多使用git分支，在新分支里开始一篇文档，在新分支里修改前端的代码，当文档完成可以发表，或代码修改完测试没有问题，再将新分支合并到&lt;code&gt;marst&lt;/code&gt;分支，并&lt;code&gt;push&lt;/code&gt;到github的远程仓库里&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;基于以上的分支，&lt;code&gt;commit&lt;/code&gt;即可灵活很多，坚持一次&lt;code&gt;commit&lt;/code&gt;只完成一个任务，并确保每次&lt;code&gt;commit&lt;/code&gt;的正确性。因为“每次提交的代码都可能产生一个可发布的版本，坚持这个实践，那么软件会一直处于&lt;strong&gt;可用状态&lt;/strong&gt; —— 《持续交付》”&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;在&lt;a href=&#34;http://blog.jobbole.com/109197/&#34;&gt;《Git 最佳实践：commit msg》&lt;/a&gt;关于&lt;code&gt;commit message&lt;/code&gt;规范的指导下，重新创建了版本库，并在写message时尝试写简单易懂的标题和详尽明了的内容&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.mingguilu.com/media/gan_02.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;近期刚好在看一本关于Devops的书《持续交付 - 发布可靠软件的系统方法》，本书前2章着重讲述了使用版本控制对构建软件可重复且可靠的自动化发布的重要意义。而这次git的实践，有助于理解书中的内容，最终使用“Continuous Delivery”作为博客标题也是因为这本书。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>使用Hugo和Github搭建静态博客之填坑</title>
      <link>http://blog.mingguilu.com/%E7%8B%AE/%E4%BD%BF%E7%94%A8Hugo%E5%92%8CGithub%E6%90%AD%E5%BB%BA%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2%E4%B9%8B%E5%A1%AB%E5%9D%91/</link>
      <pubDate>Wed, 14 Dec 2016 10:57:00 +0800</pubDate>
      
      <guid>http://blog.mingguilu.com/%E7%8B%AE/%E4%BD%BF%E7%94%A8Hugo%E5%92%8CGithub%E6%90%AD%E5%BB%BA%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2%E4%B9%8B%E5%A1%AB%E5%9D%91/</guid>
      <description>

&lt;blockquote&gt;
&lt;p&gt;我的静态博客已经搭建成功了，并且使用Markdown记录了过程，但期间踩了一路的坑，今天总结一下其中一个：Hugo成功部署到Github Pages，但访问博客时不加载网页布局和样式。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;这算是遇到最大的坑了，前后折腾了半个月的时间，直到找到了组织（Hugo交流QQ群：512499080），群主大大&lt;a href=&#34;http://www.coderzh.com/&#34;&gt;@coderzh&lt;/a&gt; 一语道破天机。
&lt;img src=&#34;http://blog.mingguilu.com/media/hugo_tk_01.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h4 id=&#34;1-先来回顾一下如何踩上这个大坑的:597c1832ad705093668c865e80485432&#34;&gt;1 先来回顾一下如何踩上这个大坑的&lt;/h4&gt;

&lt;h5 id=&#34;1-1-使用-hugo-new-site-创建一个新站点时-配置文件-config-toml-中的-baseurl-默认是-http:597c1832ad705093668c865e80485432&#34;&gt;1.1 使用&lt;code&gt;hugo new site&lt;/code&gt; 创建一个新站点时，配置文件&lt;code&gt;config.toml&lt;/code&gt; 中的 &lt;code&gt;baseurl&lt;/code&gt; 默认是 &lt;code&gt;http://&lt;/code&gt;&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;baseurl = &amp;quot;http://replace-this-with-your-hugo-site.com/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;clone spf13.com的博客项目中&lt;code&gt;baseurl&lt;/code&gt; 也是 &lt;code&gt;http://&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;baseurl = &amp;quot;http://spf13.com/&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;在之后修改时，直接把博客地址改为了我自己的&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;baseurl = &amp;quot;http://imkind.github.io/&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;1-2-自2016年6月15日起-使用github-pages默认域名搭建个人站点-已被强制要求https访问-即使用http访问-也会被重定向到https-参见-securing-your-github-pages-site-with-https-https-help-github-com-articles-securing-your-github-pages-site-with-https:597c1832ad705093668c865e80485432&#34;&gt;1.2 自2016年6月15日起，使用Github Pages默认域名搭建个人站点，已被强制要求HTTPS访问，即使用HTTP访问，也会被重定向到HTTPS。参见《Securing your GitHub Pages site with HTTPS》 &lt;a href=&#34;https://help.github.com/articles/securing-your-github-pages-site-with-https/&#34;&gt;https://help.github.com/articles/securing-your-github-pages-site-with-https/&lt;/a&gt;&lt;/h5&gt;

&lt;blockquote&gt;
&lt;p&gt;You can enforce HTTPS to add a layer of encryption for traffic to your GitHub Pages site if it has a github.io domain.&lt;/p&gt;

&lt;p&gt;With HTTPS enforcement enabled, HTTP requests to your GitHub Pages site will be transparently redirected to HTTPS.&lt;/p&gt;

&lt;p&gt;HTTPS enforcement is required for GitHub Pages sites created after June 15, 2016 and using a github.io domain. If you created your GitHub Pages site before June 15, 2016, you can manually enable HTTPS enforcement. HTTPS is not supported for GitHub Pages using custom domains.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;这一点可以在repository的settings中得到证实&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;√ Enforce HTTPS — Required for your site because you are using the default domain (imkind.github.io)&lt;/p&gt;

&lt;p&gt;HTTPS provides a layer of encryption that prevents others from snooping on or tampering with traffic to your site.&lt;/p&gt;

&lt;p&gt;When HTTPS is enforced, your site will only be served over HTTPS. Learn more.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;此时，Hugo中配置的HTTP与Github Pages强制使用的HTTPS不一致，导致站点图片、css和js文件无法加载，访问时造成上图的情况&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If you enable HTTPS for your site, and your site&amp;rsquo;s HTML still references images, CSS, or JavaScript over HTTP, then your site is serving mixed content, and you may have trouble loading assets. Serving mixed content also makes your site less secure.&lt;/p&gt;

&lt;p&gt;To remove your site&amp;rsquo;s mixed content, improve your site&amp;rsquo;s security, and resolve problems related to loading mixed content, edit your site&amp;rsquo;s HTML files and change http:// to https:// so that all of your assets are served over HTTPS.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&#34;2-填坑-更多解决方案参见-resolving-problems-with-mixed-content-https-help-github-com-articles-securing-your-github-pages-site-with-https:597c1832ad705093668c865e80485432&#34;&gt;2. 填坑，更多解决方案参见《Resolving problems with mixed content》&lt;a href=&#34;https://help.github.com/articles/securing-your-github-pages-site-with-https/&#34;&gt;https://help.github.com/articles/securing-your-github-pages-site-with-https/&lt;/a&gt;&lt;/h4&gt;

&lt;h5 id=&#34;2-1-综上-在配置文件config-toml中把-http-修改为-https:597c1832ad705093668c865e80485432&#34;&gt;2.1 综上，在配置文件config.toml中把&lt;code&gt;http&lt;/code&gt;修改为&lt;code&gt;https&lt;/code&gt;&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;baseurl = &amp;quot;http://imkind.github.io/&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;修改为&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;baseurl = &amp;quot;https://imkind.github.io/&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;然后，重新运行 &lt;code&gt;hugo&lt;/code&gt; 生成静态站点，分别把改动push到IMkind_blog_hugo和imkind.github.io&lt;/p&gt;

&lt;h5 id=&#34;2-2-但是-我发现-spf13-com-http-spf13-com-blog-coderzh-com-http-blog-coderzh-com-nanshu-wang-http-nanshu-wang-blog-bpcoder-com-http-blog-bpcoder-com-等都能使用http正常访问-这可能是因为绑定了自己的域名:597c1832ad705093668c865e80485432&#34;&gt;2.2 但是，我发现&lt;a href=&#34;http://spf13.com/&#34;&gt;spf13.com&lt;/a&gt;、&lt;a href=&#34;http://blog.coderzh.com/&#34;&gt;blog.coderzh.com&lt;/a&gt;、&lt;a href=&#34;http://nanshu.wang/&#34;&gt;nanshu.wang&lt;/a&gt;、&lt;a href=&#34;http://blog.bpcoder.com/&#34;&gt;blog.bpcoder.com&lt;/a&gt;等都能使用HTTP正常访问，这可能是因为绑定了自己的域名。&lt;/h5&gt;

&lt;p&gt;《Securing your GitHub Pages site with HTTPS》 &lt;a href=&#34;https://help.github.com/articles/securing-your-github-pages-site-with-https/&#34;&gt;https://help.github.com/articles/securing-your-github-pages-site-with-https/&lt;/a&gt; ，第三段最后一句：&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;HTTPS is not supported for GitHub Pages using custom domains.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&#34;彩蛋:597c1832ad705093668c865e80485432&#34;&gt;&lt;em&gt;彩蛋&lt;/em&gt;&lt;/h4&gt;

&lt;p&gt;附上群主大大&lt;a href=&#34;http://www.coderzh.com/&#34;&gt;@coderzh&lt;/a&gt;如何一语道破天机
&lt;img src=&#34;http://blog.mingguilu.com/media/hugo_tk_02.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Git-everything-is-local</title>
      <link>http://blog.mingguilu.com/%E7%8C%BF/git-everything-is-local/</link>
      <pubDate>Thu, 08 Dec 2016 08:48:05 +0800</pubDate>
      
      <guid>http://blog.mingguilu.com/%E7%8C%BF/git-everything-is-local/</guid>
      <description>

&lt;h3 id=&#34;1-安装git:0a315d94de8b55214793afe9517d8fb5&#34;&gt;1. 安装git&lt;/h3&gt;

&lt;h4 id=&#34;windows:0a315d94de8b55214793afe9517d8fb5&#34;&gt;windows&lt;/h4&gt;

&lt;p&gt;下载并安装&lt;a href=&#34;https://git-scm.com/downloads&#34;&gt;Git for Windows&lt;/a&gt;，默认选项安装到Ajusting your PATH environment时，勾选第二项Run Git from Windows Command Prompt，即可在windows命令行使用git命令，不过Git Bash用户体验更好&lt;/p&gt;

&lt;h4 id=&#34;ubnutu:0a315d94de8b55214793afe9517d8fb5&#34;&gt;ubnutu&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install git
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;2-全局配置git:0a315d94de8b55214793afe9517d8fb5&#34;&gt;2. 全局配置git&lt;/h3&gt;

&lt;p&gt;命令行&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git config --global user.name [your-name]
git config --global user.email [your-email-address]
git config --global color.ui true
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;配置文件&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;vim ~/.gitconfig
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;查看全局配置&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git config --list
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;3-创建repository-repo:0a315d94de8b55214793afe9517d8fb5&#34;&gt;3. 创建repository/repo&lt;/h3&gt;

&lt;p&gt;创建本地git repo&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git init
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;克隆线上的项目&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git clone https://github.com/[github-account]/[project-name].git
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;4-添加及提交文件:0a315d94de8b55214793afe9517d8fb5&#34;&gt;4. 添加及提交文件&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.mingguilu.com/media/git_3_01.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;添加文件到staying area&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git add [file-name]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;提交改动到git repository&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git commit -m [&amp;quot;commit-description&amp;quot;]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;直接从working directory提交到git repository&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git commit -am [&amp;quot;commit-description&amp;quot;]
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;5-查看git状态:0a315d94de8b55214793afe9517d8fb5&#34;&gt;5. 查看git状态&lt;/h3&gt;

&lt;p&gt;查看git状态&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git status
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;查看git状态标志&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git status -s
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;标志的说明&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;A: 你本地新增的文件（服务器上没有）

C: 文件的一个新拷贝

D: 你本地删除的文件（服务器上还在）

M: 文件的内容或者mode被修改了

R: 文件名被修改了

T: 文件的类型被修改了

U: 文件没有被合并(你需要完成合并才能进行提交)

X: 未知状态(很可能是遇到git的bug了，你可以向git提交bug report)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;忽略~结尾的文件&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;echo &amp;quot;*~&amp;quot; &amp;gt; .gitignore
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;6-查看文件区别:0a315d94de8b55214793afe9517d8fb5&#34;&gt;6. 查看文件区别&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.mingguilu.com/media/git_6_01.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;查看working directory 和 staying area 之间的区别&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git diff
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;查看staying area 和 git repository 之间的区别&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git diff --staged
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;查看history 和 working directory 之间的区别&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git diff HEAD
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;使用&amp;ndash;stat参数查看简短信息&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git diff --stat [--staged|HEAD]
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;7-撤销误操作:0a315d94de8b55214793afe9517d8fb5&#34;&gt;7. 撤销误操作&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.mingguilu.com/media/git_7_01.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;从git repository 撤销到staying area&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git reset [file-name]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;从staying area撤销到working directory&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git checkout [file-name]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;从git repository 撤销到working directory&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git checkout HEAD [file-name]
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;8-移除及重命名文件:0a315d94de8b55214793afe9517d8fb5&#34;&gt;8. 移除及重命名文件&lt;/h3&gt;

&lt;p&gt;删除git文件&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git rm [file-name]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;删除git文件，但保留源文件&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git rm --cached [file-name]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;重命名git文件&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git mv [file-name] [file-name]
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;9-暂存工作区:0a315d94de8b55214793afe9517d8fb5&#34;&gt;9. 暂存工作区&lt;/h3&gt;

&lt;p&gt;放入暂存区&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git stash
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;查看暂存区&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git stash list
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;恢复暂存区&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git stash pop
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;10-图解commit对象:0a315d94de8b55214793afe9517d8fb5&#34;&gt;10. 图解commit对象&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.mingguilu.com/media/git_10_01.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;查看commit记录&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git log
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;或&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git log --pretty=oneline
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;或&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git log --oneline
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;或&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git reflog
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;查看commit对象类型&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git cat-file -t [HEAD|short-Hash]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;commit对象类型说明&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;tree 目录结构
blob 一个二进制文件
commit  一次提交的信息（包含tree、parent、author、committer信息）
tag 标签（commit的别名）
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;查看commit对象详细信息&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git cat-file -p [HEAD|short-Hash]
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;11-理解tree-ish表达式:0a315d94de8b55214793afe9517d8fb5&#34;&gt;11. 理解tree-ish表达式&lt;/h3&gt;

&lt;p&gt;查看commit对象指向的HASH值&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git rev-parse [HEAD|HEAD~|HEAD~2|master~3|master~4|...]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;查看指定commit的tree的HASH值&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git rev-parse HEAD~4^{tree}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;查看指定commit的blob的HASH值&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git rev-parse HEAD~6:[file-path]
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;12-创建及删除分支:0a315d94de8b55214793afe9517d8fb5&#34;&gt;12. 创建及删除分支&lt;/h3&gt;

&lt;p&gt;分支文件路径&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;/.git/refs/heads/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;查看所有分支&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git branch
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;创建分支&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git branch [branch-name]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;切换分支&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git checkout [branch-name]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;创建并切换分支&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git checkout -b [branch-name]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;删除分支&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git branch -d [branch-name]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;合并分支&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git merge [branch-name]
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;13-配置github远程仓库:0a315d94de8b55214793afe9517d8fb5&#34;&gt;13. 配置Github远程仓库&lt;/h3&gt;

&lt;p&gt;创建SSH Key&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ssh-keygen -t rsa -C &amp;quot;youremail@example.com&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;一路回车使用默认值，完成之后在用户主目录中打开 &lt;code&gt;.ssh&lt;/code&gt;目录，可以看到&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;id_rsa      私钥，不能泄露出去
id_rsa.pub  公钥，可告诉任何人
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;登录Github，依次点击&amp;rdquo;settings&amp;rdquo;——&amp;gt;&amp;ldquo;SSH and GPG keys&amp;rdquo;——&amp;gt;&amp;ldquo;New SSH Key&amp;rdquo;
&lt;img src=&#34;http://blog.mingguilu.com/media/git_13_01.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;填写Title，在Key文本框里粘贴&lt;code&gt;id_rsa.pub&lt;/code&gt;文件的内容，点击&amp;rdquo;Add SSH Key&amp;rdquo;&lt;/p&gt;

&lt;h3 id=&#34;14-同步远程github仓库:0a315d94de8b55214793afe9517d8fb5&#34;&gt;14. 同步远程Github仓库&lt;/h3&gt;

&lt;p&gt;关联本地仓库与远程仓库&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git remote add origin git@github.com:[github-account]/[repo-name].git
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;第一次把本地库master分支推送到远程库&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git push -u origin master
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;之后本地做了提交，即可推送到远程库&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git push origin master
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;15-从github远程库克隆:0a315d94de8b55214793afe9517d8fb5&#34;&gt;15. 从Github远程库克隆&lt;/h3&gt;

&lt;p&gt;创建Github Repositories远程库
&lt;img src=&#34;http://blog.mingguilu.com/media/git_15_01.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;把远程库克隆到本地&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git clone git@github.com:[github-account]/[repo-name].git
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;或&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git clone https://github.com/[github-account]/[repo-name].git
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>使用Hugo和Github搭建静态博客</title>
      <link>http://blog.mingguilu.com/%E7%8B%AE/%E4%BD%BF%E7%94%A8Hugo%E5%92%8CGithub%E6%90%AD%E5%BB%BA%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2/</link>
      <pubDate>Fri, 02 Dec 2016 09:53:13 +0800</pubDate>
      
      <guid>http://blog.mingguilu.com/%E7%8B%AE/%E4%BD%BF%E7%94%A8Hugo%E5%92%8CGithub%E6%90%AD%E5%BB%BA%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2/</guid>
      <description>

&lt;blockquote&gt;
&lt;p&gt;我的静态博客使用Hugo生成，部署在Github Pages个人主页上，为了完成搭建，期间学习了Hugo、Git、Markdown。由于接触静态博客不久，对很多东西一知半解，本文仅记录了在Windows 10上基于Hugo作者&lt;a href=&#34;https://stevefrancia.com/&#34;&gt;Steve Francia&lt;/a&gt;的个人博客&lt;a href=&#34;http://spf13.com/&#34;&gt;http://spf13.com/&lt;/a&gt;的源代码定制自己博客的过程，绝不权威，仅供参考。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;1-准备:bd6ccd207b6b74639fc982765b5a80a8&#34;&gt;1.准备&lt;/h2&gt;

&lt;h3 id=&#34;1-1-注册github-https-github-com:bd6ccd207b6b74639fc982765b5a80a8&#34;&gt;1.1 &lt;a href=&#34;https://github.com/&#34;&gt;注册Github&lt;/a&gt;&lt;/h3&gt;

&lt;h3 id=&#34;1-2-安装并配置git-for-windows-https-git-scm-com-downloads:bd6ccd207b6b74639fc982765b5a80a8&#34;&gt;1.2 &lt;a href=&#34;https://git-scm.com/downloads&#34;&gt;安装并配置Git for Windows&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;默认选项安装到Ajusting your PATH environment时，勾选第二项Run Git from Windows Command Prompt，即可在windows命令行使用git命令，不过Git Bash用户体验更好。&lt;/p&gt;

&lt;p&gt;Git全局配置&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git config --global user.name [your-name]
git config --global user.email [your-email-address]
git config --global color.ui true
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;配置SSH Key&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ssh-keygen -t rsa -C &amp;quot;youremail@example.com&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;一路回车使用默认值，完成之后在用户主目录中进入 &lt;code&gt;.ssh&lt;/code&gt;目录，可以看到&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;id_rsa      私钥，不能泄露出去
id_rsa.pub  公钥，可告诉任何人
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;登录Github，依次点击&amp;rdquo;settings&amp;rdquo;——&amp;gt;&amp;ldquo;SSH and GPG keys&amp;rdquo;——&amp;gt;&amp;ldquo;New SSH Key&amp;rdquo;
&lt;img src=&#34;http://blog.mingguilu.com/media/git_13_01.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;填写Title，在Key文本框里粘贴&lt;code&gt;id_rsa.pub&lt;/code&gt;文件的内容，点击&amp;rdquo;Add SSH Key&amp;rdquo;&lt;/p&gt;

&lt;h3 id=&#34;1-3-安装hugo-https-github-com-spf13-hugo-releases:bd6ccd207b6b74639fc982765b5a80a8&#34;&gt;1.3 &lt;a href=&#34;https://github.com/spf13/hugo/releases&#34;&gt;安装Hugo&lt;/a&gt;&lt;/h3&gt;

&lt;h4 id=&#34;1-3-2-ubuntu:bd6ccd207b6b74639fc982765b5a80a8&#34;&gt;1.3.2 Ubuntu&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install hugo
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;1-3-1-windows-10:bd6ccd207b6b74639fc982765b5a80a8&#34;&gt;1.3.1 Windows 10&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;下载hugo-0.17-Windows-64bit.zip，并解压缩到C:\Program Files\Hugo\&lt;/li&gt;
&lt;li&gt;将hugo-0.17-windows-amd64.exe修改为hugo.exe&lt;/li&gt;
&lt;li&gt;运行sysdm.cpl，添加环境变量：高级-环境变量-系统变量-编辑PATH-新建-‪C:\Program Files\Hugo&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;2-定制hugo:bd6ccd207b6b74639fc982765b5a80a8&#34;&gt;2. 定制Hugo&lt;/h2&gt;

&lt;h3 id=&#34;2-1-clone大神spf13的博客项目源代码:bd6ccd207b6b74639fc982765b5a80a8&#34;&gt;2.1 Clone大神spf13的博客项目源代码&lt;/h3&gt;

&lt;p&gt;进入工作目录&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ cd d/HelloWorld/hugo/
$ pwd
/d/HelloWorld/hugo
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;clone大神spf13的博客项目源代码：&lt;a href=&#34;https://github.com/spf13/spf13.com&#34;&gt;spf13.com&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ git clone https://github.com/spf13/spf13.com.git
Cloning into &#39;spf13.com&#39;...
remote: Counting objects: 894, done.
remote: Total 894 (delta 0), reused 0 (delta 0), pack-reused 894
Receiving objects: 100% (894/894), 17.35 MiB | 20.00 KiB/s, done.
Resolving deltas: 100% (346/346), done.
Checking out files: 100% (366/366), done.
$ ls -A spf13.com/
.git/  .gitignore  archetypes/  config.toml  content/  layouts/  README.md  static/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;重新打开一个git bash，运行站点&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ cd /d/HelloWorld/hugo/spf13.com/
$ hugo server -w
Started building site
0 of 12 drafts rendered
0 future content
151 pages created
0 non-page files copied
0 paginator pages created
273 tags created
22 topics created
in 718 ms
Watching for changes in D:\HelloWorld\hugo\spf13.com\{content,layouts,static}
Serving pages from memory
Web Server is available at http://localhost:1313/ (bind address 127.0.0.1)
Press Ctrl+C to stop
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;在浏览器输入localhost:1313,查看效果:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.mingguilu.com/media/hugo_2_1_01.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;2-2-删除多余文件-修改项目名称:bd6ccd207b6b74639fc982765b5a80a8&#34;&gt;2.2 删除多余文件，修改项目名称&lt;/h3&gt;

&lt;p&gt;删除spf13.com\content\下三个目录post、presentation、project,这是导航栏对应的博文存放目录，删除后，稍后将创建自己的分类博文目录&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ rm -r spf13.com/content/post/
$ rm -r spf13.com/content/presentation/
$ rm -r spf13.com/content/project/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;删除spf13.com\static\media\下的所有图片文件(spf13博文中的图片)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; rm spf13.com/static/media/*
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ctrl+C停止站点运行，修改目录名为自己的项目名称&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ mv spf13.com/ IMkind_blog_hugo
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;删除项目的Git版本库&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ rm -rf IMkind_blog_hugo/ .git/
$ rm IMkind_blog_hugo/ .gitignore

$ cd IMkind_blog_hugo/
$ git status
fatal: Not a git repository (or any of the parent directories): .git
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;创建新的版本库&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ git init
Initialized empty Git repository in D:/HelloWorld/hugo/IMkind_blog_hugo/.git/
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;2-3-修改配置文件config-toml:bd6ccd207b6b74639fc982765b5a80a8&#34;&gt;2.3 修改配置文件config.toml&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.mingguilu.com/media/hugo_2_3_01.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;baseurl = &amp;quot;https://imkind.github.io/&amp;quot;
title = &amp;quot;Continuous  Delivery&amp;quot;
languageCode = &amp;quot;en-us&amp;quot;
disqusShortname = &amp;quot;&amp;quot;
copyright = &amp;quot;&amp;quot;
MetaDataFormat = &amp;quot;yaml&amp;quot;

[author]
    name = &amp;quot;IMkind&amp;quot;

[indexes]
    tag = &amp;quot;tags&amp;quot;
    topic = &amp;quot;topics&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;baeurl 博客地址，必须使用&lt;code&gt;https://&lt;/code&gt;,切记！&lt;/li&gt;
&lt;li&gt;title 博客标题&lt;/li&gt;
&lt;li&gt;disqusShortname  Disqus的用户名，不使用评论功能可留空&lt;/li&gt;
&lt;li&gt;copyright 版权信息&lt;/li&gt;
&lt;li&gt;name  博客作者署名&lt;/li&gt;
&lt;li&gt;其它项默认参数即可&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;启动站点，在浏览器可以看到效果了：&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.mingguilu.com/media/hugo_2_3_02.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;2-4-修改博客副标题:bd6ccd207b6b74639fc982765b5a80a8&#34;&gt;2.4 修改博客副标题&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.mingguilu.com/media/hugo_2_4_01.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;在 layouts\partials\subheader.html&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;div class=&amp;quot;icon-spf13-3&amp;quot; id=&amp;quot;logo&amp;quot;&amp;gt;

&amp;lt;div id=&amp;quot;byline&amp;quot;&amp;gt;by Steve Francia&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;修改为&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;div class=&amp;quot;icon-happy&amp;quot; id=&amp;quot;logo&amp;quot;&amp;gt;

&amp;lt;div id=&amp;quot;byline&amp;quot;&amp;gt;Hello , IMkind&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;spf13.com博客中所有的图标都是以 &lt;code&gt;css类&lt;/code&gt; 来实现，&lt;code&gt;\static\static\css&lt;/code&gt; 中以 &lt;code&gt;.icon-&lt;/code&gt; 开头的类各自定义了一个图标。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;例如：&lt;code&gt;.icon-happy&lt;/code&gt; 即 笑脸图标，浏览器查看效果：&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.mingguilu.com/media/hugo_2_4_02.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;2-5-修改导航条:bd6ccd207b6b74639fc982765b5a80a8&#34;&gt;2.5 修改导航条&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.mingguilu.com/media/hugo_2_5_01.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;在 layouts\partials\nav.html&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;ul id=&amp;quot;mainnav&amp;quot;&amp;gt;
    &amp;lt;li&amp;gt;
        &amp;lt;a href=&amp;quot;/post/&amp;quot;&amp;gt;
        &amp;lt;span class=&amp;quot;icon&amp;quot;&amp;gt; &amp;lt;i aria-hidden=&amp;quot;true&amp;quot; class=&amp;quot;icon-quill&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&amp;lt;/span&amp;gt;
        &amp;lt;span&amp;gt; blog &amp;lt;/span&amp;gt;
    &amp;lt;/a&amp;gt;
    &amp;lt;/li&amp;gt;
    &amp;lt;li&amp;gt;
    &amp;lt;a href=&amp;quot;/project/&amp;quot;&amp;gt;
        &amp;lt;span class=&amp;quot;icon&amp;quot;&amp;gt; &amp;lt;i aria-hidden=&amp;quot;true&amp;quot; class=&amp;quot;icon-console&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&amp;lt;/span&amp;gt;
        &amp;lt;span&amp;gt; code &amp;lt;/span&amp;gt;
    &amp;lt;/a&amp;gt;
    &amp;lt;/li&amp;gt;
    &amp;lt;li&amp;gt;
    &amp;lt;a href=&amp;quot;/presentation/&amp;quot;&amp;gt;
        &amp;lt;span class=&amp;quot;icon&amp;quot;&amp;gt; &amp;lt;i aria-hidden=&amp;quot;true&amp;quot; class=&amp;quot;icon-stats&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&amp;lt;/span&amp;gt;
        &amp;lt;span&amp;gt; talks &amp;lt;/span&amp;gt;
    &amp;lt;/a&amp;gt;
    &amp;lt;/li&amp;gt;
    &amp;lt;li&amp;gt;
    &amp;lt;a href=&amp;quot;http://stevefrancia.com&amp;quot;&amp;gt;
        &amp;lt;span class=&amp;quot;icon&amp;quot;&amp;gt; &amp;lt;i aria-hidden=&amp;quot;true&amp;quot; class=&amp;quot;icon-13&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&amp;lt;/span&amp;gt;
        &amp;lt;span&amp;gt; me &amp;lt;/span&amp;gt;
    &amp;lt;/a&amp;gt;
    &amp;lt;/li&amp;gt;
&amp;lt;/ul&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;修改为&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;ul id=&amp;quot;mainnav&amp;quot;&amp;gt;
    &amp;lt;li&amp;gt;
        &amp;lt;a href=&amp;quot;/感/&amp;quot;&amp;gt;
        &amp;lt;span class=&amp;quot;icon&amp;quot;&amp;gt; &amp;lt;i aria-hidden=&amp;quot;true&amp;quot; class=&amp;quot;icon-quill&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&amp;lt;/span&amp;gt;
        &amp;lt;span&amp;gt; 感 &amp;lt;/span&amp;gt;
    &amp;lt;/a&amp;gt;
    &amp;lt;/li&amp;gt;
    &amp;lt;li&amp;gt;
    &amp;lt;a href=&amp;quot;/猿/&amp;quot;&amp;gt;
        &amp;lt;span class=&amp;quot;icon&amp;quot;&amp;gt; &amp;lt;i aria-hidden=&amp;quot;true&amp;quot; class=&amp;quot;icon-code&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&amp;lt;/span&amp;gt;
        &amp;lt;span&amp;gt; 猿 &amp;lt;/span&amp;gt;
    &amp;lt;/a&amp;gt;
    &amp;lt;/li&amp;gt;
    &amp;lt;li&amp;gt;
    &amp;lt;a href=&amp;quot;/狮/&amp;quot;&amp;gt;
        &amp;lt;span class=&amp;quot;icon&amp;quot;&amp;gt; &amp;lt;i aria-hidden=&amp;quot;true&amp;quot; class=&amp;quot;icon-console&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&amp;lt;/span&amp;gt;
        &amp;lt;span&amp;gt; 狮 &amp;lt;/span&amp;gt;
    &amp;lt;/a&amp;gt;
    &amp;lt;/li&amp;gt;
    &amp;lt;li&amp;gt;
    &amp;lt;a href=&amp;quot;/about/index.html&amp;quot;&amp;gt;
        &amp;lt;span class=&amp;quot;icon&amp;quot;&amp;gt; &amp;lt;i aria-hidden=&amp;quot;true&amp;quot; class=&amp;quot;icon-user&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&amp;lt;/span&amp;gt;
        &amp;lt;span&amp;gt; 吾 &amp;lt;/span&amp;gt;
    &amp;lt;/a&amp;gt;
    &amp;lt;/li&amp;gt;
&amp;lt;/ul&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;注意：在源码中修改了每个导航标题之后，还要到www\content下创建对应的目录。但是直接创建的目录并不能起作用，即使目录中存在Markdown格式的文档，点击之后也会是一片空白。&lt;/p&gt;

&lt;p&gt;到底该怎么创建对应的目录呢？使用hugo new 命令：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ hugo new about.md
D:\HelloWorld\hugo\IMkind_blog_hugo\content\about.md created
$ hugo new 感/我的第一篇感.md
D:\HelloWorld\hugo\IMkind_blog_hugo\content\感\我的第一篇感.md created
$ hugo new 猿/我的第一篇猿.md
D:\HelloWorld\hugo\IMkind_blog_hugo\content\猿\我的第一篇猿.md created
$ hugo new 狮/我的第一篇狮.md
D:\HelloWorld\hugo\IMkind_blog_hugo\content\狮\我的第一篇狮.md created
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这样就创建好了三个对应目录感、猿、狮，并同时创建了markdown格式的博文，往每篇博文中写入一段内容，即可在浏览器看到效果，在导航栏点击对应的标题，显示对应目录下所有的博文标题。&lt;/p&gt;

&lt;p&gt;注意：必须往每篇博文正文写入一段内容，否则在页面上点击对应的导航标题都会跳转到空白页面。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.mingguilu.com/media/hugo_2_5_02.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;导航栏每行默认显示四个标题，超过会另取一行。可随意增加&lt;code&gt;&amp;lt;li&amp;gt;...&amp;lt;/li&amp;gt;&lt;/code&gt;数量，并创建对应的目录,如下：&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.mingguilu.com/media/hugo_2_5_03.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;2-6-修改侧边栏分享和社交:bd6ccd207b6b74639fc982765b5a80a8&#34;&gt;2.6 修改侧边栏分享和社交&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.mingguilu.com/media/hugo_2_6_01.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;在 layouts\partials\social.html 按需增减、修改&lt;code&gt;&amp;lt;li&amp;gt;...&amp;lt;/li&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;ul id=&amp;quot;social&amp;quot;&amp;gt;
    &amp;lt;li id=&amp;quot;follow&amp;quot;&amp;gt;
        &amp;lt;span class=&amp;quot;icon icon-heart-2&amp;quot;&amp;gt; &amp;lt;/span&amp;gt;
        &amp;lt;span class=&amp;quot;title&amp;quot;&amp;gt; follow &amp;lt;/span&amp;gt;
        &amp;lt;div class=&amp;quot;dropdown follow&amp;quot;&amp;gt;
            &amp;lt;ul class=&amp;quot;social&amp;quot;&amp;gt;
                &amp;lt;li&amp;gt; &amp;lt;a href=&amp;quot;http://github.com/imkind&amp;quot; target=&amp;quot;_blank&amp;quot; title=&amp;quot;GitHub&amp;quot; class=&amp;quot;github&amp;quot;&amp;gt;&amp;lt;span class=&amp;quot;icon icon-github&amp;quot;&amp;gt;&amp;lt;/span&amp;gt;GitHub&amp;lt;/a&amp;gt; &amp;lt;/li&amp;gt;
                &amp;lt;li&amp;gt; &amp;lt;a href=&amp;quot;http://weibo.com/kind0214&amp;quot; target=&amp;quot;_blank&amp;quot; title=&amp;quot;Weibo&amp;quot; class=&amp;quot;github&amp;quot;&amp;gt;&amp;lt;span class=&amp;quot;icon icon-feed&amp;quot;&amp;gt;&amp;lt;/span&amp;gt;Weibo&amp;lt;/a&amp;gt; &amp;lt;/li&amp;gt;
                &amp;lt;li&amp;gt; &amp;lt;a href=&amp;quot;http://www.facebook.com/kind0214&amp;quot; target=&amp;quot;_blank&amp;quot; title=&amp;quot;Join me on Facebook&amp;quot; class=&amp;quot;facebook&amp;quot;&amp;gt;&amp;lt;span class=&amp;quot;icon icon-facebook&amp;quot;&amp;gt;&amp;lt;/span&amp;gt;Facebook&amp;lt;/a&amp;gt; &amp;lt;/li&amp;gt;
                &amp;lt;li&amp;gt; &amp;lt;a href=&amp;quot;http://www.twitter.com/kind0214&amp;quot; target=&amp;quot;_blank&amp;quot; title=&amp;quot;Follow me on Twitter&amp;quot; class=&amp;quot;twitter&amp;quot;&amp;gt;&amp;lt;span class=&amp;quot;icon icon-twitter&amp;quot;&amp;gt;&amp;lt;/span&amp;gt;Twitter&amp;lt;/a&amp;gt; &amp;lt;/li&amp;gt;
                &amp;lt;li&amp;gt; &amp;lt;a href=&amp;quot;http://www.linkedin.com/in/luminggui&amp;quot; target=&amp;quot;_blank&amp;quot; title=&amp;quot;LinkedIn&amp;quot; class=&amp;quot;linkedin&amp;quot;&amp;gt;&amp;lt;span class=&amp;quot;icon icon-linkedin&amp;quot;&amp;gt;&amp;lt;/span&amp;gt;LinkedIn&amp;lt;/a&amp;gt; &amp;lt;/li&amp;gt;
                &amp;lt;li&amp;gt; &amp;lt;a href=&amp;quot;mailto:luminggui0214@gmail.com&amp;quot; target=&amp;quot;_blank&amp;quot; title=&amp;quot;Send an email&amp;quot; class=&amp;quot;email&amp;quot;&amp;gt;&amp;lt;span class=&amp;quot;icon icon-mail&amp;quot;&amp;gt;&amp;lt;/span&amp;gt;Email&amp;lt;/a&amp;gt; &amp;lt;/li&amp;gt;
            &amp;lt;/ul&amp;gt;
            &amp;lt;span class=&amp;quot;subcount icon-arrow-right&amp;quot;&amp;gt;&amp;lt;/span&amp;gt;
        &amp;lt;/div&amp;gt;
    &amp;lt;/li&amp;gt;
&amp;lt;/ul&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;在 static\css\style.css 调整侧边栏位置&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#social{position:absolute;bottom:2em;width:90%;left:5%}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;修改为&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#social{position:relative;top:1em;width:90%;left:5%}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;浏览器查看效果&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.mingguilu.com/media/hugo_2_6_02.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;2-7-修改脚注:bd6ccd207b6b74639fc982765b5a80a8&#34;&gt;2.7 修改脚注&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.mingguilu.com/media/hugo_2_7_01.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;在 layouts\partials\footer.html 修改脚注内容&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;        &amp;lt;footer&amp;gt;
          &amp;lt;div&amp;gt;
            &amp;lt;p&amp;gt;
            &amp;amp;copy;2016
                &amp;lt;span itemprop=&amp;quot;name&amp;quot;&amp;gt;IMkind .&amp;lt;/span&amp;gt;
            Powered by &amp;lt;a href=&amp;quot;http://gohugo.io&amp;quot;&amp;gt;Hugo&amp;lt;/a&amp;gt;.
                Theme by &amp;lt;a href=&amp;quot;http://servergrove.com&amp;quot;&amp;gt;Server Francia&amp;lt;/a&amp;gt;.
            &amp;lt;/p&amp;gt;
          &amp;lt;/div&amp;gt;
        &amp;lt;/footer&amp;gt;
    &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;在浏览器查看效果&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.mingguilu.com/media/hugo_2_7_02.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;2-8-修改博文正文显示页的布局:bd6ccd207b6b74639fc982765b5a80a8&#34;&gt;2.8 修改博文正文显示页的布局&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.mingguilu.com/media/hugo_2_8_01.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h4 id=&#34;2-8-1-修改博客作者相关介绍:bd6ccd207b6b74639fc982765b5a80a8&#34;&gt;2.8.1 修改博客作者相关介绍&lt;/h4&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.mingguilu.com/media/hugo_2_8_1_01.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;在 layouts\partials\details.html  对作者介绍部分 &lt;code&gt;&amp;lt;div&amp;gt;&amp;lt;section id=&amp;quot;author&amp;quot;&amp;gt;...&amp;lt;/section&amp;gt;&amp;lt;/div&amp;gt;&lt;/code&gt; 稍作修改即可，由于本人实在太过平淡无奇，索性去掉这一部分&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;!--
&amp;lt;div&amp;gt;&amp;lt;section id=&amp;quot;author&amp;quot;&amp;gt;
...
&amp;lt;/section&amp;gt;&amp;lt;/div&amp;gt;
--&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;2-8-2-修改博文创建时间-字数统计-阅读时间-tags-topics的显示位置:bd6ccd207b6b74639fc982765b5a80a8&#34;&gt;2.8.2 修改博文创建时间、字数统计、阅读时间、tags、topics的显示位置&lt;/h4&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.mingguilu.com/media/hugo_2_8_2_01.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;将博文创建时间、字数统计、阅读时间、tags、topics的显示位置调整到标题和正文之间&lt;/p&gt;

&lt;p&gt;在 layouts_default\single.html&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;section id=&amp;quot;main&amp;quot;&amp;gt;
  &amp;lt;h1 itemprop=&amp;quot;name&amp;quot; id=&amp;quot;title&amp;quot;&amp;gt;{{ .Title }}&amp;lt;/h1&amp;gt;
  &amp;lt;div&amp;gt;
        &amp;lt;article itemprop=&amp;quot;articleBody&amp;quot; id=&amp;quot;content&amp;quot;&amp;gt;
           {{ .Content }}
        &amp;lt;/article&amp;gt;
  &amp;lt;/div&amp;gt;
&amp;lt;/section&amp;gt;

{{ partial &amp;quot;meta_aside.html&amp;quot; . }}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;修改为&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;section id=&amp;quot;main&amp;quot;&amp;gt;
  &amp;lt;h1 itemprop=&amp;quot;name&amp;quot; id=&amp;quot;title&amp;quot;&amp;gt;{{ .Title }}&amp;lt;/h1&amp;gt;
  {{ partial &amp;quot;meta_aside.html&amp;quot; . }}
  &amp;lt;div&amp;gt;
        &amp;lt;article itemprop=&amp;quot;articleBody&amp;quot; id=&amp;quot;content&amp;quot;&amp;gt;
           {{ .Content }}
        &amp;lt;/article&amp;gt;
  &amp;lt;/div&amp;gt;
&amp;lt;/section&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;在浏览器查看效果&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.mingguilu.com/media/hugo_2_8_2_02.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h4 id=&#34;2-8-3-修改上下篇链接的显示位置:bd6ccd207b6b74639fc982765b5a80a8&#34;&gt;2.8.3 修改上下篇链接的显示位置&lt;/h4&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.mingguilu.com/media/hugo_2_8_3_01.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;在 layouts\partials\details.html 中删除或注释掉上下篇链接相关代码&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;!--
&amp;lt;div&amp;gt;
    &amp;lt;section id=&amp;quot;prev&amp;quot;&amp;gt;
        &amp;amp;nbsp;{{if .Prev}}&amp;lt;a class=&amp;quot;previous&amp;quot; href=&amp;quot;{{.Prev.Permalink}}&amp;quot;&amp;gt;&amp;lt;i class=&amp;quot;icon-arrow-left&amp;quot;&amp;gt;&amp;lt;/i&amp;gt; {{.Prev.Title}}&amp;lt;/a&amp;gt;&amp;lt;br&amp;gt;{{end}}
    &amp;lt;/section&amp;gt;
    &amp;lt;section id=&amp;quot;next&amp;quot;&amp;gt;
        &amp;amp;nbsp;{{if .Next}}&amp;lt;a class=&amp;quot;next&amp;quot; href=&amp;quot;{{.Next.Permalink}}&amp;quot;&amp;gt;{{.Next.Title}} &amp;lt;i class=&amp;quot;icon-arrow-right&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&amp;lt;/a&amp;gt;{{end}}
    &amp;lt;/section&amp;gt;
&amp;lt;/div&amp;gt;
--&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;新建 layouts\partials\prevnext.html，代码如下&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;div&amp;gt;
    &amp;lt;section id=&amp;quot;prev&amp;quot;&amp;gt;
        &amp;amp;nbsp;{{if .Prev}}&amp;lt;a class=&amp;quot;previous&amp;quot; href=&amp;quot;{{.Prev.Permalink}}&amp;quot;&amp;gt;&amp;lt;i class=&amp;quot;icon-arrow-left&amp;quot;&amp;gt;&amp;lt;/i&amp;gt; {{.Prev.Title}}&amp;lt;/a&amp;gt;&amp;lt;br&amp;gt;{{end}}
    &amp;lt;/section&amp;gt;
    &amp;lt;section id=&amp;quot;next&amp;quot;&amp;gt;
        &amp;amp;nbsp;{{if .Next}}&amp;lt;a class=&amp;quot;next&amp;quot; href=&amp;quot;{{.Next.Permalink}}&amp;quot;&amp;gt;{{.Next.Title}} &amp;lt;i class=&amp;quot;icon-arrow-right&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&amp;lt;/a&amp;gt;{{end}}
    &amp;lt;/section&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;新建 layouts\partials\prevnext_aside.html，代码如下&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{ $baseurl := .Site.BaseURL }}

&amp;lt;aside id=&amp;quot;prevnext&amp;quot;&amp;gt;
{{ partial &amp;quot;prevnext.html&amp;quot; . }}
&amp;lt;/aside&amp;gt;

&amp;lt;meta itemprop=&amp;quot;wordCount&amp;quot; content=&amp;quot;{{ .WordCount }}&amp;quot;&amp;gt;
&amp;lt;meta itemprop=&amp;quot;datePublished&amp;quot; content=&amp;quot;{{ .Date.Format &amp;quot;2006-01-02&amp;quot; }}&amp;quot;&amp;gt;
&amp;lt;meta itemprop=&amp;quot;url&amp;quot; content=&amp;quot;{{ .Permalink }}&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;在 layouts_default\single.html&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;section id=&amp;quot;main&amp;quot;&amp;gt;
  &amp;lt;h1 itemprop=&amp;quot;name&amp;quot; id=&amp;quot;title&amp;quot;&amp;gt;{{ .Title }}&amp;lt;/h1&amp;gt;
  {{ partial &amp;quot;meta_aside.html&amp;quot; . }}
  &amp;lt;div&amp;gt;
        &amp;lt;article itemprop=&amp;quot;articleBody&amp;quot; id=&amp;quot;content&amp;quot;&amp;gt;
           {{ .Content }}
        &amp;lt;/article&amp;gt;
  &amp;lt;/div&amp;gt;
&amp;lt;/section&amp;gt;

{{ partial &amp;quot;disqus.html&amp;quot; . }}
{{ partial &amp;quot;footer.html&amp;quot; . }}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;修改为&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;section id=&amp;quot;main&amp;quot;&amp;gt;
  &amp;lt;h1 itemprop=&amp;quot;name&amp;quot; id=&amp;quot;title&amp;quot;&amp;gt;{{ .Title }}&amp;lt;/h1&amp;gt;
  {{ partial &amp;quot;meta_aside.html&amp;quot; . }}
  &amp;lt;div&amp;gt;
        &amp;lt;article itemprop=&amp;quot;articleBody&amp;quot; id=&amp;quot;content&amp;quot;&amp;gt;
           {{ .Content }}
        &amp;lt;/article&amp;gt;
  &amp;lt;/div&amp;gt;
{{ partial &amp;quot;prevnext_aside.html&amp;quot; . }}
&amp;lt;/section&amp;gt;

{{ partial &amp;quot;disqus.html&amp;quot; . }}
{{ partial &amp;quot;footer.html&amp;quot; . }}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;在 static\css\style.css&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#main&amp;gt;div,footer&amp;gt;div,#meta&amp;gt;div,#content,#comments&amp;gt;div{position:relative;text-align:left;margin:0 auto;word-wrap:break-word}

#next,#prev{width:50% !important;padding-top:2em}

#main&amp;gt;div,footer&amp;gt;div,#meta&amp;gt;div,#meta&amp;gt;section,#content,#comments&amp;gt;div{max-width:38em}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;修改为&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#main&amp;gt;div,footer&amp;gt;div,#meta&amp;gt;div,#content,#comments&amp;gt;div,#prevnext&amp;gt;div{position:relative;text-align:left;margin:0 auto;word-wrap:break-word}

#next,#prev{width:50% !important;padding-top:2em;float:left;}

#main&amp;gt;div,footer&amp;gt;div,#meta&amp;gt;div,#meta&amp;gt;section,#content,#comments&amp;gt;div,#prevnext&amp;gt;div{max-width:100%}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;在浏览器查看效果
&lt;img src=&#34;http://blog.mingguilu.com/media/hugo_2_8_3_02.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;2-9-修改字号大小:bd6ccd207b6b74639fc982765b5a80a8&#34;&gt;2.9 修改字号大小&lt;/h3&gt;

&lt;p&gt;在 static\css\style.css&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;body{font-size:0.9em;line-height:1.8em}
h1{font-size:1.6em;line-height:1.8em}
h2{font-size:1.4em;line-height:1.8em}
h3{font-size:1.2em;line-height:1.8em}
h4{font-size:1.1em;line-height:1.8em}
h5{font-size:1em;line-height:1.8em}

h1#title{font-size:1.6em !important;line-height:1.8em}
h1,h2{font-size:1.6em;line-height:1.8em}
h2{font-size:1.4em;font-weight:normal}
h3{margin:1.3em 0 1.5em}

.post-meta{color:#34495e;font-size:90%}

body&amp;gt;footer p{margin:0;padding:0;font-size:90%;line-height:1.5em}

body&amp;gt;section,body&amp;gt;aside,body&amp;gt;footer,body&amp;gt;.content{font-size:0.9em;line-height:1.8em}

body&amp;gt;section,body&amp;gt;aside,body&amp;gt;.content,body&amp;gt;footer,#comments{margin:1em 7.14286% 0 28.57143%;font-size:0.9em;line-height:1.8em;*zoom:1}

body&amp;gt;section,body&amp;gt;aside,body&amp;gt;.content,body&amp;gt;footer,#comments{margin:1em 21.42857% 0 21.42857%;font-size:0.9em;line-height:1.8em;*zoom:1}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;2-10-修改网站标题:bd6ccd207b6b74639fc982765b5a80a8&#34;&gt;2.10 修改网站标题&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.mingguilu.com/media/hugo_2_10_01.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;在 layouts\partials\header.html&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;title&amp;gt; {{ .Title }} - spf13.com &amp;lt;/title&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;将网站标题spf13.com修改为imkind.github.io&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;title&amp;gt; {{ .Title }} - imkind.github.io &amp;lt;/title&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.mingguilu.com/media/hugo_2_10_02.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;2-11-修改og标签:bd6ccd207b6b74639fc982765b5a80a8&#34;&gt;2.11 修改og标签&lt;/h3&gt;

&lt;p&gt;摘自知乎：
&lt;code&gt;og是一种新的HTTP头部标记，即Open Graph Protocol，用了Meta Property=og标签，就是你同意了网页内容可以被其他社会化网站引用等&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;在 layouts\partials\meta.html 将大神spf13相关的信息修改为自己的，或者注释掉这一部分&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;!-- open graph --&amp;gt;
&amp;lt;meta property=&amp;quot;og:type&amp;quot; content=&amp;quot;article&amp;quot;/&amp;gt;
&amp;lt;meta property=&amp;quot;og:description&amp;quot; content=&amp;quot;{{ .Description }}&amp;quot;/&amp;gt;
&amp;lt;meta property=&amp;quot;og:title&amp;quot; content=&amp;quot;{{ .Title }} : spf13.com&amp;quot;/&amp;gt;
&amp;lt;meta property=&amp;quot;og:site_name&amp;quot; content=&amp;quot;spf13 is Steve Francia&amp;quot;/&amp;gt;
&amp;lt;meta property=&amp;quot;og:image&amp;quot; content=&amp;quot;&amp;quot; /&amp;gt;
&amp;lt;meta property=&amp;quot;og:image:type&amp;quot; content=&amp;quot;image/jpeg&amp;quot; /&amp;gt;
&amp;lt;meta property=&amp;quot;og:image:width&amp;quot; content=&amp;quot;&amp;quot; /&amp;gt;
&amp;lt;meta property=&amp;quot;og:image:height&amp;quot; content=&amp;quot;&amp;quot; /&amp;gt;
&amp;lt;meta property=&amp;quot;og:url&amp;quot; content=&amp;quot;{{ .Permalink }}&amp;quot;&amp;gt;
&amp;lt;meta property=&amp;quot;og:locale&amp;quot; content=&amp;quot;en_US&amp;quot;&amp;gt;
&amp;lt;meta property=&amp;quot;article:published_time&amp;quot; content=&amp;quot;{{ .Date.Format &amp;quot;2006-01-02&amp;quot; }}&amp;quot;/&amp;gt;
&amp;lt;meta property=&amp;quot;article:modified_time&amp;quot; content=&amp;quot;{{ .Date.Format &amp;quot;2006-01-02&amp;quot; }}&amp;quot;/&amp;gt;

&amp;lt;!--Twitter Cards--&amp;gt;
&amp;lt;meta name=&amp;quot;twitter:card&amp;quot; content=&amp;quot;summary&amp;quot;&amp;gt;
&amp;lt;!--&amp;lt;meta name=&amp;quot;twitter:card&amp;quot; content=&amp;quot;summary_large_image&amp;quot;&amp;gt;--&amp;gt;
&amp;lt;meta name=&amp;quot;twitter:site&amp;quot; content=&amp;quot;@spf13&amp;quot;&amp;gt;
&amp;lt;meta name=&amp;quot;twitter:title&amp;quot; content=&amp;quot;{{ .Title }} : spf13.com&amp;quot;&amp;gt;
&amp;lt;meta name=&amp;quot;twitter:creator&amp;quot; content=&amp;quot;@spf13&amp;quot;&amp;gt;
&amp;lt;meta name=&amp;quot;twitter:description&amp;quot; content=&amp;quot;{{ .Description }}&amp;quot;&amp;gt;
&amp;lt;meta name=&amp;quot;twitter:image:src&amp;quot; content=&amp;quot;&amp;quot;&amp;gt;
&amp;lt;meta name=&amp;quot;twitter:domain&amp;quot; content=&amp;quot;spf13.com&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;2-12-多说评论系统:bd6ccd207b6b74639fc982765b5a80a8&#34;&gt;2.12 多说评论系统&lt;/h3&gt;

&lt;p&gt;spf13.com默认使用了&lt;a href=&#34;https://disqus.com/&#34;&gt;Disqus&lt;/a&gt;评论系统，我去注册并在博客配置之后，无法显示评论区，而且在打开博文时因为连接Disqus服务器严重拖慢速度，于是更换了国产的&lt;a href=&#34;http://duoshuo.com/&#34;&gt;多说&lt;/a&gt;评论系统，相对于内置了Disqus，多说评论系统的植入稍微复杂一点。&lt;/p&gt;

&lt;h4 id=&#34;2-12-1-注册-多说-http-duoshuo-com-评论系统:bd6ccd207b6b74639fc982765b5a80a8&#34;&gt;2.12.1 注册&lt;a href=&#34;http://duoshuo.com/&#34;&gt;多说&lt;/a&gt;评论系统&lt;/h4&gt;

&lt;p&gt;打开多说首页，点击“登录”，使用SNS账号登录，我选择了微博。
&lt;img src=&#34;http://blog.mingguilu.com/media/hugo_2_12_1_01.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h4 id=&#34;2-12-2-创建站点:bd6ccd207b6b74639fc982765b5a80a8&#34;&gt;2.12.2 创建站点&lt;/h4&gt;

&lt;p&gt;登录之后就跳转到站点配置的页面
&lt;img src=&#34;http://blog.mingguilu.com/media/hugo_2_12_2_01.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h4 id=&#34;2-12-3-获取植入代码:bd6ccd207b6b74639fc982765b5a80a8&#34;&gt;2.12.3 获取植入代码&lt;/h4&gt;

&lt;p&gt;工具——&amp;gt;获取代码——&amp;gt;稳定版
&lt;img src=&#34;http://blog.mingguilu.com/media/hugo_2_12_3_01.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h4 id=&#34;2-12-4-植入多说代码:bd6ccd207b6b74639fc982765b5a80a8&#34;&gt;2.12.4 植入多说代码&lt;/h4&gt;

&lt;p&gt;在 layouts\partials\disqus.html&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;aside id=comments&amp;gt;
    &amp;lt;div&amp;gt;&amp;lt;h2&amp;gt; Comments &amp;lt;/h2&amp;gt;&amp;lt;/div&amp;gt;

     {{ template &amp;quot;_internal/disqus.html&amp;quot; . }}

&amp;lt;/aside&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;修改为&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;aside id=comments&amp;gt;
    &amp;lt;div&amp;gt;&amp;lt;h2&amp;gt; Comments &amp;lt;/h2&amp;gt;&amp;lt;/div&amp;gt;

     &amp;lt;!-- {{ template &amp;quot;_internal/disqus.html&amp;quot; . }} --&amp;gt;

     &amp;lt;!-- 多说评论框 start --&amp;gt;
    &amp;lt;div class=&amp;quot;ds-thread&amp;quot; data-thread-key=&amp;quot;{{ .URL }}&amp;quot; data-title=&amp;quot;{{ .Title }}&amp;quot; data-url=&amp;quot;{{ .Permalink }}&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;
    &amp;lt;!-- 多说评论框 end --&amp;gt;
    &amp;lt;!-- 多说公共JS代码 start (一个网页只需插入一次) --&amp;gt;
    &amp;lt;script type=&amp;quot;text/javascript&amp;quot;&amp;gt;
    var duoshuoQuery = {short_name:&amp;quot;imkind&amp;quot;};
        (function() {
            var ds = document.createElement(&#39;script&#39;);
            ds.type = &#39;text/javascript&#39;;ds.async = true;
            ds.src = (document.location.protocol == &#39;https:&#39; ? &#39;https:&#39; : &#39;http:&#39;) + &#39;//static.duoshuo.com/embed.js&#39;;
            ds.charset = &#39;UTF-8&#39;;
            (document.getElementsByTagName(&#39;head&#39;)[0]
             || document.getElementsByTagName(&#39;body&#39;)[0]).appendChild(ds);
        })();
        &amp;lt;/script&amp;gt;
    &amp;lt;!-- 多说公共JS代码 end --&amp;gt;

&amp;lt;/aside&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;2-12-5-设置duoshuoshortname:bd6ccd207b6b74639fc982765b5a80a8&#34;&gt;2.12.5 设置duoshuoShortname&lt;/h4&gt;

&lt;p&gt;在 config.toml&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;disqusShortname = &amp;quot;&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;修改为&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;duoshuoShortname = &amp;quot;imkind&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;在浏览器中博文下方查看效果&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.mingguilu.com/media/hugo_2_12_5_01.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;2-13-代码高亮:bd6ccd207b6b74639fc982765b5a80a8&#34;&gt;2.13 代码高亮&lt;/h3&gt;

&lt;h4 id=&#34;2-13-1-使用在线js-加载速度慢-不推荐使用:bd6ccd207b6b74639fc982765b5a80a8&#34;&gt;2.13.1 使用在线js(加载速度慢，不推荐使用)&lt;/h4&gt;

&lt;p&gt;参考：&lt;a href=&#34;http://nanshu.wang/&#34;&gt;nanshu.wang&lt;/a&gt;的教程&lt;a href=&#34;http://nanshu.wang/post/2015-01-31/&#34;&gt;Hugo静态网站生成器中文教程&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;在 layouts\partials\head_includes.html 添加&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;script src=&amp;quot;https://yandex.st/highlightjs/8.0/highlight.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;https://yandex.st/highlightjs/8.0/styles/default.min.css&amp;quot;&amp;gt;
&amp;lt;script&amp;gt;hljs.initHighlightingOnLoad();&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;在浏览器查看效果&lt;/p&gt;

&lt;h4 id=&#34;2-13-2-使用本地配置-highlight-js-https-highlightjs-org-推荐使用:bd6ccd207b6b74639fc982765b5a80a8&#34;&gt;2.13.2 使用本地配置&lt;a href=&#34;https://highlightjs.org/&#34;&gt;highlight.js&lt;/a&gt;（推荐使用）&lt;/h4&gt;

&lt;p&gt;参考：&lt;a href=&#34;http://newoxygen.github.io&#34;&gt;http://newoxygen.github.io&lt;/a&gt; 的教程 &lt;a href=&#34;http://newoxygen.github.io/post/hugo%E5%BF%AB%E9%80%9F%E5%BB%BA%E7%AB%99/#2.2&#34;&gt;hugo快速建站&lt;/a&gt;&lt;/p&gt;

&lt;h5 id=&#34;2-13-2-1-下载-highlight-js-https-highlightjs-org:bd6ccd207b6b74639fc982765b5a80a8&#34;&gt;2.13.2.1 下载 &lt;a href=&#34;https://highlightjs.org/&#34;&gt;highlight.js&lt;/a&gt;&lt;/h5&gt;

&lt;p&gt;打开&lt;a href=&#34;https://highlightjs.org/&#34;&gt;highlight.js&lt;/a&gt;首页，点击 &lt;a href=&#34;https://highlightjs.org/download/&#34;&gt;Get version 9.8.0&lt;/a&gt;，勾选常用的编程语言，点击“Download”下载，解压&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ls highlight/
CHANGES.md  highlight.pack.js  LICENSE  README.md  README.ru.md  styles/
&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;2-13-2-2-植入highlight-js:bd6ccd207b6b74639fc982765b5a80a8&#34;&gt;2.13.2.2 植入highlight.js&lt;/h5&gt;

&lt;p&gt;复制 highlight.pack.js 到 static\static\js&lt;/p&gt;

&lt;p&gt;重命名 styles 为 highlight，并复制到 static\static\css&lt;/p&gt;

&lt;p&gt;在layouts\partials\header.html 添加&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;!-- Highlight.js --&amp;gt;
&amp;lt;script src=&amp;quot;{{ .Site.BaseURL }}static/js/highlight.pack.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;{{ .Site.BaseURL }}static/css/highlight/github.css&amp;quot;&amp;gt;
&amp;lt;script&amp;gt;hljs.initHighlightingOnLoad();&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;可根据个人爱好调用 static\static\css\highlight 中的css样式。&lt;/p&gt;

&lt;h4 id=&#34;2-14-植入百度统计:bd6ccd207b6b74639fc982765b5a80a8&#34;&gt;2.14 植入百度统计&lt;/h4&gt;

&lt;p&gt;注册&lt;a href=&#34;http://tongji.baidu.com&#34;&gt;百度统计&lt;/a&gt;，在“管理”中“新增网站”&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.mingguilu.com/media/hugo_2_14_01.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;拷贝“统计代码”至 layouts\partials\header.html 的&lt;code&gt;&amp;lt;/head&amp;gt;&lt;/code&gt;标签前&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;script&amp;gt;]
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement(&amp;quot;script&amp;quot;);
  hm.src = &amp;quot;https://hm.baidu.com/hm.js?3d1fd52b11dc0bde2abdc4760452f3dc&amp;quot;;
  var s = document.getElementsByTagName(&amp;quot;script&amp;quot;)[0];
  s.parentNode.insertBefore(hm, s);
})();
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;2-15-植入google-analytics-分析:bd6ccd207b6b74639fc982765b5a80a8&#34;&gt;2.15 植入Google Analytics(分析)&lt;/h4&gt;

&lt;p&gt;注册&lt;a href=&#34;http://www.google.cn/intl/zh-CN_ALL/analytics/features/analysis-tools.html&#34;&gt;Google Analytics (分析)&lt;/a&gt;，在“管理”——“媒体资源”中“创建新媒体资源”&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.mingguilu.com/media/hugo_2_15_01.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;拷贝“跟踪代码”至 layouts\partials\header.html 的&lt;code&gt;&amp;lt;/head&amp;gt;&lt;/code&gt;标签前&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;script&amp;gt;
  (function(i,s,o,g,r,a,m){i[&#39;GoogleAnalyticsObject&#39;]=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,&#39;script&#39;,&#39;https://www.google-analytics.com/analytics.js&#39;,&#39;ga&#39;);

  ga(&#39;create&#39;, &#39;UA-86857821-1&#39;, &#39;auto&#39;);
  ga(&#39;send&#39;, &#39;pageview&#39;);
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;3-部署hugo到github-pages个人主页:bd6ccd207b6b74639fc982765b5a80a8&#34;&gt;3. 部署hugo到Github pages个人主页&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://pages.github.com/#user-site&#34;&gt;Github pages&lt;/a&gt;有两种类型，个人主页（User site）和项目主页（Project site）。个人主页一个账号只能有一个，必须以[your-github-account].github.io命名来创建repository。&lt;/p&gt;

&lt;h4 id=&#34;3-1-在github新建-your-hugo-project-name-仓库-用于托管hugo静态博客系统源代码:bd6ccd207b6b74639fc982765b5a80a8&#34;&gt;3.1 在Github新建[your-hugo-project-name]仓库，用于托管hugo静态博客系统源代码&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;https://github.com/imkind/IMkind_blog_hugo
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;3-2-在github新建-your-github-account-github-io仓库-用于存放hugo生成得静态博客站点文件:bd6ccd207b6b74639fc982765b5a80a8&#34;&gt;3.2 在Github新建[your-github-account].github.io仓库，用于存放hugo生成得静态博客站点文件&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;https://github.com/imkind/imkind.github.io
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;3-3-创建本地的git仓库:bd6ccd207b6b74639fc982765b5a80a8&#34;&gt;3.3 创建本地的git仓库&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;$ git init
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;3-4-添加远程库-把本地git仓库同远程库关联起来:bd6ccd207b6b74639fc982765b5a80a8&#34;&gt;3.4 添加远程库，把本地git仓库同远程库关联起来&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;$ git remote add origin git@github.com:[your-github-account]/[your-hugo-project-name].git
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;即&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ git remote add origin git@github.com:imkind/IMkind_blog_hugo.git
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;3-5-查看项目下是否有生成了静态页面的-public-目录-如果有删除掉-只要执行-hugo-即可重新生成-因为下一步配置子项目时-会再创建一个public目录:bd6ccd207b6b74639fc982765b5a80a8&#34;&gt;3.5 查看项目下是否有生成了静态页面的&lt;code&gt;public&lt;/code&gt;目录，如果有删除掉（只要执行&lt;code&gt;hugo&lt;/code&gt;即可重新生成），因为下一步配置子项目时，会再创建一个public目录&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;$ rm -rf public/
&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;3-6-把-your-github-account-github-io设置为-your-hugo-project-name-的子项目-命令会-clone-远程仓库-your-github-account-github-io到本地并重命名为-public:bd6ccd207b6b74639fc982765b5a80a8&#34;&gt;3.6 把[your-github-account].github.io设置为[your-hugo-project-name]的子项目，命令会&lt;code&gt;clone&lt;/code&gt;远程仓库[your-github-account].github.io到本地并重命名为&lt;code&gt;public&lt;/code&gt;&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;$ git submodule add git@github.com:[your-github-account]/[your-github-account].github.io.git  public
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;即&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ git submodule add git@github.com:imkind/imkind.github.io.git public
Cloning into &#39;D:/HelloWorld/hugo/IMkind_blog_hugo/public&#39;...
warning: You appear to have cloned an empty repository.
fatal: You are on a branch yet to be born
Unable to checkout submodule &#39;public&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;3-7-把pulic目录写入-gitignore文件-在之后提交hugo项目源代码时就会忽略public目录:bd6ccd207b6b74639fc982765b5a80a8&#34;&gt;3.7 把pulic目录写入.gitignore文件，在之后提交hugo项目源代码时就会忽略public目录&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;$ echo &amp;quot;/public&amp;quot; &amp;gt; .gitignore
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;3-8-把submodule配置写入-gitmodules文件-如ls-a看不到该文件-可自行创建并添加内容:bd6ccd207b6b74639fc982765b5a80a8&#34;&gt;3.8 把submodule配置写入.gitmodules文件。如ls -A看不到该文件，可自行创建并添加内容。&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;$ vim .gitmodules

[submodule &amp;quot;public&amp;quot;]
    path = public
    url = git@github.com:imkind/imkind.github.io.git
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;3-9-初次提交至github远程仓库-使用了-u-参数-之后改动代码提交到github-只需-git-push-origin-master:bd6ccd207b6b74639fc982765b5a80a8&#34;&gt;3.9 初次提交至github远程仓库,使用了&lt;code&gt;-u&lt;/code&gt;参数,之后改动代码提交到github，只需&lt;code&gt;git push origin master&lt;/code&gt;&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;$ git add -A

$ git commit -m &amp;quot;first commit&amp;quot;

$ git push -u origin master
Counting objects: 379, done.
Delta compression using up to 4 threads.
Compressing objects: 100% (368/368), done.
Writing objects: 100% (379/379), 1.15 MiB | 0 bytes/s, done.
Total 379 (delta 157), reused 0 (delta 0)
remote: Resolving deltas: 100% (157/157), done.
To github.com:imkind/IMkind_blog_hugo.git
 * [new branch]      master -&amp;gt; master
Branch master set up to track remote branch master from origin.
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;3-10-生成静态站点到public目录下:bd6ccd207b6b74639fc982765b5a80a8&#34;&gt;3.10 生成静态站点到public目录下&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;$ hugo
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;3-11-初次提交pubic目录下的静态站点内容到远程仓库:bd6ccd207b6b74639fc982765b5a80a8&#34;&gt;3.11 初次提交pubic目录下的静态站点内容到远程仓库&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;$ cd public

$ git add -A

$ git commit -m &amp;quot;first post&amp;quot;

$ git push -u origin master
Counting objects: 219, done.
Delta compression using up to 4 threads.
Compressing objects: 100% (210/210), done.
Writing objects: 100% (219/219), 1.16 MiB | 51.00 KiB/s, done.
Total 219 (delta 71), reused 0 (delta 0)
remote: Resolving deltas: 100% (71/71), done.
To https://github.com/imkind/imkind.github.io.git
 * [new branch]      master -&amp;gt; master
Branch master set up to track remote branch master from origin.
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;4-部署成功-在浏览器访问-https-your-github-account-github-io-就看到自己的博客了:bd6ccd207b6b74639fc982765b5a80a8&#34;&gt;4. 部署成功，在浏览器访问 https://[your-github-account].github.io 就看到自己的博客了。&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.mingguilu.com/media/hugo_4_01.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h4 id=&#34;参考:bd6ccd207b6b74639fc982765b5a80a8&#34;&gt;&lt;em&gt;参考&lt;/em&gt;&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://spf13.com/&#34;&gt;Steve Francia&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.gohugo.org/&#34;&gt;Hugo中文文档&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.gohugo.org/post/coderzh-hugo/&#34;&gt;使用hugo搭建个人博客站点&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://nanshu.wang/post/2015-01-31/&#34;&gt;Hugo静态网站生成器中文教程&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.bpcoder.com/2015/12/hugo-create-blog/&#34;&gt;利用 Hugo &amp;amp; GitHub 搭建个人博客静态网站&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>about</title>
      <link>http://blog.mingguilu.com/about/</link>
      <pubDate>Wed, 30 Nov 2016 16:53:18 +0800</pubDate>
      
      <guid>http://blog.mingguilu.com/about/</guid>
      <description>&lt;p&gt;关于我，IMkind&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>